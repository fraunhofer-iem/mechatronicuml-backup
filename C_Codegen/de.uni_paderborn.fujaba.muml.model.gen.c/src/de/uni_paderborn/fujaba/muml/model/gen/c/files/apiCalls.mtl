[comment encoding = UTF-8 /]
[**
 * This module contains the templates, which can be used to generate
 * header and implementation file for the used APICalls of the model
 * and their implementation body.
 */]
[module apiCalls('http://www.fujaba.de/muml/connector/0.4.0', 'http://www.fujaba.de/muml/behavior/0.4.0',
				'http://www.storydriven.org/core/0.3.1',
				'http://www.fujaba.de/muml/actionlanguage/0.4.0',
				'http://www.fujaba.de/muml/msgtype/0.4.0',
				'http://www.fujaba.de/muml/types/0.4.0',
				'http://www.fujaba.de/modelinstance/0.4.0',
				'http://www.fujaba.de/muml/component/0.4.0',
				'http://www.fujaba.de/muml/instance/0.4.0',
				'http://www.fujaba.de/muml/realtimestatechart/0.4.0',
				'http://www.fujaba.de/muml/hardware/1.0/',
				'http://www.fujaba.de/muml/psm/codegen/0.1.0',
				'http://www.fujaba.de/muml/swplatform/0.4.0/',
				'http://www.fujaba.de/muml/psm/0.4.0/')]

[import de::uni_paderborn::fujaba::muml::model::gen::c::queries::stringQueries]
[import de::uni_paderborn::fujaba::muml::model::gen::c::actionlanguage::expression]



[**
 * Generates the header file for all used APICalls.
 * @param rsri The ECU, which contains all API-Calls
 * @param path for target folder
 */]
[template public generateApiImplementationHeader(rsri : RefinedStructuredResourceInstance, path : String)]

[file (path+'apiCallCode/implementations.h', false, 'UTF-8')]
/**
 * @file 
 * @author generated
 * @brief Specification of API-Calls for the Continuous Port Instances
 * @details This files contains the implementation of the API-Bindings for the Continuous Port Instance as it is specified in the API-Port-Mapping.
 *          The abstract API-Calls which are used in the Realtime-Statecharts are implemented here.
 */

#ifndef APICALL_H_
#define APICALL_H_

#include "../lib/types.h"

[for (apiCall : Operation | rsri.allocatedAtomicComponentInstances.eAllContents(Operation))]
[if (apiCall.oclIsKindOf(APICallParameterBinding))]
/**
 * @brief Implemtation of the Parameterbinding: [apiCall.getName()/] of the Port-Instance: PortInstance: [apiCall.eContainer().oclAsType(PortInstance).name/] of the ComponentInstance: [apiCall.eContainer().oclAsType(PortInstance).componentInstance.name/] 
 */
		[apiCall.returnType.getTypeName()/] [apiCall.getMethodName()/]([for (p : Parameter | apiCall.parameters) separator (',')][p.dataType.getTypeName()/][/for]);	
[/if]
[/for]



#endif /*APICALL_H_ */
[/file]
[/template]

[**
 * Generates the implementation file for all used APICalls.
 * Here the implementations of the used APIcalls are generated. This implementations
 * are used by the (parameterized) RealtimeStatecharts.
 * @param rsri The ECU, which contains all API-Calls
 * @param path for target folder
 */]
[template public generateApiImplementationClass(rsri : RefinedStructuredResourceInstance, path : String)]

[file (path+'apiCallCode/implementations.c', false, 'UTF-8')]
#include "implementations.h"
[comment add a protected area for additional includes by the user/]
/** [protected ('user includes **/')] 

/**[/protected]**/

[comment generate every API-Call. Add a protected area inside of each generated API-Call function/]
[for (apiCall : Operation | rsri.allocatedAtomicComponentInstances.eAllContents(Operation))]
[if (apiCall.oclIsKindOf(APICallParameterBinding))]
		[apiCall.returnType.getTypeName()/] [apiCall.getMethodName()/]([for (p : Parameter | apiCall.parameters) separator (',')][p.dataType.getTypeName()/] [p.getName()/][/for]){
/** [protected (apiCall.getName()+' **/')] 
		[apiCall.oclAsType(APICallParameterBinding).implementations.generateExpression('')/]
/**[/protected]**/
}	
[/if]	
[/for]
[/file]
[/template]

