[comment encoding = UTF-8 /]
[module main('http://www.fujaba.de/muml/connector/0.4.0', 'http://www.fujaba.de/muml/behavior/0.4.0',
				'http://www.storydriven.org/core/0.3.1',
				'http://www.fujaba.de/muml/actionlanguage/0.4.0',
				'http://www.fujaba.de/muml/msgtype/0.4.0',
				'http://www.fujaba.de/muml/types/0.4.0',
				'http://www.fujaba.de/modelinstance/0.4.0',
				'http://www.fujaba.de/muml/component/0.4.0',
				'http://www.fujaba.de/muml/instance/0.4.0',
				'http://www.fujaba.de/muml/realtimestatechart/0.4.0',
				'http://www.fujaba.de/muml/hardware/1.0/',
				'http://www.fujaba.de/muml/psm/0.4.0/')]

[import de::uni_paderborn::fujaba::muml::codegen::c::psm::middleware::GlobalIdentifier]
[import de::uni_paderborn::fujaba::muml::codegen::c::psm::middleware::Core]
[import de::uni_paderborn::fujaba::muml::codegen::c::psm::middleware::InternalLogic]
[import de::uni_paderborn::fujaba::muml::codegen::c::psm::middleware::NetworkInterfaces]
[import de::uni_paderborn::fujaba::muml::codegen::c::psm::files::APICalls]
[import de::uni_paderborn::fujaba::muml::codegen::c::psm::files::Message]

[import de::uni_paderborn::fujaba::muml::codegen::c::main::main]
[import de::uni_paderborn::fujaba::muml::codegen::c::nxtOSEK::main::main]


[template public generateForCodegenModel(codegen : CodeGenAllocation)]
[comment @main/]
[for (rsri : RefinedStructuredResourceInstance | codegen.hpic.eAllContents(RefinedStructuredResourceInstance))]

[comment generate code for target platform/]
[comment @TODO add if-statement for distinguishing target platforms, when we have a property for OS in the HW model/]
[generateANSIC(rsri.allocatedAtomicComponentInstances, rsri.oclAsType(StructuredResourceInstance).name+'/')/]

[comment create APICall files/]
[generateAPICallFiles(rsri,rsri.oclAsType(StructuredResourceInstance).name+'/')/]

[comment create middleware impl files/]
[generateMiddleware(rsri, rsri.oclAsType(StructuredResourceInstance).name+'/', codegen)/]
[/for]
[/template]


[**
 * Generates all middleware files for the MechatronicUML specific middleware for a specific ECU
 * @param rsri the home ECU
 * @param path the current path for generating files
 * @param cgm the corresponding codegen model (e.g. neede for routing)
 */]
[template public generateMiddleware(rsri : RefinedStructuredResourceInstance, path:String, cgm : CodeGenAllocation)]
	[generateMiddlewareCoreFiles(rsri, path)/]
	[generateMiddlewareILFiles(rsri, path, cgm)/]
	[generateNetworkInterfaces(rsri, path)/]
	[generateGlobalIdentifierFiles(cgm, path)/]
	[comment generateProtobufMessageFile(rsri, path)/]
	[comment generateProtobufNewHeader(rsri, path)/]
	
[/template]


[**
 * Generates all API-Calls for a specific ECU.
 * Similar to operations.
 * @param rsri the home ECU
 * @param path the current path for generating files
 */]
[template public generateAPICallFiles(rsri : RefinedStructuredResourceInstance, path:String)]
[generateApiImplementationHeader(rsri, path)/]
[generateApiImplementationClass(rsri, path)/]
[/template]