/*
* generated by Xtext
*/
grammar InternalDotLanguage;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.uni_paderborn.fujaba.graphviz.dot.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.uni_paderborn.fujaba.graphviz.dot.xtext.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.uni_paderborn.fujaba.graphviz.dot.xtext.services.DotLanguageGrammarAccess;

}

@parser::members {

 	private DotLanguageGrammarAccess grammarAccess;
 	
    public InternalDotLanguageParser(TokenStream input, DotLanguageGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "DotGraph";	
   	}
   	
   	@Override
   	protected DotLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleDotGraph
entryRuleDotGraph returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDotGraphRule()); }
	 iv_ruleDotGraph=ruleDotGraph 
	 { $current=$iv_ruleDotGraph.current; } 
	 EOF 
;

// Rule DotGraph
ruleDotGraph returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDotGraphAccess().getDotGraphAction_0(),
            $current);
    }
)((((
(
		lv_directedGraph_1_0=	'digraph' 
    {
        newLeafNode(lv_directedGraph_1_0, grammarAccess.getDotGraphAccess().getDirectedGraphDigraphKeyword_1_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDotGraphRule());
	        }
       		setWithLastConsumed($current, "directedGraph", true, "digraph");
	    }

)
)
    |	otherlv_2='graph' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDotGraphAccess().getGraphKeyword_1_0_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDotGraphAccess().getIdDotIDParserRuleCall_1_0_1_0()); 
	    }
		lv_id_3_0=ruleDotID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDotGraphRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_3_0, 
        		"DotID");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |(	otherlv_4='subgraph' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDotGraphAccess().getSubgraphKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDotGraphAccess().getIdDotIDParserRuleCall_1_1_1_0()); 
	    }
		lv_id_5_0=ruleDotID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDotGraphRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_5_0, 
        		"DotID");
	        afterParserOrEnumRuleCall();
	    }

)
)?))	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDotGraphAccess().getLeftCurlyBracketKeyword_2());
    }
((	otherlv_7='graph' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDotGraphAccess().getGraphKeyword_3_0_0());
    }
	otherlv_8='[' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDotGraphAccess().getLeftSquareBracketKeyword_3_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDotGraphAccess().getGraphSettingsSettingParserRuleCall_3_0_2_0()); 
	    }
		lv_graphSettings_9_0=ruleSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDotGraphRule());
	        }
       		add(
       			$current, 
       			"graphSettings",
        		lv_graphSettings_9_0, 
        		"Setting");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDotGraphAccess().getCommaKeyword_3_0_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDotGraphAccess().getGraphSettingsSettingParserRuleCall_3_0_3_1_0()); 
	    }
		lv_graphSettings_11_0=ruleSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDotGraphRule());
	        }
       		add(
       			$current, 
       			"graphSettings",
        		lv_graphSettings_11_0, 
        		"Setting");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_12=']' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDotGraphAccess().getRightSquareBracketKeyword_3_0_4());
    }
(	otherlv_13=';' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getDotGraphAccess().getSemicolonKeyword_3_0_5());
    }
)?)
    |(	otherlv_14='node' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getDotGraphAccess().getNodeKeyword_3_1_0());
    }
	otherlv_15='[' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getDotGraphAccess().getLeftSquareBracketKeyword_3_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDotGraphAccess().getNodeSettingsSettingParserRuleCall_3_1_2_0()); 
	    }
		lv_nodeSettings_16_0=ruleSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDotGraphRule());
	        }
       		add(
       			$current, 
       			"nodeSettings",
        		lv_nodeSettings_16_0, 
        		"Setting");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_17=',' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getDotGraphAccess().getCommaKeyword_3_1_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDotGraphAccess().getNodeSettingsSettingParserRuleCall_3_1_3_1_0()); 
	    }
		lv_nodeSettings_18_0=ruleSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDotGraphRule());
	        }
       		add(
       			$current, 
       			"nodeSettings",
        		lv_nodeSettings_18_0, 
        		"Setting");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_19=']' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getDotGraphAccess().getRightSquareBracketKeyword_3_1_4());
    }
(	otherlv_20=';' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getDotGraphAccess().getSemicolonKeyword_3_1_5());
    }
)?)
    |(	otherlv_21='edge' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getDotGraphAccess().getEdgeKeyword_3_2_0());
    }
	otherlv_22='[' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getDotGraphAccess().getLeftSquareBracketKeyword_3_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDotGraphAccess().getEdgeSettingsSettingParserRuleCall_3_2_2_0()); 
	    }
		lv_edgeSettings_23_0=ruleSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDotGraphRule());
	        }
       		add(
       			$current, 
       			"edgeSettings",
        		lv_edgeSettings_23_0, 
        		"Setting");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_24=',' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getDotGraphAccess().getCommaKeyword_3_2_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDotGraphAccess().getEdgeSettingsSettingParserRuleCall_3_2_3_1_0()); 
	    }
		lv_edgeSettings_25_0=ruleSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDotGraphRule());
	        }
       		add(
       			$current, 
       			"edgeSettings",
        		lv_edgeSettings_25_0, 
        		"Setting");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_26=']' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getDotGraphAccess().getRightSquareBracketKeyword_3_2_4());
    }
(	otherlv_27=';' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getDotGraphAccess().getSemicolonKeyword_3_2_5());
    }
)?)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDotGraphAccess().getSubgraphsDotGraphParserRuleCall_3_3_0()); 
	    }
		lv_subgraphs_28_0=ruleDotGraph		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDotGraphRule());
	        }
       		add(
       			$current, 
       			"subgraphs",
        		lv_subgraphs_28_0, 
        		"DotGraph");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDotGraphAccess().getNodesDotNodeParserRuleCall_3_4_0()); 
	    }
		lv_nodes_29_0=ruleDotNode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDotGraphRule());
	        }
       		add(
       			$current, 
       			"nodes",
        		lv_nodes_29_0, 
        		"DotNode");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDotGraphAccess().getEdgesDotEdgeParserRuleCall_3_5_0()); 
	    }
		lv_edges_30_0=ruleDotEdge		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDotGraphRule());
	        }
       		add(
       			$current, 
       			"edges",
        		lv_edges_30_0, 
        		"DotEdge");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_31='}' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getDotGraphAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleDotNode
entryRuleDotNode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDotNodeRule()); }
	 iv_ruleDotNode=ruleDotNode 
	 { $current=$iv_ruleDotNode.current; } 
	 EOF 
;

// Rule DotNode
ruleDotNode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDotNodeAccess().getNameDotIDParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleDotID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDotNodeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"DotID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDotNodeAccess().getLeftSquareBracketKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDotNodeAccess().getSettingsSettingParserRuleCall_1_1_0()); 
	    }
		lv_settings_2_0=ruleSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDotNodeRule());
	        }
       		add(
       			$current, 
       			"settings",
        		lv_settings_2_0, 
        		"Setting");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDotNodeAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDotNodeAccess().getSettingsSettingParserRuleCall_1_2_1_0()); 
	    }
		lv_settings_4_0=ruleSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDotNodeRule());
	        }
       		add(
       			$current, 
       			"settings",
        		lv_settings_4_0, 
        		"Setting");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDotNodeAccess().getRightSquareBracketKeyword_1_3());
    }
)?(	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDotNodeAccess().getSemicolonKeyword_2());
    }
)?)
;





// Entry rule entryRuleDotEdge
entryRuleDotEdge returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDotEdgeRule()); }
	 iv_ruleDotEdge=ruleDotEdge 
	 { $current=$iv_ruleDotEdge.current; } 
	 EOF 
;

// Rule DotEdge
ruleDotEdge returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDotEdgeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDotEdgeAccess().getSourceDotNodeCrossReference_0_0()); 
	    }
		ruleDotID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='--' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDotEdgeAccess().getHyphenMinusHyphenMinusKeyword_1_0());
    }

    |	otherlv_2='->' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDotEdgeAccess().getHyphenMinusGreaterThanSignKeyword_1_1());
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDotEdgeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDotEdgeAccess().getTargetDotNodeCrossReference_2_0()); 
	    }
		ruleDotID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDotEdgeAccess().getLeftSquareBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDotEdgeAccess().getSettingsSettingParserRuleCall_3_1_0()); 
	    }
		lv_settings_5_0=ruleSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDotEdgeRule());
	        }
       		add(
       			$current, 
       			"settings",
        		lv_settings_5_0, 
        		"Setting");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDotEdgeAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDotEdgeAccess().getSettingsSettingParserRuleCall_3_2_1_0()); 
	    }
		lv_settings_7_0=ruleSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDotEdgeRule());
	        }
       		add(
       			$current, 
       			"settings",
        		lv_settings_7_0, 
        		"Setting");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8=']' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDotEdgeAccess().getRightSquareBracketKeyword_3_3());
    }
)?(	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDotEdgeAccess().getSemicolonKeyword_4());
    }
)?)
;





// Entry rule entryRuleSetting
entryRuleSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSettingRule()); }
	 iv_ruleSetting=ruleSetting 
	 { $current=$iv_ruleSetting.current; } 
	 EOF 
;

// Rule Setting
ruleSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSettingAccess().getAttributeDotIDParserRuleCall_0_0()); 
	    }
		lv_attribute_0_0=ruleDotID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSettingRule());
	        }
       		set(
       			$current, 
       			"attribute",
        		lv_attribute_0_0, 
        		"DotID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSettingAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSettingAccess().getValueDotIDParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleDotID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSettingRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"DotID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDotID
entryRuleDotID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDotIDRule()); } 
	 iv_ruleDotID=ruleDotID 
	 { $current=$iv_ruleDotID.current.getText(); }  
	 EOF 
;

// Rule DotID
ruleDotID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_DOTSTRINGTERM_0=RULE_DOTSTRINGTERM    {
		$current.merge(this_DOTSTRINGTERM_0);
    }

    { 
    newLeafNode(this_DOTSTRINGTERM_0, grammarAccess.getDotIDAccess().getDOTSTRINGTERMTerminalRuleCall_0()); 
    }

    |    this_NUMPREFIXEDID_1=RULE_NUMPREFIXEDID    {
		$current.merge(this_NUMPREFIXEDID_1);
    }

    { 
    newLeafNode(this_NUMPREFIXEDID_1, grammarAccess.getDotIDAccess().getNUMPREFIXEDIDTerminalRuleCall_1()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getDotIDAccess().getNumberParserRuleCall_2()); 
    }
    this_Number_2=ruleNumber    {
		$current.merge(this_Number_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_ID_3=RULE_ID    {
		$current.merge(this_ID_3);
    }

    { 
    newLeafNode(this_ID_3, grammarAccess.getDotIDAccess().getIDTerminalRuleCall_3()); 
    }
)
    ;





// Entry rule entryRuleNumber
entryRuleNumber returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberRule()); } 
	 iv_ruleNumber=ruleNumber 
	 { $current=$iv_ruleNumber.current.getText(); }  
	 EOF 
;

// Rule Number
ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNumberAccess().getHyphenMinusKeyword_0()); 
    }
)?(    this_DOUBLE_1=RULE_DOUBLE    {
		$current.merge(this_DOUBLE_1);
    }

    { 
    newLeafNode(this_DOUBLE_1, grammarAccess.getNumberAccess().getDOUBLETerminalRuleCall_1_0()); 
    }

    |    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1()); 
    }
))
    ;





RULE_NUMPREFIXEDID : RULE_INT RULE_ID;

RULE_DOTSTRINGTERM : '"' ~('"')* '"';

RULE_DOUBLE : RULE_INT+ '.' RULE_INT+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


