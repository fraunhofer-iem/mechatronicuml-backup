/*
* generated by Xtext
*/
grammar InternalFOTCTL;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package de.uni_paderborn.fujaba.muml.verification.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.uni_paderborn.fujaba.muml.verification.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.uni_paderborn.fujaba.muml.verification.services.FOTCTLGrammarAccess;

}

@parser::members {
 
 	private FOTCTLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(FOTCTLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleFoTCTLSpec
entryRuleFoTCTLSpec 
:
{ before(grammarAccess.getFoTCTLSpecRule()); }
	 ruleFoTCTLSpec
{ after(grammarAccess.getFoTCTLSpecRule()); } 
	 EOF 
;

// Rule FoTCTLSpec
ruleFoTCTLSpec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getGroup()); }
(rule__FoTCTLSpec__Group__0)
{ after(grammarAccess.getFoTCTLSpecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFoTCTLFormula
entryRuleFoTCTLFormula 
:
{ before(grammarAccess.getFoTCTLFormulaRule()); }
	 ruleFoTCTLFormula
{ after(grammarAccess.getFoTCTLFormulaRule()); } 
	 EOF 
;

// Rule FoTCTLFormula
ruleFoTCTLFormula
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFoTCTLFormulaAccess().getGroup()); }
(rule__FoTCTLFormula__Group__0)
{ after(grammarAccess.getFoTCTLFormulaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFormulaDefinition
entryRuleFormulaDefinition 
:
{ before(grammarAccess.getFormulaDefinitionRule()); }
	 ruleFormulaDefinition
{ after(grammarAccess.getFormulaDefinitionRule()); } 
	 EOF 
;

// Rule FormulaDefinition
ruleFormulaDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFormulaDefinitionAccess().getAlternatives()); }
(rule__FormulaDefinition__Alternatives)
{ after(grammarAccess.getFormulaDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNodeLabelPredicateDecl
entryRuleNodeLabelPredicateDecl 
:
{ before(grammarAccess.getNodeLabelPredicateDeclRule()); }
	 ruleNodeLabelPredicateDecl
{ after(grammarAccess.getNodeLabelPredicateDeclRule()); } 
	 EOF 
;

// Rule NodeLabelPredicateDecl
ruleNodeLabelPredicateDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeLabelPredicateDeclAccess().getGroup()); }
(rule__NodeLabelPredicateDecl__Group__0)
{ after(grammarAccess.getNodeLabelPredicateDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEdgeLabelPredicateDecl
entryRuleEdgeLabelPredicateDecl 
:
{ before(grammarAccess.getEdgeLabelPredicateDeclRule()); }
	 ruleEdgeLabelPredicateDecl
{ after(grammarAccess.getEdgeLabelPredicateDeclRule()); } 
	 EOF 
;

// Rule EdgeLabelPredicateDecl
ruleEdgeLabelPredicateDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEdgeLabelPredicateDeclAccess().getGroup()); }
(rule__EdgeLabelPredicateDecl__Group__0)
{ after(grammarAccess.getEdgeLabelPredicateDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantSymbolDecl
entryRuleConstantSymbolDecl 
:
{ before(grammarAccess.getConstantSymbolDeclRule()); }
	 ruleConstantSymbolDecl
{ after(grammarAccess.getConstantSymbolDeclRule()); } 
	 EOF 
;

// Rule ConstantSymbolDecl
ruleConstantSymbolDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantSymbolDeclAccess().getGroup()); }
(rule__ConstantSymbolDecl__Group__0)
{ after(grammarAccess.getConstantSymbolDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstant
entryRuleConstant 
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantAccess().getGroup()); }
(rule__Constant__Group__0)
{ after(grammarAccess.getConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getGroup()); }
(rule__Variable__Group__0)
{ after(grammarAccess.getVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryFormula
entryRuleUnaryFormula 
:
{ before(grammarAccess.getUnaryFormulaRule()); }
	 ruleUnaryFormula
{ after(grammarAccess.getUnaryFormulaRule()); } 
	 EOF 
;

// Rule UnaryFormula
ruleUnaryFormula
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryFormulaAccess().getAlternatives()); }
(rule__UnaryFormula__Alternatives)
{ after(grammarAccess.getUnaryFormulaAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinaryFormula
entryRuleBinaryFormula 
:
{ before(grammarAccess.getBinaryFormulaRule()); }
	 ruleBinaryFormula
{ after(grammarAccess.getBinaryFormulaRule()); } 
	 EOF 
;

// Rule BinaryFormula
ruleBinaryFormula
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinaryFormulaAccess().getAlternatives()); }
(rule__BinaryFormula__Alternatives)
{ after(grammarAccess.getBinaryFormulaAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicFormula
entryRuleAtomicFormula 
:
{ before(grammarAccess.getAtomicFormulaRule()); }
	 ruleAtomicFormula
{ after(grammarAccess.getAtomicFormulaRule()); } 
	 EOF 
;

// Rule AtomicFormula
ruleAtomicFormula
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicFormulaAccess().getAlternatives()); }
(rule__AtomicFormula__Alternatives)
{ after(grammarAccess.getAtomicFormulaAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNodeLabelPredicate
entryRuleNodeLabelPredicate 
:
{ before(grammarAccess.getNodeLabelPredicateRule()); }
	 ruleNodeLabelPredicate
{ after(grammarAccess.getNodeLabelPredicateRule()); } 
	 EOF 
;

// Rule NodeLabelPredicate
ruleNodeLabelPredicate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeLabelPredicateAccess().getGroup()); }
(rule__NodeLabelPredicate__Group__0)
{ after(grammarAccess.getNodeLabelPredicateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEdgeLabelPredicate
entryRuleEdgeLabelPredicate 
:
{ before(grammarAccess.getEdgeLabelPredicateRule()); }
	 ruleEdgeLabelPredicate
{ after(grammarAccess.getEdgeLabelPredicateRule()); } 
	 EOF 
;

// Rule EdgeLabelPredicate
ruleEdgeLabelPredicate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEdgeLabelPredicateAccess().getGroup()); }
(rule__EdgeLabelPredicate__Group__0)
{ after(grammarAccess.getEdgeLabelPredicateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuantifiedFormula
entryRuleQuantifiedFormula 
:
{ before(grammarAccess.getQuantifiedFormulaRule()); }
	 ruleQuantifiedFormula
{ after(grammarAccess.getQuantifiedFormulaRule()); } 
	 EOF 
;

// Rule QuantifiedFormula
ruleQuantifiedFormula
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuantifiedFormulaAccess().getGroup()); }
(rule__QuantifiedFormula__Group__0)
{ after(grammarAccess.getQuantifiedFormulaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleNotFormula
entryRuleNotFormula 
:
{ before(grammarAccess.getNotFormulaRule()); }
	 ruleNotFormula
{ after(grammarAccess.getNotFormulaRule()); } 
	 EOF 
;

// Rule NotFormula
ruleNotFormula
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotFormulaAccess().getGroup()); }
(rule__NotFormula__Group__0)
{ after(grammarAccess.getNotFormulaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleUnaryTemporalFormula
entryRuleUnaryTemporalFormula 
:
{ before(grammarAccess.getUnaryTemporalFormulaRule()); }
	 ruleUnaryTemporalFormula
{ after(grammarAccess.getUnaryTemporalFormulaRule()); } 
	 EOF 
;

// Rule UnaryTemporalFormula
ruleUnaryTemporalFormula
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryTemporalFormulaAccess().getGroup()); }
(rule__UnaryTemporalFormula__Group__0)
{ after(grammarAccess.getUnaryTemporalFormulaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinaryTemporalFormula
entryRuleBinaryTemporalFormula 
:
{ before(grammarAccess.getBinaryTemporalFormulaRule()); }
	 ruleBinaryTemporalFormula
{ after(grammarAccess.getBinaryTemporalFormulaRule()); } 
	 EOF 
;

// Rule BinaryTemporalFormula
ruleBinaryTemporalFormula
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinaryTemporalFormulaAccess().getGroup()); }
(rule__BinaryTemporalFormula__Group__0)
{ after(grammarAccess.getBinaryTemporalFormulaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinaryLogicFormula
entryRuleBinaryLogicFormula 
:
{ before(grammarAccess.getBinaryLogicFormulaRule()); }
	 ruleBinaryLogicFormula
{ after(grammarAccess.getBinaryLogicFormulaRule()); } 
	 EOF 
;

// Rule BinaryLogicFormula
ruleBinaryLogicFormula
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinaryLogicFormulaAccess().getGroup()); }
(rule__BinaryLogicFormula__Group__0)
{ after(grammarAccess.getBinaryLogicFormulaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerm
entryRuleTerm 
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTermAccess().getAlternatives()); }
(rule__Term__Alternatives)
{ after(grammarAccess.getTermAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicProposition
entryRuleAtomicProposition 
:
{ before(grammarAccess.getAtomicPropositionRule()); }
	 ruleAtomicProposition
{ after(grammarAccess.getAtomicPropositionRule()); } 
	 EOF 
;

// Rule AtomicProposition
ruleAtomicProposition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicPropositionAccess().getGroup()); }
(rule__AtomicProposition__Group__0)
{ after(grammarAccess.getAtomicPropositionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Quantifier
ruleQuantifier
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantifierAccess().getAlternatives()); }
(rule__Quantifier__Alternatives)
{ after(grammarAccess.getQuantifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule BinaryLogicOperator
ruleBinaryLogicOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryLogicOperatorAccess().getAlternatives()); }
(rule__BinaryLogicOperator__Alternatives)
{ after(grammarAccess.getBinaryLogicOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ComparisonOperator
ruleComparisonOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonOperatorAccess().getAlternatives()); }
(rule__ComparisonOperator__Alternatives)
{ after(grammarAccess.getComparisonOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule TemporalOperator
ruleTemporalOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalOperatorAccess().getAlternatives()); }
(rule__TemporalOperator__Alternatives)
{ after(grammarAccess.getTemporalOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__FormulaDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormulaDefinitionAccess().getAtomicFormulaParserRuleCall_0()); }
	ruleAtomicFormula
{ after(grammarAccess.getFormulaDefinitionAccess().getAtomicFormulaParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFormulaDefinitionAccess().getUnaryFormulaParserRuleCall_1()); }
	ruleUnaryFormula
{ after(grammarAccess.getFormulaDefinitionAccess().getUnaryFormulaParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFormulaDefinitionAccess().getBinaryFormulaParserRuleCall_2()); }
	ruleBinaryFormula
{ after(grammarAccess.getFormulaDefinitionAccess().getBinaryFormulaParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryFormula__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryFormulaAccess().getNotFormulaParserRuleCall_0()); }
	ruleNotFormula
{ after(grammarAccess.getUnaryFormulaAccess().getNotFormulaParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnaryFormulaAccess().getUnaryTemporalFormulaParserRuleCall_1()); }
	ruleUnaryTemporalFormula
{ after(grammarAccess.getUnaryFormulaAccess().getUnaryTemporalFormulaParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getUnaryFormulaAccess().getQuantifiedFormulaParserRuleCall_2()); }
	ruleQuantifiedFormula
{ after(grammarAccess.getUnaryFormulaAccess().getQuantifiedFormulaParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryFormula__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryFormulaAccess().getBinaryLogicFormulaParserRuleCall_0()); }
	ruleBinaryLogicFormula
{ after(grammarAccess.getBinaryFormulaAccess().getBinaryLogicFormulaParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBinaryFormulaAccess().getBinaryTemporalFormulaParserRuleCall_1()); }
	ruleBinaryTemporalFormula
{ after(grammarAccess.getBinaryFormulaAccess().getBinaryTemporalFormulaParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicFormula__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicFormulaAccess().getNodeLabelPredicateParserRuleCall_0()); }
	ruleNodeLabelPredicate
{ after(grammarAccess.getAtomicFormulaAccess().getNodeLabelPredicateParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAtomicFormulaAccess().getEdgeLabelPredicateParserRuleCall_1()); }
	ruleEdgeLabelPredicate
{ after(grammarAccess.getAtomicFormulaAccess().getEdgeLabelPredicateParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Term__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getVariableParserRuleCall_0()); }
	ruleVariable
{ after(grammarAccess.getTermAccess().getVariableParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTermAccess().getConstantParserRuleCall_1()); }
	ruleConstant
{ after(grammarAccess.getTermAccess().getConstantParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTermAccess().getAtomicPropositionParserRuleCall_2()); }
	ruleAtomicProposition
{ after(grammarAccess.getTermAccess().getAtomicPropositionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Quantifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantifierAccess().getEXISTSEnumLiteralDeclaration_0()); }
(	'exists' 
)
{ after(grammarAccess.getQuantifierAccess().getEXISTSEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getQuantifierAccess().getFORALLEnumLiteralDeclaration_1()); }
(	'forall' 
)
{ after(grammarAccess.getQuantifierAccess().getFORALLEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryLogicOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryLogicOperatorAccess().getANDEnumLiteralDeclaration_0()); }
(	' & ' 
)
{ after(grammarAccess.getBinaryLogicOperatorAccess().getANDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBinaryLogicOperatorAccess().getEQUIVEnumLiteralDeclaration_1()); }
(	' <=> ' 
)
{ after(grammarAccess.getBinaryLogicOperatorAccess().getEQUIVEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getBinaryLogicOperatorAccess().getIMPLYEnumLiteralDeclaration_2()); }
(	' => ' 
)
{ after(grammarAccess.getBinaryLogicOperatorAccess().getIMPLYEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getBinaryLogicOperatorAccess().getOREnumLiteralDeclaration_3()); }
(	' | ' 
)
{ after(grammarAccess.getBinaryLogicOperatorAccess().getOREnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getBinaryLogicOperatorAccess().getXOREnumLiteralDeclaration_4()); }
(	' ^ ' 
)
{ after(grammarAccess.getBinaryLogicOperatorAccess().getXOREnumLiteralDeclaration_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
(	' = ' 
)
{ after(grammarAccess.getComparisonOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getComparisonOperatorAccess().getGREATEREnumLiteralDeclaration_1()); }
(	' > ' 
)
{ after(grammarAccess.getComparisonOperatorAccess().getGREATEREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getComparisonOperatorAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_2()); }
(	' >= ' 
)
{ after(grammarAccess.getComparisonOperatorAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getComparisonOperatorAccess().getLESSEnumLiteralDeclaration_3()); }
(	' < ' 
)
{ after(grammarAccess.getComparisonOperatorAccess().getLESSEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getComparisonOperatorAccess().getLESS_OR_EQUALEnumLiteralDeclaration_4()); }
(	' <= ' 
)
{ after(grammarAccess.getComparisonOperatorAccess().getLESS_OR_EQUALEnumLiteralDeclaration_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalOperatorAccess().getAFEnumLiteralDeclaration_0()); }
(	'AF' 
)
{ after(grammarAccess.getTemporalOperatorAccess().getAFEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTemporalOperatorAccess().getAGEnumLiteralDeclaration_1()); }
(	'AG' 
)
{ after(grammarAccess.getTemporalOperatorAccess().getAGEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getTemporalOperatorAccess().getAUEnumLiteralDeclaration_2()); }
(	'AU' 
)
{ after(grammarAccess.getTemporalOperatorAccess().getAUEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getTemporalOperatorAccess().getEFEnumLiteralDeclaration_3()); }
(	'EF' 
)
{ after(grammarAccess.getTemporalOperatorAccess().getEFEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getTemporalOperatorAccess().getEGEnumLiteralDeclaration_4()); }
(	'EG' 
)
{ after(grammarAccess.getTemporalOperatorAccess().getEGEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getTemporalOperatorAccess().getEUEnumLiteralDeclaration_5()); }
(	'EU' 
)
{ after(grammarAccess.getTemporalOperatorAccess().getEUEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__FoTCTLSpec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group__0__Impl
	rule__FoTCTLSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getFoTCTLSpecAction_0()); }
(

)
{ after(grammarAccess.getFoTCTLSpecAccess().getFoTCTLSpecAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoTCTLSpec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group__1__Impl
	rule__FoTCTLSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getDeclarationKeyword_1()); }

	'Declaration\n' 

{ after(grammarAccess.getFoTCTLSpecAccess().getDeclarationKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoTCTLSpec__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group__2__Impl
	rule__FoTCTLSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getGroup_2()); }
(rule__FoTCTLSpec__Group_2__0)?
{ after(grammarAccess.getFoTCTLSpecAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoTCTLSpec__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group__3__Impl
	rule__FoTCTLSpec__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getGroup_3()); }
(rule__FoTCTLSpec__Group_3__0)?
{ after(grammarAccess.getFoTCTLSpecAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoTCTLSpec__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group__4__Impl
	rule__FoTCTLSpec__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getGroup_4()); }
(rule__FoTCTLSpec__Group_4__0)?
{ after(grammarAccess.getFoTCTLSpecAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoTCTLSpec__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group__5__Impl
	rule__FoTCTLSpec__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getFormulasKeyword_5()); }

	'Formulas\n' 

{ after(grammarAccess.getFoTCTLSpecAccess().getFormulasKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoTCTLSpec__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFoTCTLSpecAccess().getFormulasAssignment_6()); }
(rule__FoTCTLSpec__FormulasAssignment_6)
{ after(grammarAccess.getFoTCTLSpecAccess().getFormulasAssignment_6()); }
)
(
{ before(grammarAccess.getFoTCTLSpecAccess().getFormulasAssignment_6()); }
(rule__FoTCTLSpec__FormulasAssignment_6)*
{ after(grammarAccess.getFoTCTLSpecAccess().getFormulasAssignment_6()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__FoTCTLSpec__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group_2__0__Impl
	rule__FoTCTLSpec__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getNodeLabelPredicatesKeyword_2_0()); }

	'NodeLabelPredicates {' 

{ after(grammarAccess.getFoTCTLSpecAccess().getNodeLabelPredicatesKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoTCTLSpec__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group_2__1__Impl
	rule__FoTCTLSpec__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getNodeLabelPredicatesAssignment_2_1()); }
(rule__FoTCTLSpec__NodeLabelPredicatesAssignment_2_1)
{ after(grammarAccess.getFoTCTLSpecAccess().getNodeLabelPredicatesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoTCTLSpec__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group_2__2__Impl
	rule__FoTCTLSpec__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getGroup_2_2()); }
(rule__FoTCTLSpec__Group_2_2__0)*
{ after(grammarAccess.getFoTCTLSpecAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoTCTLSpec__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getRightCurlyBracketLineFeedLfKeyword_2_3()); }

	'}\n' 

{ after(grammarAccess.getFoTCTLSpecAccess().getRightCurlyBracketLineFeedLfKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FoTCTLSpec__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group_2_2__0__Impl
	rule__FoTCTLSpec__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getFoTCTLSpecAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoTCTLSpec__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getNodeLabelPredicatesAssignment_2_2_1()); }
(rule__FoTCTLSpec__NodeLabelPredicatesAssignment_2_2_1)
{ after(grammarAccess.getFoTCTLSpecAccess().getNodeLabelPredicatesAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FoTCTLSpec__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group_3__0__Impl
	rule__FoTCTLSpec__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getEdgeLabelPredicatesKeyword_3_0()); }

	'EdgeLabelPredicates {' 

{ after(grammarAccess.getFoTCTLSpecAccess().getEdgeLabelPredicatesKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoTCTLSpec__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group_3__1__Impl
	rule__FoTCTLSpec__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getEdgeLabelPredicatesAssignment_3_1()); }
(rule__FoTCTLSpec__EdgeLabelPredicatesAssignment_3_1)
{ after(grammarAccess.getFoTCTLSpecAccess().getEdgeLabelPredicatesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoTCTLSpec__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group_3__2__Impl
	rule__FoTCTLSpec__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getGroup_3_2()); }
(rule__FoTCTLSpec__Group_3_2__0)*
{ after(grammarAccess.getFoTCTLSpecAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoTCTLSpec__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getRightCurlyBracketLineFeedLfKeyword_3_3()); }

	'}\n' 

{ after(grammarAccess.getFoTCTLSpecAccess().getRightCurlyBracketLineFeedLfKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FoTCTLSpec__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group_3_2__0__Impl
	rule__FoTCTLSpec__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getFoTCTLSpecAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoTCTLSpec__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getEdgeLabelPredicatesAssignment_3_2_1()); }
(rule__FoTCTLSpec__EdgeLabelPredicatesAssignment_3_2_1)
{ after(grammarAccess.getFoTCTLSpecAccess().getEdgeLabelPredicatesAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FoTCTLSpec__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group_4__0__Impl
	rule__FoTCTLSpec__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getConstantsKeyword_4_0()); }

	'Constants {' 

{ after(grammarAccess.getFoTCTLSpecAccess().getConstantsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoTCTLSpec__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group_4__1__Impl
	rule__FoTCTLSpec__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getConstantsAssignment_4_1()); }
(rule__FoTCTLSpec__ConstantsAssignment_4_1)
{ after(grammarAccess.getFoTCTLSpecAccess().getConstantsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoTCTLSpec__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group_4__2__Impl
	rule__FoTCTLSpec__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getGroup_4_2()); }
(rule__FoTCTLSpec__Group_4_2__0)*
{ after(grammarAccess.getFoTCTLSpecAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoTCTLSpec__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getRightCurlyBracketLineFeedLfKeyword_4_3()); }

	'}\n' 

{ after(grammarAccess.getFoTCTLSpecAccess().getRightCurlyBracketLineFeedLfKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FoTCTLSpec__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group_4_2__0__Impl
	rule__FoTCTLSpec__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getFoTCTLSpecAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoTCTLSpec__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLSpec__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getConstantsAssignment_4_2_1()); }
(rule__FoTCTLSpec__ConstantsAssignment_4_2_1)
{ after(grammarAccess.getFoTCTLSpecAccess().getConstantsAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FoTCTLFormula__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLFormula__Group__0__Impl
	rule__FoTCTLFormula__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLFormula__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLFormulaAccess().getFoTCTLFormulaAction_0()); }
(

)
{ after(grammarAccess.getFoTCTLFormulaAccess().getFoTCTLFormulaAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoTCTLFormula__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLFormula__Group__1__Impl
	rule__FoTCTLFormula__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLFormula__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLFormulaAccess().getFormulaAssignment_1()); }
(rule__FoTCTLFormula__FormulaAssignment_1)
{ after(grammarAccess.getFoTCTLFormulaAccess().getFormulaAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoTCTLFormula__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoTCTLFormula__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLFormula__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLFormulaAccess().getSemicolonLineFeedLfKeyword_2()); }

	';\n' 

{ after(grammarAccess.getFoTCTLFormulaAccess().getSemicolonLineFeedLfKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NodeLabelPredicateDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeLabelPredicateDecl__Group__0__Impl
	rule__NodeLabelPredicateDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeLabelPredicateDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeLabelPredicateDeclAccess().getNodeLabelPredicateDeclAction_0()); }
(

)
{ after(grammarAccess.getNodeLabelPredicateDeclAccess().getNodeLabelPredicateDeclAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeLabelPredicateDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeLabelPredicateDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeLabelPredicateDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeLabelPredicateDeclAccess().getNameAssignment_1()); }
(rule__NodeLabelPredicateDecl__NameAssignment_1)
{ after(grammarAccess.getNodeLabelPredicateDeclAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EdgeLabelPredicateDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EdgeLabelPredicateDecl__Group__0__Impl
	rule__EdgeLabelPredicateDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeLabelPredicateDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeLabelPredicateDeclAccess().getEdgeLabelPredicateDeclAction_0()); }
(

)
{ after(grammarAccess.getEdgeLabelPredicateDeclAccess().getEdgeLabelPredicateDeclAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EdgeLabelPredicateDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EdgeLabelPredicateDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeLabelPredicateDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeLabelPredicateDeclAccess().getNameAssignment_1()); }
(rule__EdgeLabelPredicateDecl__NameAssignment_1)
{ after(grammarAccess.getEdgeLabelPredicateDeclAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstantSymbolDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantSymbolDecl__Group__0__Impl
	rule__ConstantSymbolDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantSymbolDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantSymbolDeclAccess().getConstantSymbolDeclAction_0()); }
(

)
{ after(grammarAccess.getConstantSymbolDeclAccess().getConstantSymbolDeclAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantSymbolDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantSymbolDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantSymbolDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantSymbolDeclAccess().getNameAssignment_1()); }
(rule__ConstantSymbolDecl__NameAssignment_1)
{ after(grammarAccess.getConstantSymbolDeclAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__0__Impl
	rule__Constant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getConstantAction_0()); }
(

)
{ after(grammarAccess.getConstantAccess().getConstantAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getDeclarationAssignment_1()); }
(rule__Constant__DeclarationAssignment_1)
{ after(grammarAccess.getConstantAccess().getDeclarationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getVariableAction_0()); }
(

)
{ after(grammarAccess.getVariableAccess().getVariableAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getDeclarationAssignment_1()); }
(rule__Variable__DeclarationAssignment_1)
{ after(grammarAccess.getVariableAccess().getDeclarationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NodeLabelPredicate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeLabelPredicate__Group__0__Impl
	rule__NodeLabelPredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeLabelPredicate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeLabelPredicateAccess().getNodeLabelPredicateAction_0()); }
(

)
{ after(grammarAccess.getNodeLabelPredicateAccess().getNodeLabelPredicateAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeLabelPredicate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeLabelPredicate__Group__1__Impl
	rule__NodeLabelPredicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeLabelPredicate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeLabelPredicateAccess().getDeclarationAssignment_1()); }
(rule__NodeLabelPredicate__DeclarationAssignment_1)
{ after(grammarAccess.getNodeLabelPredicateAccess().getDeclarationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeLabelPredicate__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeLabelPredicate__Group__2__Impl
	rule__NodeLabelPredicate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeLabelPredicate__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeLabelPredicateAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getNodeLabelPredicateAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeLabelPredicate__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeLabelPredicate__Group__3__Impl
	rule__NodeLabelPredicate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeLabelPredicate__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeLabelPredicateAccess().getTermAssignment_3()); }
(rule__NodeLabelPredicate__TermAssignment_3)
{ after(grammarAccess.getNodeLabelPredicateAccess().getTermAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeLabelPredicate__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeLabelPredicate__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeLabelPredicate__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeLabelPredicateAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getNodeLabelPredicateAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EdgeLabelPredicate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EdgeLabelPredicate__Group__0__Impl
	rule__EdgeLabelPredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeLabelPredicate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeLabelPredicateAccess().getEdgeLabelPredicateAction_0()); }
(

)
{ after(grammarAccess.getEdgeLabelPredicateAccess().getEdgeLabelPredicateAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EdgeLabelPredicate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EdgeLabelPredicate__Group__1__Impl
	rule__EdgeLabelPredicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeLabelPredicate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeLabelPredicateAccess().getDeclarationAssignment_1()); }
(rule__EdgeLabelPredicate__DeclarationAssignment_1)
{ after(grammarAccess.getEdgeLabelPredicateAccess().getDeclarationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EdgeLabelPredicate__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EdgeLabelPredicate__Group__2__Impl
	rule__EdgeLabelPredicate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeLabelPredicate__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeLabelPredicateAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getEdgeLabelPredicateAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EdgeLabelPredicate__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EdgeLabelPredicate__Group__3__Impl
	rule__EdgeLabelPredicate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeLabelPredicate__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeLabelPredicateAccess().getTermAssignment_3()); }
(rule__EdgeLabelPredicate__TermAssignment_3)
{ after(grammarAccess.getEdgeLabelPredicateAccess().getTermAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EdgeLabelPredicate__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EdgeLabelPredicate__Group__4__Impl
	rule__EdgeLabelPredicate__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeLabelPredicate__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeLabelPredicateAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getEdgeLabelPredicateAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EdgeLabelPredicate__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EdgeLabelPredicate__Group__5__Impl
	rule__EdgeLabelPredicate__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeLabelPredicate__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeLabelPredicateAccess().getSecondTermAssignment_5()); }
(rule__EdgeLabelPredicate__SecondTermAssignment_5)
{ after(grammarAccess.getEdgeLabelPredicateAccess().getSecondTermAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EdgeLabelPredicate__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EdgeLabelPredicate__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeLabelPredicate__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeLabelPredicateAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getEdgeLabelPredicateAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__QuantifiedFormula__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuantifiedFormula__Group__0__Impl
	rule__QuantifiedFormula__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifiedFormula__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantifiedFormulaAccess().getQuantifiedFormulaAction_0()); }
(

)
{ after(grammarAccess.getQuantifiedFormulaAccess().getQuantifiedFormulaAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuantifiedFormula__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuantifiedFormula__Group__1__Impl
	rule__QuantifiedFormula__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifiedFormula__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantifiedFormulaAccess().getQuantifierAssignment_1()); }
(rule__QuantifiedFormula__QuantifierAssignment_1)
{ after(grammarAccess.getQuantifiedFormulaAccess().getQuantifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuantifiedFormula__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuantifiedFormula__Group__2__Impl
	rule__QuantifiedFormula__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifiedFormula__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantifiedFormulaAccess().getSpaceKeyword_2()); }

	' ' 

{ after(grammarAccess.getQuantifiedFormulaAccess().getSpaceKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuantifiedFormula__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuantifiedFormula__Group__3__Impl
	rule__QuantifiedFormula__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifiedFormula__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantifiedFormulaAccess().getNameAssignment_3()); }
(rule__QuantifiedFormula__NameAssignment_3)
{ after(grammarAccess.getQuantifiedFormulaAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuantifiedFormula__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuantifiedFormula__Group__4__Impl
	rule__QuantifiedFormula__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifiedFormula__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantifiedFormulaAccess().getSpaceKeyword_4()); }

	' ' 

{ after(grammarAccess.getQuantifiedFormulaAccess().getSpaceKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuantifiedFormula__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuantifiedFormula__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifiedFormula__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantifiedFormulaAccess().getSubformulaAssignment_5()); }
(rule__QuantifiedFormula__SubformulaAssignment_5)
{ after(grammarAccess.getQuantifiedFormulaAccess().getSubformulaAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}















rule__NotFormula__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotFormula__Group__0__Impl
	rule__NotFormula__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotFormula__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotFormulaAccess().getNOTKeyword_0()); }

	'NOT ' 

{ after(grammarAccess.getNotFormulaAccess().getNOTKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotFormula__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotFormula__Group__1__Impl
	rule__NotFormula__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NotFormula__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotFormulaAccess().getNotFormulaAction_1()); }
(

)
{ after(grammarAccess.getNotFormulaAccess().getNotFormulaAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotFormula__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotFormula__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotFormula__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotFormulaAccess().getSubformulaAssignment_2()); }
(rule__NotFormula__SubformulaAssignment_2)
{ after(grammarAccess.getNotFormulaAccess().getSubformulaAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryTemporalFormula__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryTemporalFormula__Group__0__Impl
	rule__UnaryTemporalFormula__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryTemporalFormula__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryTemporalFormulaAccess().getUnaryTemporalFormulaAction_0()); }
(

)
{ after(grammarAccess.getUnaryTemporalFormulaAccess().getUnaryTemporalFormulaAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryTemporalFormula__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryTemporalFormula__Group__1__Impl
	rule__UnaryTemporalFormula__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryTemporalFormula__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryTemporalFormulaAccess().getTemporalOperatorAssignment_1()); }
(rule__UnaryTemporalFormula__TemporalOperatorAssignment_1)
{ after(grammarAccess.getUnaryTemporalFormulaAccess().getTemporalOperatorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryTemporalFormula__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryTemporalFormula__Group__2__Impl
	rule__UnaryTemporalFormula__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryTemporalFormula__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryTemporalFormulaAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getUnaryTemporalFormulaAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryTemporalFormula__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryTemporalFormula__Group__3__Impl
	rule__UnaryTemporalFormula__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryTemporalFormula__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryTemporalFormulaAccess().getComparisonOperatorAssignment_3()); }
(rule__UnaryTemporalFormula__ComparisonOperatorAssignment_3)
{ after(grammarAccess.getUnaryTemporalFormulaAccess().getComparisonOperatorAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryTemporalFormula__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryTemporalFormula__Group__4__Impl
	rule__UnaryTemporalFormula__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryTemporalFormula__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryTemporalFormulaAccess().getValueAssignment_4()); }
(rule__UnaryTemporalFormula__ValueAssignment_4)
{ after(grammarAccess.getUnaryTemporalFormulaAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryTemporalFormula__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryTemporalFormula__Group__5__Impl
	rule__UnaryTemporalFormula__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryTemporalFormula__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryTemporalFormulaAccess().getRightSquareBracketSpaceKeyword_5()); }

	'] ' 

{ after(grammarAccess.getUnaryTemporalFormulaAccess().getRightSquareBracketSpaceKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryTemporalFormula__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryTemporalFormula__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryTemporalFormula__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryTemporalFormulaAccess().getSubformulaAssignment_6()); }
(rule__UnaryTemporalFormula__SubformulaAssignment_6)
{ after(grammarAccess.getUnaryTemporalFormulaAccess().getSubformulaAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__BinaryTemporalFormula__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryTemporalFormula__Group__0__Impl
	rule__BinaryTemporalFormula__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryTemporalFormula__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTemporalFormulaAccess().getBinaryTemporalFormulaAction_0()); }
(

)
{ after(grammarAccess.getBinaryTemporalFormulaAccess().getBinaryTemporalFormulaAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryTemporalFormula__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryTemporalFormula__Group__1__Impl
	rule__BinaryTemporalFormula__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryTemporalFormula__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTemporalFormulaAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getBinaryTemporalFormulaAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryTemporalFormula__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryTemporalFormula__Group__2__Impl
	rule__BinaryTemporalFormula__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryTemporalFormula__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTemporalFormulaAccess().getLeftSubformulaAssignment_2()); }
(rule__BinaryTemporalFormula__LeftSubformulaAssignment_2)
{ after(grammarAccess.getBinaryTemporalFormulaAccess().getLeftSubformulaAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryTemporalFormula__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryTemporalFormula__Group__3__Impl
	rule__BinaryTemporalFormula__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryTemporalFormula__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTemporalFormulaAccess().getSpaceKeyword_3()); }

	' ' 

{ after(grammarAccess.getBinaryTemporalFormulaAccess().getSpaceKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryTemporalFormula__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryTemporalFormula__Group__4__Impl
	rule__BinaryTemporalFormula__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryTemporalFormula__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTemporalFormulaAccess().getTemporalOperatorAssignment_4()); }
(rule__BinaryTemporalFormula__TemporalOperatorAssignment_4)
{ after(grammarAccess.getBinaryTemporalFormulaAccess().getTemporalOperatorAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryTemporalFormula__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryTemporalFormula__Group__5__Impl
	rule__BinaryTemporalFormula__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryTemporalFormula__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTemporalFormulaAccess().getLeftSquareBracketKeyword_5()); }

	'[' 

{ after(grammarAccess.getBinaryTemporalFormulaAccess().getLeftSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryTemporalFormula__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryTemporalFormula__Group__6__Impl
	rule__BinaryTemporalFormula__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryTemporalFormula__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTemporalFormulaAccess().getComparisonOperatorAssignment_6()); }
(rule__BinaryTemporalFormula__ComparisonOperatorAssignment_6)
{ after(grammarAccess.getBinaryTemporalFormulaAccess().getComparisonOperatorAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryTemporalFormula__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryTemporalFormula__Group__7__Impl
	rule__BinaryTemporalFormula__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryTemporalFormula__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTemporalFormulaAccess().getValueAssignment_7()); }
(rule__BinaryTemporalFormula__ValueAssignment_7)
{ after(grammarAccess.getBinaryTemporalFormulaAccess().getValueAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryTemporalFormula__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryTemporalFormula__Group__8__Impl
	rule__BinaryTemporalFormula__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryTemporalFormula__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTemporalFormulaAccess().getRightSquareBracketSpaceKeyword_8()); }

	'] ' 

{ after(grammarAccess.getBinaryTemporalFormulaAccess().getRightSquareBracketSpaceKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryTemporalFormula__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryTemporalFormula__Group__9__Impl
	rule__BinaryTemporalFormula__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryTemporalFormula__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTemporalFormulaAccess().getRightSubformulaAssignment_9()); }
(rule__BinaryTemporalFormula__RightSubformulaAssignment_9)
{ after(grammarAccess.getBinaryTemporalFormulaAccess().getRightSubformulaAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryTemporalFormula__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryTemporalFormula__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryTemporalFormula__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTemporalFormulaAccess().getRightParenthesisKeyword_10()); }

	')' 

{ after(grammarAccess.getBinaryTemporalFormulaAccess().getRightParenthesisKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__BinaryLogicFormula__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryLogicFormula__Group__0__Impl
	rule__BinaryLogicFormula__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryLogicFormula__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryLogicFormulaAccess().getBinaryLogicFormulaAction_0()); }
(

)
{ after(grammarAccess.getBinaryLogicFormulaAccess().getBinaryLogicFormulaAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryLogicFormula__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryLogicFormula__Group__1__Impl
	rule__BinaryLogicFormula__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryLogicFormula__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryLogicFormulaAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getBinaryLogicFormulaAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryLogicFormula__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryLogicFormula__Group__2__Impl
	rule__BinaryLogicFormula__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryLogicFormula__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryLogicFormulaAccess().getLeftSubformulaAssignment_2()); }
(rule__BinaryLogicFormula__LeftSubformulaAssignment_2)
{ after(grammarAccess.getBinaryLogicFormulaAccess().getLeftSubformulaAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryLogicFormula__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryLogicFormula__Group__3__Impl
	rule__BinaryLogicFormula__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryLogicFormula__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryLogicFormulaAccess().getOperatorAssignment_3()); }
(rule__BinaryLogicFormula__OperatorAssignment_3)
{ after(grammarAccess.getBinaryLogicFormulaAccess().getOperatorAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryLogicFormula__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryLogicFormula__Group__4__Impl
	rule__BinaryLogicFormula__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryLogicFormula__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryLogicFormulaAccess().getRightSubformulaAssignment_4()); }
(rule__BinaryLogicFormula__RightSubformulaAssignment_4)
{ after(grammarAccess.getBinaryLogicFormulaAccess().getRightSubformulaAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryLogicFormula__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryLogicFormula__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryLogicFormula__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryLogicFormulaAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getBinaryLogicFormulaAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AtomicProposition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicProposition__Group__0__Impl
	rule__AtomicProposition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicPropositionAccess().getAtomicPropositionAction_0()); }
(

)
{ after(grammarAccess.getAtomicPropositionAccess().getAtomicPropositionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicProposition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicProposition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicPropositionAccess().getNameAssignment_1()); }
(rule__AtomicProposition__NameAssignment_1)
{ after(grammarAccess.getAtomicPropositionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__FoTCTLSpec__NodeLabelPredicatesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getNodeLabelPredicatesNodeLabelPredicateDeclParserRuleCall_2_1_0()); }
	ruleNodeLabelPredicateDecl{ after(grammarAccess.getFoTCTLSpecAccess().getNodeLabelPredicatesNodeLabelPredicateDeclParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__NodeLabelPredicatesAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getNodeLabelPredicatesNodeLabelPredicateDeclParserRuleCall_2_2_1_0()); }
	ruleNodeLabelPredicateDecl{ after(grammarAccess.getFoTCTLSpecAccess().getNodeLabelPredicatesNodeLabelPredicateDeclParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__EdgeLabelPredicatesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getEdgeLabelPredicatesEdgeLabelPredicateDeclParserRuleCall_3_1_0()); }
	ruleEdgeLabelPredicateDecl{ after(grammarAccess.getFoTCTLSpecAccess().getEdgeLabelPredicatesEdgeLabelPredicateDeclParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__EdgeLabelPredicatesAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getEdgeLabelPredicatesEdgeLabelPredicateDeclParserRuleCall_3_2_1_0()); }
	ruleEdgeLabelPredicateDecl{ after(grammarAccess.getFoTCTLSpecAccess().getEdgeLabelPredicatesEdgeLabelPredicateDeclParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__ConstantsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getConstantsConstantSymbolDeclParserRuleCall_4_1_0()); }
	ruleConstantSymbolDecl{ after(grammarAccess.getFoTCTLSpecAccess().getConstantsConstantSymbolDeclParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__ConstantsAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getConstantsConstantSymbolDeclParserRuleCall_4_2_1_0()); }
	ruleConstantSymbolDecl{ after(grammarAccess.getFoTCTLSpecAccess().getConstantsConstantSymbolDeclParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLSpec__FormulasAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLSpecAccess().getFormulasFoTCTLFormulaParserRuleCall_6_0()); }
	ruleFoTCTLFormula{ after(grammarAccess.getFoTCTLSpecAccess().getFormulasFoTCTLFormulaParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FoTCTLFormula__FormulaAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoTCTLFormulaAccess().getFormulaFormulaDefinitionParserRuleCall_1_0()); }
	ruleFormulaDefinition{ after(grammarAccess.getFoTCTLFormulaAccess().getFormulaFormulaDefinitionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeLabelPredicateDecl__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeLabelPredicateDeclAccess().getNameNode_predicate_nameTerminalRuleCall_1_0()); }
	RULE_NODE_PREDICATE_NAME{ after(grammarAccess.getNodeLabelPredicateDeclAccess().getNameNode_predicate_nameTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeLabelPredicateDecl__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeLabelPredicateDeclAccess().getNameEdge_predicate_nameTerminalRuleCall_1_0()); }
	RULE_EDGE_PREDICATE_NAME{ after(grammarAccess.getEdgeLabelPredicateDeclAccess().getNameEdge_predicate_nameTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantSymbolDecl__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantSymbolDeclAccess().getNameConstant_nameTerminalRuleCall_1_0()); }
	RULE_CONSTANT_NAME{ after(grammarAccess.getConstantSymbolDeclAccess().getNameConstant_nameTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__DeclarationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getDeclarationConstantSymbolDeclCrossReference_1_0()); }
(
{ before(grammarAccess.getConstantAccess().getDeclarationConstantSymbolDeclConstant_nameTerminalRuleCall_1_0_1()); }
	RULE_CONSTANT_NAME{ after(grammarAccess.getConstantAccess().getDeclarationConstantSymbolDeclConstant_nameTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getConstantAccess().getDeclarationConstantSymbolDeclCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__DeclarationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getDeclarationQuantifiedFormulaCrossReference_1_0()); }
(
{ before(grammarAccess.getVariableAccess().getDeclarationQuantifiedFormulaVariable_nameTerminalRuleCall_1_0_1()); }
	RULE_VARIABLE_NAME{ after(grammarAccess.getVariableAccess().getDeclarationQuantifiedFormulaVariable_nameTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getVariableAccess().getDeclarationQuantifiedFormulaCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeLabelPredicate__DeclarationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeLabelPredicateAccess().getDeclarationNodeLabelPredicateDeclCrossReference_1_0()); }
(
{ before(grammarAccess.getNodeLabelPredicateAccess().getDeclarationNodeLabelPredicateDeclNode_predicate_nameTerminalRuleCall_1_0_1()); }
	RULE_NODE_PREDICATE_NAME{ after(grammarAccess.getNodeLabelPredicateAccess().getDeclarationNodeLabelPredicateDeclNode_predicate_nameTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getNodeLabelPredicateAccess().getDeclarationNodeLabelPredicateDeclCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeLabelPredicate__TermAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeLabelPredicateAccess().getTermTermParserRuleCall_3_0()); }
	ruleTerm{ after(grammarAccess.getNodeLabelPredicateAccess().getTermTermParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeLabelPredicate__DeclarationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeLabelPredicateAccess().getDeclarationEdgeLabelPredicateDeclCrossReference_1_0()); }
(
{ before(grammarAccess.getEdgeLabelPredicateAccess().getDeclarationEdgeLabelPredicateDeclEdge_predicate_nameTerminalRuleCall_1_0_1()); }
	RULE_EDGE_PREDICATE_NAME{ after(grammarAccess.getEdgeLabelPredicateAccess().getDeclarationEdgeLabelPredicateDeclEdge_predicate_nameTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getEdgeLabelPredicateAccess().getDeclarationEdgeLabelPredicateDeclCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeLabelPredicate__TermAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeLabelPredicateAccess().getTermTermParserRuleCall_3_0()); }
	ruleTerm{ after(grammarAccess.getEdgeLabelPredicateAccess().getTermTermParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeLabelPredicate__SecondTermAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeLabelPredicateAccess().getSecondTermTermParserRuleCall_5_0()); }
	ruleTerm{ after(grammarAccess.getEdgeLabelPredicateAccess().getSecondTermTermParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifiedFormula__QuantifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantifiedFormulaAccess().getQuantifierQuantifierEnumRuleCall_1_0()); }
	ruleQuantifier{ after(grammarAccess.getQuantifiedFormulaAccess().getQuantifierQuantifierEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifiedFormula__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantifiedFormulaAccess().getNameVariable_nameTerminalRuleCall_3_0()); }
	RULE_VARIABLE_NAME{ after(grammarAccess.getQuantifiedFormulaAccess().getNameVariable_nameTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifiedFormula__SubformulaAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantifiedFormulaAccess().getSubformulaFormulaDefinitionParserRuleCall_5_0()); }
	ruleFormulaDefinition{ after(grammarAccess.getQuantifiedFormulaAccess().getSubformulaFormulaDefinitionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotFormula__SubformulaAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotFormulaAccess().getSubformulaFormulaDefinitionParserRuleCall_2_0()); }
	ruleFormulaDefinition{ after(grammarAccess.getNotFormulaAccess().getSubformulaFormulaDefinitionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryTemporalFormula__TemporalOperatorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryTemporalFormulaAccess().getTemporalOperatorTemporalOperatorEnumRuleCall_1_0()); }
	ruleTemporalOperator{ after(grammarAccess.getUnaryTemporalFormulaAccess().getTemporalOperatorTemporalOperatorEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryTemporalFormula__ComparisonOperatorAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryTemporalFormulaAccess().getComparisonOperatorComparisonOperatorEnumRuleCall_3_0()); }
	ruleComparisonOperator{ after(grammarAccess.getUnaryTemporalFormulaAccess().getComparisonOperatorComparisonOperatorEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryTemporalFormula__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryTemporalFormulaAccess().getValueINTTerminalRuleCall_4_0()); }
	RULE_INT{ after(grammarAccess.getUnaryTemporalFormulaAccess().getValueINTTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryTemporalFormula__SubformulaAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryTemporalFormulaAccess().getSubformulaFormulaDefinitionParserRuleCall_6_0()); }
	ruleFormulaDefinition{ after(grammarAccess.getUnaryTemporalFormulaAccess().getSubformulaFormulaDefinitionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryTemporalFormula__LeftSubformulaAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTemporalFormulaAccess().getLeftSubformulaFormulaDefinitionParserRuleCall_2_0()); }
	ruleFormulaDefinition{ after(grammarAccess.getBinaryTemporalFormulaAccess().getLeftSubformulaFormulaDefinitionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryTemporalFormula__TemporalOperatorAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTemporalFormulaAccess().getTemporalOperatorTemporalOperatorEnumRuleCall_4_0()); }
	ruleTemporalOperator{ after(grammarAccess.getBinaryTemporalFormulaAccess().getTemporalOperatorTemporalOperatorEnumRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryTemporalFormula__ComparisonOperatorAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTemporalFormulaAccess().getComparisonOperatorComparisonOperatorEnumRuleCall_6_0()); }
	ruleComparisonOperator{ after(grammarAccess.getBinaryTemporalFormulaAccess().getComparisonOperatorComparisonOperatorEnumRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryTemporalFormula__ValueAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTemporalFormulaAccess().getValueINTTerminalRuleCall_7_0()); }
	RULE_INT{ after(grammarAccess.getBinaryTemporalFormulaAccess().getValueINTTerminalRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryTemporalFormula__RightSubformulaAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTemporalFormulaAccess().getRightSubformulaFormulaDefinitionParserRuleCall_9_0()); }
	ruleFormulaDefinition{ after(grammarAccess.getBinaryTemporalFormulaAccess().getRightSubformulaFormulaDefinitionParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryLogicFormula__LeftSubformulaAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryLogicFormulaAccess().getLeftSubformulaFormulaDefinitionParserRuleCall_2_0()); }
	ruleFormulaDefinition{ after(grammarAccess.getBinaryLogicFormulaAccess().getLeftSubformulaFormulaDefinitionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryLogicFormula__OperatorAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryLogicFormulaAccess().getOperatorBinaryLogicOperatorEnumRuleCall_3_0()); }
	ruleBinaryLogicOperator{ after(grammarAccess.getBinaryLogicFormulaAccess().getOperatorBinaryLogicOperatorEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryLogicFormula__RightSubformulaAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryLogicFormulaAccess().getRightSubformulaFormulaDefinitionParserRuleCall_4_0()); }
	ruleFormulaDefinition{ after(grammarAccess.getBinaryLogicFormulaAccess().getRightSubformulaFormulaDefinitionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicPropositionAccess().getNameVariable_nameTerminalRuleCall_1_0()); }
	RULE_VARIABLE_NAME{ after(grammarAccess.getAtomicPropositionAccess().getNameVariable_nameTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_NODE_PREDICATE_NAME : 'A'..'Z' ('a'..'z'|'A'..'Z')+;

RULE_EDGE_PREDICATE_NAME : 'a'..'z' ('a'..'z'|'A'..'Z')+;

RULE_VARIABLE_NAME : 'a'..'z' ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_CONSTANT_NAME : 'A'..'Z' ('A'..'Z'|'_'|'0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


