/*
 * generated by Xtext 2.10.0
 */
package de.fraunhofer.iem.ide.contentassist.antlr;

import com.google.inject.Inject;
import de.fraunhofer.iem.ide.contentassist.antlr.internal.InternalProjectPlanningParser;
import de.fraunhofer.iem.services.ProjectPlanningGrammarAccess;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class ProjectPlanningParser extends AbstractContentAssistParser {

	@Inject
	private ProjectPlanningGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalProjectPlanningParser createParser() {
		InternalProjectPlanningParser result = new InternalProjectPlanningParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getProjectPlanAccess().getGroup(), "rule__ProjectPlan__Group__0");
					put(grammarAccess.getProjectPlanAccess().getGroup_0(), "rule__ProjectPlan__Group_0__0");
					put(grammarAccess.getProjectPlanAccess().getGroup_0_2(), "rule__ProjectPlan__Group_0_2__0");
					put(grammarAccess.getProjectPlanAccess().getGroup_1(), "rule__ProjectPlan__Group_1__0");
					put(grammarAccess.getProjectPlanAccess().getGroup_1_2(), "rule__ProjectPlan__Group_1_2__0");
					put(grammarAccess.getProjectPlanAccess().getGroup_2(), "rule__ProjectPlan__Group_2__0");
					put(grammarAccess.getProjectPlanAccess().getGroup_2_2(), "rule__ProjectPlan__Group_2_2__0");
					put(grammarAccess.getProjectAccess().getGroup(), "rule__Project__Group__0");
					put(grammarAccess.getProjectAccess().getGroup_2(), "rule__Project__Group_2__0");
					put(grammarAccess.getProjectAccess().getGroup_3(), "rule__Project__Group_3__0");
					put(grammarAccess.getProjectAccess().getGroup_3_2(), "rule__Project__Group_3_2__0");
					put(grammarAccess.getEmployeeAccess().getGroup(), "rule__Employee__Group__0");
					put(grammarAccess.getEmployeeAccess().getGroup_2(), "rule__Employee__Group_2__0");
					put(grammarAccess.getEmployeeAccess().getGroup_3(), "rule__Employee__Group_3__0");
					put(grammarAccess.getEmployeeAccess().getGroup_3_2(), "rule__Employee__Group_3_2__0");
					put(grammarAccess.getEmployeeAccess().getGroup_4(), "rule__Employee__Group_4__0");
					put(grammarAccess.getEmployeeAccess().getGroup_4_2(), "rule__Employee__Group_4_2__0");
					put(grammarAccess.getRatingAccess().getGroup(), "rule__Rating__Group__0");
					put(grammarAccess.getAssignmentAccess().getGroup(), "rule__Assignment__Group__0");
					put(grammarAccess.getProjectPlanAccess().getCapabilitiesAssignment_0_1(), "rule__ProjectPlan__CapabilitiesAssignment_0_1");
					put(grammarAccess.getProjectPlanAccess().getCapabilitiesAssignment_0_2_1(), "rule__ProjectPlan__CapabilitiesAssignment_0_2_1");
					put(grammarAccess.getProjectPlanAccess().getEmployeesAssignment_1_1(), "rule__ProjectPlan__EmployeesAssignment_1_1");
					put(grammarAccess.getProjectPlanAccess().getEmployeesAssignment_1_2_1(), "rule__ProjectPlan__EmployeesAssignment_1_2_1");
					put(grammarAccess.getProjectPlanAccess().getProjectsAssignment_2_1(), "rule__ProjectPlan__ProjectsAssignment_2_1");
					put(grammarAccess.getProjectPlanAccess().getProjectsAssignment_2_2_1(), "rule__ProjectPlan__ProjectsAssignment_2_2_1");
					put(grammarAccess.getProjectPlanAccess().getRatingsAssignment_3(), "rule__ProjectPlan__RatingsAssignment_3");
					put(grammarAccess.getProjectPlanAccess().getAssignmentsAssignment_4(), "rule__ProjectPlan__AssignmentsAssignment_4");
					put(grammarAccess.getProjectAccess().getNameAssignment_0(), "rule__Project__NameAssignment_0");
					put(grammarAccess.getProjectAccess().getRequiresResourcesAssignment_2_1(), "rule__Project__RequiresResourcesAssignment_2_1");
					put(grammarAccess.getProjectAccess().getRequiresCapabilitiesAssignment_3_1(), "rule__Project__RequiresCapabilitiesAssignment_3_1");
					put(grammarAccess.getProjectAccess().getRequiresCapabilitiesAssignment_3_2_1(), "rule__Project__RequiresCapabilitiesAssignment_3_2_1");
					put(grammarAccess.getEmployeeAccess().getNameAssignment_0(), "rule__Employee__NameAssignment_0");
					put(grammarAccess.getEmployeeAccess().getHasResourceAssignment_2_1(), "rule__Employee__HasResourceAssignment_2_1");
					put(grammarAccess.getEmployeeAccess().getHasCapabilitiesAssignment_3_1(), "rule__Employee__HasCapabilitiesAssignment_3_1");
					put(grammarAccess.getEmployeeAccess().getHasCapabilitiesAssignment_3_2_1(), "rule__Employee__HasCapabilitiesAssignment_3_2_1");
					put(grammarAccess.getEmployeeAccess().getRatingsAssignment_4_1(), "rule__Employee__RatingsAssignment_4_1");
					put(grammarAccess.getEmployeeAccess().getRatingsAssignment_4_2_1(), "rule__Employee__RatingsAssignment_4_2_1");
					put(grammarAccess.getCapabilityAccess().getNameAssignment(), "rule__Capability__NameAssignment");
					put(grammarAccess.getRatingAccess().getCapabilityAssignment_0(), "rule__Rating__CapabilityAssignment_0");
					put(grammarAccess.getRatingAccess().getRatingAssignment_2(), "rule__Rating__RatingAssignment_2");
					put(grammarAccess.getAssignmentAccess().getProjectAssignment_0(), "rule__Assignment__ProjectAssignment_0");
					put(grammarAccess.getAssignmentAccess().getEmployeeAssignment_4(), "rule__Assignment__EmployeeAssignment_4");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalProjectPlanningParser typedParser = (InternalProjectPlanningParser) parser;
			typedParser.entryRuleProjectPlan();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ProjectPlanningGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ProjectPlanningGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
