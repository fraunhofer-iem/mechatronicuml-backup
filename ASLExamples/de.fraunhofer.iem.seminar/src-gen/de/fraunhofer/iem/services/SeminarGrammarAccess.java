/*
 * generated by Xtext 2.11.0
 */
package de.fraunhofer.iem.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class SeminarGrammarAccess extends AbstractGrammarElementFinder {
	
	public class SeminarElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.iem.Seminar.Seminar");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cSupervisorsKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cSupervisorsAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cSupervisorsSupervisorParserRuleCall_0_1_0 = (RuleCall)cSupervisorsAssignment_0_1.eContents().get(0);
		private final Group cGroup_0_2 = (Group)cGroup_0.eContents().get(2);
		private final Keyword cCommaKeyword_0_2_0 = (Keyword)cGroup_0_2.eContents().get(0);
		private final Assignment cSupervisorsAssignment_0_2_1 = (Assignment)cGroup_0_2.eContents().get(1);
		private final RuleCall cSupervisorsSupervisorParserRuleCall_0_2_1_0 = (RuleCall)cSupervisorsAssignment_0_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cStudentsKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cStudentsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cStudentsStudentParserRuleCall_1_1_0 = (RuleCall)cStudentsAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cStudentsAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cStudentsStudentParserRuleCall_1_2_1_0 = (RuleCall)cStudentsAssignment_1_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cTopicsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTopicsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTopicsTopicParserRuleCall_2_1_0 = (RuleCall)cTopicsAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cTopicsAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cTopicsTopicParserRuleCall_2_2_1_0 = (RuleCall)cTopicsAssignment_2_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cPreferencesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPreferencesPreferenceParserRuleCall_3_0 = (RuleCall)cPreferencesAssignment_3.eContents().get(0);
		private final Assignment cSupervisesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSupervisesSuperviseParserRuleCall_4_0 = (RuleCall)cSupervisesAssignment_4.eContents().get(0);
		private final Assignment cAssignmentsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAssignmentsAssignmentParserRuleCall_5_0 = (RuleCall)cAssignmentsAssignment_5.eContents().get(0);
		
		//Seminar:
		//	('supervisors:' supervisors+=Supervisor* (','+ supervisors+=Supervisor)* ';')* ('students:' students+=Student* (','+
		//	students+=Student)* ';')* ('topics:' topics+=Topic* (','+ topics+=Topic)* ';')*
		//	preferences+=Preference*
		//	supervises+=Supervise*
		//	assignments+=Assignment*;
		@Override public ParserRule getRule() { return rule; }
		
		//('supervisors:' supervisors+=Supervisor* (','+ supervisors+=Supervisor)* ';')* ('students:' students+=Student* (','+
		//students+=Student)* ';')* ('topics:' topics+=Topic* (','+ topics+=Topic)* ';')* preferences+=Preference*
		//supervises+=Supervise* assignments+=Assignment*
		public Group getGroup() { return cGroup; }
		
		//('supervisors:' supervisors+=Supervisor* (','+ supervisors+=Supervisor)* ';')*
		public Group getGroup_0() { return cGroup_0; }
		
		//'supervisors:'
		public Keyword getSupervisorsKeyword_0_0() { return cSupervisorsKeyword_0_0; }
		
		//supervisors+=Supervisor*
		public Assignment getSupervisorsAssignment_0_1() { return cSupervisorsAssignment_0_1; }
		
		//Supervisor
		public RuleCall getSupervisorsSupervisorParserRuleCall_0_1_0() { return cSupervisorsSupervisorParserRuleCall_0_1_0; }
		
		//(','+ supervisors+=Supervisor)*
		public Group getGroup_0_2() { return cGroup_0_2; }
		
		//','+
		public Keyword getCommaKeyword_0_2_0() { return cCommaKeyword_0_2_0; }
		
		//supervisors+=Supervisor
		public Assignment getSupervisorsAssignment_0_2_1() { return cSupervisorsAssignment_0_2_1; }
		
		//Supervisor
		public RuleCall getSupervisorsSupervisorParserRuleCall_0_2_1_0() { return cSupervisorsSupervisorParserRuleCall_0_2_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_0_3() { return cSemicolonKeyword_0_3; }
		
		//('students:' students+=Student* (','+ students+=Student)* ';')*
		public Group getGroup_1() { return cGroup_1; }
		
		//'students:'
		public Keyword getStudentsKeyword_1_0() { return cStudentsKeyword_1_0; }
		
		//students+=Student*
		public Assignment getStudentsAssignment_1_1() { return cStudentsAssignment_1_1; }
		
		//Student
		public RuleCall getStudentsStudentParserRuleCall_1_1_0() { return cStudentsStudentParserRuleCall_1_1_0; }
		
		//(','+ students+=Student)*
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//','+
		public Keyword getCommaKeyword_1_2_0() { return cCommaKeyword_1_2_0; }
		
		//students+=Student
		public Assignment getStudentsAssignment_1_2_1() { return cStudentsAssignment_1_2_1; }
		
		//Student
		public RuleCall getStudentsStudentParserRuleCall_1_2_1_0() { return cStudentsStudentParserRuleCall_1_2_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_1_3() { return cSemicolonKeyword_1_3; }
		
		//('topics:' topics+=Topic* (','+ topics+=Topic)* ';')*
		public Group getGroup_2() { return cGroup_2; }
		
		//'topics:'
		public Keyword getTopicsKeyword_2_0() { return cTopicsKeyword_2_0; }
		
		//topics+=Topic*
		public Assignment getTopicsAssignment_2_1() { return cTopicsAssignment_2_1; }
		
		//Topic
		public RuleCall getTopicsTopicParserRuleCall_2_1_0() { return cTopicsTopicParserRuleCall_2_1_0; }
		
		//(','+ topics+=Topic)*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//','+
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//topics+=Topic
		public Assignment getTopicsAssignment_2_2_1() { return cTopicsAssignment_2_2_1; }
		
		//Topic
		public RuleCall getTopicsTopicParserRuleCall_2_2_1_0() { return cTopicsTopicParserRuleCall_2_2_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2_3() { return cSemicolonKeyword_2_3; }
		
		//preferences+=Preference*
		public Assignment getPreferencesAssignment_3() { return cPreferencesAssignment_3; }
		
		//Preference
		public RuleCall getPreferencesPreferenceParserRuleCall_3_0() { return cPreferencesPreferenceParserRuleCall_3_0; }
		
		//supervises+=Supervise*
		public Assignment getSupervisesAssignment_4() { return cSupervisesAssignment_4; }
		
		//Supervise
		public RuleCall getSupervisesSuperviseParserRuleCall_4_0() { return cSupervisesSuperviseParserRuleCall_4_0; }
		
		//assignments+=Assignment*
		public Assignment getAssignmentsAssignment_5() { return cAssignmentsAssignment_5; }
		
		//Assignment
		public RuleCall getAssignmentsAssignmentParserRuleCall_5_0() { return cAssignmentsAssignmentParserRuleCall_5_0; }
	}
	public class SupervisorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.iem.Seminar.Supervisor");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Supervisor:
		//	name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class StudentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.iem.Seminar.Student");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Student:
		//	name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class TopicElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.iem.Seminar.Topic");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Topic:
		//	name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class PreferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.iem.Seminar.Preference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStudentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cStudentStudentCrossReference_0_0 = (CrossReference)cStudentAssignment_0.eContents().get(0);
		private final RuleCall cStudentStudentIDTerminalRuleCall_0_0_1 = (RuleCall)cStudentStudentCrossReference_0_0.eContents().get(1);
		private final Keyword cPrefersKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTopicAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTopicTopicCrossReference_2_0 = (CrossReference)cTopicAssignment_2.eContents().get(0);
		private final RuleCall cTopicTopicIDTerminalRuleCall_2_0_1 = (RuleCall)cTopicTopicCrossReference_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Preference:
		//	student=[Student] 'prefers' topic=[Topic] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//student=[Student] 'prefers' topic=[Topic] ';'
		public Group getGroup() { return cGroup; }
		
		//student=[Student]
		public Assignment getStudentAssignment_0() { return cStudentAssignment_0; }
		
		//[Student]
		public CrossReference getStudentStudentCrossReference_0_0() { return cStudentStudentCrossReference_0_0; }
		
		//ID
		public RuleCall getStudentStudentIDTerminalRuleCall_0_0_1() { return cStudentStudentIDTerminalRuleCall_0_0_1; }
		
		//'prefers'
		public Keyword getPrefersKeyword_1() { return cPrefersKeyword_1; }
		
		//topic=[Topic]
		public Assignment getTopicAssignment_2() { return cTopicAssignment_2; }
		
		//[Topic]
		public CrossReference getTopicTopicCrossReference_2_0() { return cTopicTopicCrossReference_2_0; }
		
		//ID
		public RuleCall getTopicTopicIDTerminalRuleCall_2_0_1() { return cTopicTopicIDTerminalRuleCall_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class SuperviseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.iem.Seminar.Supervise");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSupervisorAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cSupervisorSupervisorCrossReference_0_0 = (CrossReference)cSupervisorAssignment_0.eContents().get(0);
		private final RuleCall cSupervisorSupervisorIDTerminalRuleCall_0_0_1 = (RuleCall)cSupervisorSupervisorCrossReference_0_0.eContents().get(1);
		private final Keyword cSupervisesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTopicAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTopicTopicCrossReference_2_0 = (CrossReference)cTopicAssignment_2.eContents().get(0);
		private final RuleCall cTopicTopicIDTerminalRuleCall_2_0_1 = (RuleCall)cTopicTopicCrossReference_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Supervise:
		//	supervisor=[Supervisor] 'supervises' topic=[Topic] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//supervisor=[Supervisor] 'supervises' topic=[Topic] ';'
		public Group getGroup() { return cGroup; }
		
		//supervisor=[Supervisor]
		public Assignment getSupervisorAssignment_0() { return cSupervisorAssignment_0; }
		
		//[Supervisor]
		public CrossReference getSupervisorSupervisorCrossReference_0_0() { return cSupervisorSupervisorCrossReference_0_0; }
		
		//ID
		public RuleCall getSupervisorSupervisorIDTerminalRuleCall_0_0_1() { return cSupervisorSupervisorIDTerminalRuleCall_0_0_1; }
		
		//'supervises'
		public Keyword getSupervisesKeyword_1() { return cSupervisesKeyword_1; }
		
		//topic=[Topic]
		public Assignment getTopicAssignment_2() { return cTopicAssignment_2; }
		
		//[Topic]
		public CrossReference getTopicTopicCrossReference_2_0() { return cTopicTopicCrossReference_2_0; }
		
		//ID
		public RuleCall getTopicTopicIDTerminalRuleCall_2_0_1() { return cTopicTopicIDTerminalRuleCall_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class AssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.iem.Seminar.Assignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStudentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cStudentStudentCrossReference_0_0 = (CrossReference)cStudentAssignment_0.eContents().get(0);
		private final RuleCall cStudentStudentIDTerminalRuleCall_0_0_1 = (RuleCall)cStudentStudentCrossReference_0_0.eContents().get(1);
		private final Keyword cIsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAssignedKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cToKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTopicAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTopicTopicCrossReference_4_0 = (CrossReference)cTopicAssignment_4.eContents().get(0);
		private final RuleCall cTopicTopicIDTerminalRuleCall_4_0_1 = (RuleCall)cTopicTopicCrossReference_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Assignment:
		//	student=[Student] 'is' 'assigned' 'to' topic=[Topic] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//student=[Student] 'is' 'assigned' 'to' topic=[Topic] ';'
		public Group getGroup() { return cGroup; }
		
		//student=[Student]
		public Assignment getStudentAssignment_0() { return cStudentAssignment_0; }
		
		//[Student]
		public CrossReference getStudentStudentCrossReference_0_0() { return cStudentStudentCrossReference_0_0; }
		
		//ID
		public RuleCall getStudentStudentIDTerminalRuleCall_0_0_1() { return cStudentStudentIDTerminalRuleCall_0_0_1; }
		
		//'is'
		public Keyword getIsKeyword_1() { return cIsKeyword_1; }
		
		//'assigned'
		public Keyword getAssignedKeyword_2() { return cAssignedKeyword_2; }
		
		//'to'
		public Keyword getToKeyword_3() { return cToKeyword_3; }
		
		//topic=[Topic]
		public Assignment getTopicAssignment_4() { return cTopicAssignment_4; }
		
		//[Topic]
		public CrossReference getTopicTopicCrossReference_4_0() { return cTopicTopicCrossReference_4_0; }
		
		//ID
		public RuleCall getTopicTopicIDTerminalRuleCall_4_0_1() { return cTopicTopicIDTerminalRuleCall_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	
	
	private final SeminarElements pSeminar;
	private final SupervisorElements pSupervisor;
	private final StudentElements pStudent;
	private final TopicElements pTopic;
	private final PreferenceElements pPreference;
	private final SuperviseElements pSupervise;
	private final AssignmentElements pAssignment;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public SeminarGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pSeminar = new SeminarElements();
		this.pSupervisor = new SupervisorElements();
		this.pStudent = new StudentElements();
		this.pTopic = new TopicElements();
		this.pPreference = new PreferenceElements();
		this.pSupervise = new SuperviseElements();
		this.pAssignment = new AssignmentElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.fraunhofer.iem.Seminar".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Seminar:
	//	('supervisors:' supervisors+=Supervisor* (','+ supervisors+=Supervisor)* ';')* ('students:' students+=Student* (','+
	//	students+=Student)* ';')* ('topics:' topics+=Topic* (','+ topics+=Topic)* ';')*
	//	preferences+=Preference*
	//	supervises+=Supervise*
	//	assignments+=Assignment*;
	public SeminarElements getSeminarAccess() {
		return pSeminar;
	}
	
	public ParserRule getSeminarRule() {
		return getSeminarAccess().getRule();
	}
	
	//Supervisor:
	//	name=ID;
	public SupervisorElements getSupervisorAccess() {
		return pSupervisor;
	}
	
	public ParserRule getSupervisorRule() {
		return getSupervisorAccess().getRule();
	}
	
	//Student:
	//	name=ID;
	public StudentElements getStudentAccess() {
		return pStudent;
	}
	
	public ParserRule getStudentRule() {
		return getStudentAccess().getRule();
	}
	
	//Topic:
	//	name=ID;
	public TopicElements getTopicAccess() {
		return pTopic;
	}
	
	public ParserRule getTopicRule() {
		return getTopicAccess().getRule();
	}
	
	//Preference:
	//	student=[Student] 'prefers' topic=[Topic] ';';
	public PreferenceElements getPreferenceAccess() {
		return pPreference;
	}
	
	public ParserRule getPreferenceRule() {
		return getPreferenceAccess().getRule();
	}
	
	//Supervise:
	//	supervisor=[Supervisor] 'supervises' topic=[Topic] ';';
	public SuperviseElements getSuperviseAccess() {
		return pSupervise;
	}
	
	public ParserRule getSuperviseRule() {
		return getSuperviseAccess().getRule();
	}
	
	//Assignment:
	//	student=[Student] 'is' 'assigned' 'to' topic=[Topic] ';';
	public AssignmentElements getAssignmentAccess() {
		return pAssignment;
	}
	
	public ParserRule getAssignmentRule() {
		return getAssignmentAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
