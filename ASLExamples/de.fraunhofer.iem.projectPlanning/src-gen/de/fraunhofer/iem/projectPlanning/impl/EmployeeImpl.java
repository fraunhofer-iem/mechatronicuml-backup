/**
 * generated by Xtext 2.10.0
 */
package de.fraunhofer.iem.projectPlanning.impl;

import de.fraunhofer.iem.projectPlanning.Capability;
import de.fraunhofer.iem.projectPlanning.Employee;
import de.fraunhofer.iem.projectPlanning.ProjectPlanningPackage;
import de.fraunhofer.iem.projectPlanning.Rating;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Employee</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.fraunhofer.iem.projectPlanning.impl.EmployeeImpl#getName <em>Name</em>}</li>
 *   <li>{@link de.fraunhofer.iem.projectPlanning.impl.EmployeeImpl#getHasResource <em>Has Resource</em>}</li>
 *   <li>{@link de.fraunhofer.iem.projectPlanning.impl.EmployeeImpl#getHasCapabilities <em>Has Capabilities</em>}</li>
 *   <li>{@link de.fraunhofer.iem.projectPlanning.impl.EmployeeImpl#getRatings <em>Ratings</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EmployeeImpl extends MinimalEObjectImpl.Container implements Employee
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getHasResource() <em>Has Resource</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHasResource()
   * @generated
   * @ordered
   */
  protected static final int HAS_RESOURCE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getHasResource() <em>Has Resource</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHasResource()
   * @generated
   * @ordered
   */
  protected int hasResource = HAS_RESOURCE_EDEFAULT;

  /**
   * The cached value of the '{@link #getHasCapabilities() <em>Has Capabilities</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHasCapabilities()
   * @generated
   * @ordered
   */
  protected EList<Capability> hasCapabilities;

  /**
   * The cached value of the '{@link #getRatings() <em>Ratings</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRatings()
   * @generated
   * @ordered
   */
  protected EList<Rating> ratings;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EmployeeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ProjectPlanningPackage.Literals.EMPLOYEE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ProjectPlanningPackage.EMPLOYEE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getHasResource()
  {
    return hasResource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHasResource(int newHasResource)
  {
    int oldHasResource = hasResource;
    hasResource = newHasResource;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ProjectPlanningPackage.EMPLOYEE__HAS_RESOURCE, oldHasResource, hasResource));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Capability> getHasCapabilities()
  {
    if (hasCapabilities == null)
    {
      hasCapabilities = new EObjectResolvingEList<Capability>(Capability.class, this, ProjectPlanningPackage.EMPLOYEE__HAS_CAPABILITIES);
    }
    return hasCapabilities;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Rating> getRatings()
  {
    if (ratings == null)
    {
      ratings = new EObjectContainmentEList<Rating>(Rating.class, this, ProjectPlanningPackage.EMPLOYEE__RATINGS);
    }
    return ratings;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ProjectPlanningPackage.EMPLOYEE__RATINGS:
        return ((InternalEList<?>)getRatings()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ProjectPlanningPackage.EMPLOYEE__NAME:
        return getName();
      case ProjectPlanningPackage.EMPLOYEE__HAS_RESOURCE:
        return getHasResource();
      case ProjectPlanningPackage.EMPLOYEE__HAS_CAPABILITIES:
        return getHasCapabilities();
      case ProjectPlanningPackage.EMPLOYEE__RATINGS:
        return getRatings();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ProjectPlanningPackage.EMPLOYEE__NAME:
        setName((String)newValue);
        return;
      case ProjectPlanningPackage.EMPLOYEE__HAS_RESOURCE:
        setHasResource((Integer)newValue);
        return;
      case ProjectPlanningPackage.EMPLOYEE__HAS_CAPABILITIES:
        getHasCapabilities().clear();
        getHasCapabilities().addAll((Collection<? extends Capability>)newValue);
        return;
      case ProjectPlanningPackage.EMPLOYEE__RATINGS:
        getRatings().clear();
        getRatings().addAll((Collection<? extends Rating>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ProjectPlanningPackage.EMPLOYEE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case ProjectPlanningPackage.EMPLOYEE__HAS_RESOURCE:
        setHasResource(HAS_RESOURCE_EDEFAULT);
        return;
      case ProjectPlanningPackage.EMPLOYEE__HAS_CAPABILITIES:
        getHasCapabilities().clear();
        return;
      case ProjectPlanningPackage.EMPLOYEE__RATINGS:
        getRatings().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ProjectPlanningPackage.EMPLOYEE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case ProjectPlanningPackage.EMPLOYEE__HAS_RESOURCE:
        return hasResource != HAS_RESOURCE_EDEFAULT;
      case ProjectPlanningPackage.EMPLOYEE__HAS_CAPABILITIES:
        return hasCapabilities != null && !hasCapabilities.isEmpty();
      case ProjectPlanningPackage.EMPLOYEE__RATINGS:
        return ratings != null && !ratings.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", hasResource: ");
    result.append(hasResource);
    result.append(')');
    return result.toString();
  }

} //EmployeeImpl
