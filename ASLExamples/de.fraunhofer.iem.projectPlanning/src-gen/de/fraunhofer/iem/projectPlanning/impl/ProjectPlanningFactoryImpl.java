/**
 * generated by Xtext 2.11.0
 */
package de.fraunhofer.iem.projectPlanning.impl;

import de.fraunhofer.iem.projectPlanning.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ProjectPlanningFactoryImpl extends EFactoryImpl implements ProjectPlanningFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static ProjectPlanningFactory init()
  {
    try
    {
      ProjectPlanningFactory theProjectPlanningFactory = (ProjectPlanningFactory)EPackage.Registry.INSTANCE.getEFactory(ProjectPlanningPackage.eNS_URI);
      if (theProjectPlanningFactory != null)
      {
        return theProjectPlanningFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new ProjectPlanningFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProjectPlanningFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case ProjectPlanningPackage.PROJECT_PLAN: return createProjectPlan();
      case ProjectPlanningPackage.PROJECT: return createProject();
      case ProjectPlanningPackage.EMPLOYEE: return createEmployee();
      case ProjectPlanningPackage.CAPABILITY: return createCapability();
      case ProjectPlanningPackage.RATING: return createRating();
      case ProjectPlanningPackage.ASSIGNMENT: return createAssignment();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProjectPlan createProjectPlan()
  {
    ProjectPlanImpl projectPlan = new ProjectPlanImpl();
    return projectPlan;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Project createProject()
  {
    ProjectImpl project = new ProjectImpl();
    return project;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Employee createEmployee()
  {
    EmployeeImpl employee = new EmployeeImpl();
    return employee;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Capability createCapability()
  {
    CapabilityImpl capability = new CapabilityImpl();
    return capability;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Rating createRating()
  {
    RatingImpl rating = new RatingImpl();
    return rating;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Assignment createAssignment()
  {
    AssignmentImpl assignment = new AssignmentImpl();
    return assignment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProjectPlanningPackage getProjectPlanningPackage()
  {
    return (ProjectPlanningPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static ProjectPlanningPackage getPackage()
  {
    return ProjectPlanningPackage.eINSTANCE;
  }

} //ProjectPlanningFactoryImpl
