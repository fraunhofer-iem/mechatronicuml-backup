/*
 * generated by Xtext 2.11.0
 */
grammar InternalProjectPlanning;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.fraunhofer.iem.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.fraunhofer.iem.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.fraunhofer.iem.services.ProjectPlanningGrammarAccess;

}

@parser::members {

 	private ProjectPlanningGrammarAccess grammarAccess;

    public InternalProjectPlanningParser(TokenStream input, ProjectPlanningGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "ProjectPlan";
   	}

   	@Override
   	protected ProjectPlanningGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProjectPlan
entryRuleProjectPlan returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProjectPlanRule()); }
	iv_ruleProjectPlan=ruleProjectPlan
	{ $current=$iv_ruleProjectPlan.current; }
	EOF;

// Rule ProjectPlan
ruleProjectPlan returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='capabilities:'
			{
				newLeafNode(otherlv_0, grammarAccess.getProjectPlanAccess().getCapabilitiesKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProjectPlanAccess().getCapabilitiesCapabilityParserRuleCall_0_1_0());
					}
					lv_capabilities_1_0=ruleCapability
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProjectPlanRule());
						}
						add(
							$current,
							"capabilities",
							lv_capabilities_1_0,
							"de.fraunhofer.iem.ProjectPlanning.Capability");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					otherlv_2=','
					{
						newLeafNode(otherlv_2, grammarAccess.getProjectPlanAccess().getCommaKeyword_0_2_0());
					}
				)+
				(
					(
						{
							newCompositeNode(grammarAccess.getProjectPlanAccess().getCapabilitiesCapabilityParserRuleCall_0_2_1_0());
						}
						lv_capabilities_3_0=ruleCapability
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProjectPlanRule());
							}
							add(
								$current,
								"capabilities",
								lv_capabilities_3_0,
								"de.fraunhofer.iem.ProjectPlanning.Capability");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getProjectPlanAccess().getSemicolonKeyword_0_3());
			}
		)
		(
			otherlv_5='employees:'
			{
				newLeafNode(otherlv_5, grammarAccess.getProjectPlanAccess().getEmployeesKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProjectPlanAccess().getEmployeesEmployeeParserRuleCall_1_1_0());
					}
					lv_employees_6_0=ruleEmployee
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProjectPlanRule());
						}
						add(
							$current,
							"employees",
							lv_employees_6_0,
							"de.fraunhofer.iem.ProjectPlanning.Employee");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					otherlv_7=','
					{
						newLeafNode(otherlv_7, grammarAccess.getProjectPlanAccess().getCommaKeyword_1_2_0());
					}
				)+
				(
					(
						{
							newCompositeNode(grammarAccess.getProjectPlanAccess().getEmployeesEmployeeParserRuleCall_1_2_1_0());
						}
						lv_employees_8_0=ruleEmployee
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProjectPlanRule());
							}
							add(
								$current,
								"employees",
								lv_employees_8_0,
								"de.fraunhofer.iem.ProjectPlanning.Employee");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		(
			otherlv_9='projects:'
			{
				newLeafNode(otherlv_9, grammarAccess.getProjectPlanAccess().getProjectsKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProjectPlanAccess().getProjectsProjectParserRuleCall_2_1_0());
					}
					lv_projects_10_0=ruleProject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProjectPlanRule());
						}
						add(
							$current,
							"projects",
							lv_projects_10_0,
							"de.fraunhofer.iem.ProjectPlanning.Project");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					otherlv_11=','
					{
						newLeafNode(otherlv_11, grammarAccess.getProjectPlanAccess().getCommaKeyword_2_2_0());
					}
				)+
				(
					(
						{
							newCompositeNode(grammarAccess.getProjectPlanAccess().getProjectsProjectParserRuleCall_2_2_1_0());
						}
						lv_projects_12_0=ruleProject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProjectPlanRule());
							}
							add(
								$current,
								"projects",
								lv_projects_12_0,
								"de.fraunhofer.iem.ProjectPlanning.Project");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getProjectPlanAccess().getRatingsRatingParserRuleCall_3_0());
				}
				lv_ratings_13_0=ruleRating
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProjectPlanRule());
					}
					add(
						$current,
						"ratings",
						lv_ratings_13_0,
						"de.fraunhofer.iem.ProjectPlanning.Rating");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getProjectPlanAccess().getAssignmentsAssignmentParserRuleCall_4_0());
				}
				lv_assignments_14_0=ruleAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProjectPlanRule());
					}
					add(
						$current,
						"assignments",
						lv_assignments_14_0,
						"de.fraunhofer.iem.ProjectPlanning.Assignment");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleProject
entryRuleProject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProjectRule()); }
	iv_ruleProject=ruleProject
	{ $current=$iv_ruleProject.current; }
	EOF;

// Rule Project
ruleProject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getProjectAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProjectRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getProjectAccess().getColonKeyword_1());
		}
		(
			otherlv_2='requiresResources:'
			{
				newLeafNode(otherlv_2, grammarAccess.getProjectAccess().getRequiresResourcesKeyword_2_0());
			}
			(
				(
					lv_requiresResources_3_0=RULE_INT
					{
						newLeafNode(lv_requiresResources_3_0, grammarAccess.getProjectAccess().getRequiresResourcesINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProjectRule());
						}
						setWithLastConsumed(
							$current,
							"requiresResources",
							lv_requiresResources_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		(
			otherlv_4='requiresCapabilities:'
			{
				newLeafNode(otherlv_4, grammarAccess.getProjectAccess().getRequiresCapabilitiesKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProjectRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getProjectAccess().getRequiresCapabilitiesCapabilityCrossReference_3_1_0());
					}
				)
			)*
			(
				(
					otherlv_6=','
					{
						newLeafNode(otherlv_6, grammarAccess.getProjectAccess().getCommaKeyword_3_2_0());
					}
				)+
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getProjectRule());
							}
						}
						otherlv_7=RULE_ID
						{
							newLeafNode(otherlv_7, grammarAccess.getProjectAccess().getRequiresCapabilitiesCapabilityCrossReference_3_2_1_0());
						}
					)
				)
			)*
		)?
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getProjectAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleEmployee
entryRuleEmployee returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmployeeRule()); }
	iv_ruleEmployee=ruleEmployee
	{ $current=$iv_ruleEmployee.current; }
	EOF;

// Rule Employee
ruleEmployee returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getEmployeeAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEmployeeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getEmployeeAccess().getColonKeyword_1());
		}
		(
			otherlv_2='hasResources:'
			{
				newLeafNode(otherlv_2, grammarAccess.getEmployeeAccess().getHasResourcesKeyword_2_0());
			}
			(
				(
					lv_hasResource_3_0=RULE_INT
					{
						newLeafNode(lv_hasResource_3_0, grammarAccess.getEmployeeAccess().getHasResourceINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEmployeeRule());
						}
						setWithLastConsumed(
							$current,
							"hasResource",
							lv_hasResource_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		(
			otherlv_4='hasCapabilities:'
			{
				newLeafNode(otherlv_4, grammarAccess.getEmployeeAccess().getHasCapabilitiesKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEmployeeRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getEmployeeAccess().getHasCapabilitiesCapabilityCrossReference_3_1_0());
					}
				)
			)*
			(
				(
					otherlv_6=','
					{
						newLeafNode(otherlv_6, grammarAccess.getEmployeeAccess().getCommaKeyword_3_2_0());
					}
				)+
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEmployeeRule());
							}
						}
						otherlv_7=RULE_ID
						{
							newLeafNode(otherlv_7, grammarAccess.getEmployeeAccess().getHasCapabilitiesCapabilityCrossReference_3_2_1_0());
						}
					)
				)
			)*
		)?
		(
			otherlv_8='ratesCapabilities:'
			{
				newLeafNode(otherlv_8, grammarAccess.getEmployeeAccess().getRatesCapabilitiesKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEmployeeAccess().getRatingsRatingParserRuleCall_4_1_0());
					}
					lv_ratings_9_0=ruleRating
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEmployeeRule());
						}
						add(
							$current,
							"ratings",
							lv_ratings_9_0,
							"de.fraunhofer.iem.ProjectPlanning.Rating");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					otherlv_10=','
					{
						newLeafNode(otherlv_10, grammarAccess.getEmployeeAccess().getCommaKeyword_4_2_0());
					}
				)+
				(
					(
						{
							newCompositeNode(grammarAccess.getEmployeeAccess().getRatingsRatingParserRuleCall_4_2_1_0());
						}
						lv_ratings_11_0=ruleRating
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEmployeeRule());
							}
							add(
								$current,
								"ratings",
								lv_ratings_11_0,
								"de.fraunhofer.iem.ProjectPlanning.Rating");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_12=';'
		{
			newLeafNode(otherlv_12, grammarAccess.getEmployeeAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleCapability
entryRuleCapability returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCapabilityRule()); }
	iv_ruleCapability=ruleCapability
	{ $current=$iv_ruleCapability.current; }
	EOF;

// Rule Capability
ruleCapability returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getCapabilityAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getCapabilityRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleRating
entryRuleRating returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRatingRule()); }
	iv_ruleRating=ruleRating
	{ $current=$iv_ruleRating.current; }
	EOF;

// Rule Rating
ruleRating returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRatingRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getRatingAccess().getCapabilityCapabilityCrossReference_0_0());
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getRatingAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_rating_2_0=RULE_INT
				{
					newLeafNode(lv_rating_2_0, grammarAccess.getRatingAccess().getRatingINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRatingRule());
					}
					setWithLastConsumed(
						$current,
						"rating",
						lv_rating_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	iv_ruleAssignment=ruleAssignment
	{ $current=$iv_ruleAssignment.current; }
	EOF;

// Rule Assignment
ruleAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssignmentRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getAssignmentAccess().getProjectProjectCrossReference_0_0());
				}
			)
		)
		otherlv_1='is'
		{
			newLeafNode(otherlv_1, grammarAccess.getAssignmentAccess().getIsKeyword_1());
		}
		otherlv_2='assigned'
		{
			newLeafNode(otherlv_2, grammarAccess.getAssignmentAccess().getAssignedKeyword_2());
		}
		otherlv_3='to'
		{
			newLeafNode(otherlv_3, grammarAccess.getAssignmentAccess().getToKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssignmentRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getAssignmentAccess().getEmployeeEmployeeCrossReference_4_0());
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getAssignmentAccess().getSemicolonKeyword_5());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
