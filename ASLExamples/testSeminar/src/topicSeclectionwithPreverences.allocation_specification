testSpecificationName {

	nameProvider 'org.muml.psm.allocation.language.xtext.provider.SeminarNameProvider';
	storageProvider 'org.muml.psm.allocation.language.xtext.provider.SeminarStorageProvider';
	oclContext seminar::Seminar;
	import 'http://www.fraunhofer.de/iem/Seminar'
	relation {
		descriptors (first : seminar::Student, second : seminar::Topic);
		lower 1;
		upper 1;
		ocl self.students->product(self.topics);
	}
	
	constraint requiredLocation considerStudentsPreverences 
	{
		descriptors (first : seminar::Student, second : seminar::Topic);
		ocl 	
				self.preferences->collect( a | 
					a.student->product(a.topics))->asSet()
			;
	}
	
	constraint separateLocation differentTopics
	{
		descriptors(first :seminar::Student, second: seminar::Student);
		ocl
			self.students->product(self.students)->select(first.name<>second.name);
	}
	
	service topicFavorites{
		qos ratings{
			weight ratings;
			descriptors (first:seminar::Student, topic: seminar::Topic);
			ocl self.ratings->collect(r | Tuple{first=r.student,ratings=if(r.rating<=3) then r.rating else 3 endif, topic=r.topic})->asSet();
	}
	
	}
	max measure topicFavorites;
}