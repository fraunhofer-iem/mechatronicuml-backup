/**
 * generated by Xtext 2.11.0
 */
package de.fraunhofer.iem.seminarOrga.impl;

import de.fraunhofer.iem.seminarOrga.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class SeminarOrgaFactoryImpl extends EFactoryImpl implements SeminarOrgaFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static SeminarOrgaFactory init()
  {
    try
    {
      SeminarOrgaFactory theSeminarOrgaFactory = (SeminarOrgaFactory)EPackage.Registry.INSTANCE.getEFactory(SeminarOrgaPackage.eNS_URI);
      if (theSeminarOrgaFactory != null)
      {
        return theSeminarOrgaFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new SeminarOrgaFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SeminarOrgaFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case SeminarOrgaPackage.SEMINAR: return createSeminar();
      case SeminarOrgaPackage.SUPERVISOR: return createSupervisor();
      case SeminarOrgaPackage.STUDENT: return createStudent();
      case SeminarOrgaPackage.TOPIC: return createTopic();
      case SeminarOrgaPackage.PREFERENCE: return createPreference();
      case SeminarOrgaPackage.RATING: return createRating();
      case SeminarOrgaPackage.SUPERVISE: return createSupervise();
      case SeminarOrgaPackage.ASSIGNMENT: return createAssignment();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Seminar createSeminar()
  {
    SeminarImpl seminar = new SeminarImpl();
    return seminar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Supervisor createSupervisor()
  {
    SupervisorImpl supervisor = new SupervisorImpl();
    return supervisor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Student createStudent()
  {
    StudentImpl student = new StudentImpl();
    return student;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Topic createTopic()
  {
    TopicImpl topic = new TopicImpl();
    return topic;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Preference createPreference()
  {
    PreferenceImpl preference = new PreferenceImpl();
    return preference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Rating createRating()
  {
    RatingImpl rating = new RatingImpl();
    return rating;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Supervise createSupervise()
  {
    SuperviseImpl supervise = new SuperviseImpl();
    return supervise;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Assignment createAssignment()
  {
    AssignmentImpl assignment = new AssignmentImpl();
    return assignment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SeminarOrgaPackage getSeminarOrgaPackage()
  {
    return (SeminarOrgaPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static SeminarOrgaPackage getPackage()
  {
    return SeminarOrgaPackage.eINSTANCE;
  }

} //SeminarOrgaFactoryImpl
