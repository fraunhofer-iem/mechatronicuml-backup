
--core models
modeltype core uses core('http://www.storydriven.org/core/0.3.1');
modeltype expressions uses core::expressions('http://www.storydriven.org/core/0.3.1');
modeltype expressions_common uses core::expressions::common('http://www.storydriven.org/core/0.3.1');
modeltype modelinst uses modelinstance("http://www.fujaba.de/modelinstance/0.3.15");

-- muml models 
modeltype behavior uses muml::behavior("http://www.fujaba.de/muml/0.4.0");
modeltype types uses muml::types("http://www.fujaba.de/muml/0.4.0");
modeltype valuetype uses muml::valuetype("http://www.fujaba.de/muml/0.4.0");

modeltype actionlanguage uses actionlanguage('http://www.fujaba.de/muml/actionlanguage/0.3.19');

library ActionLanguageBaseLibrary;



-- constructors

constructor LiteralExpression::LiteralExpression(in newValue : String){
	value := newValue;
}

constructor ComparisonExpression::ComparisonExpression(in leftExpr : Expression, in op : ComparingOperator, in rightExpr : Expression){
	leftExpression := leftExpr;
	rightExpression := rightExpr;
	operator := op;
}

constructor LogicalExpression::LogicalExpression(in leftExpr : Expression, in op : LogicOperator, in rightExpr : Expression){
	leftExpression := leftExpr;
	rightExpression := rightExpr;
	operator := op;
}

constructor ArithmeticExpression::ArithmeticExpression(in leftExpr : Expression, in op : ArithmeticOperator, in rightExpr : Expression){
	leftExpression := leftExpr;
	rightExpression := rightExpr;
	operator := op;
}

constructor Assignment::Assignment(in variable : Variable, in op : AssignOperator, in rightExpr : Expression){
	lhs_typedNamedElementExpression := new TypedNamedElementExpression(variable);
	rhs_assignExpression := rightExpr;
	assignOperator := op;
}

constructor TypedNamedElementExpression::TypedNamedElementExpression(in element : TypedNamedElement){
	typedNamedElement := element;
}

constructor Block::Block(){
	
}
