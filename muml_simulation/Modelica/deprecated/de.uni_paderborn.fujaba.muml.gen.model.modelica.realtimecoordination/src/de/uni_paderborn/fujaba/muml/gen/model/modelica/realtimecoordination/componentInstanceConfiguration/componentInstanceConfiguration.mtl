[comment encoding = UTF-8 /]
[**
 * The documentation of the module componentInstanceConfiguration.
 */]
[module componentInstanceConfiguration('http://www.fujaba.de/muml/model/instance/0.2.2',
										'http://www.fujaba.de/muml/model/component/0.2.3')]

[import de::uni_paderborn::fujaba::muml::gen::model::modelica::realtimecoordination::common::componentQueries /]
[import de::uni_paderborn::fujaba::muml::gen::model::modelica::realtimecoordination::ComponentInstance::componentInstance /]

[**
 * Transform a component instance configuration
 * @param aComponentInstanceConfiguration
 */]
[template public transformComponentInstanceConfiguration(aComponentInstanceConfiguration : ComponentInstanceConfiguration){ allAtomicComponentsIntances : Set(ComponentInstance) = getAllAtomicComponentInstances(aComponentInstanceConfiguration->asSet()); }]
	[comment @TODOinstanciate all component instances in the model mainComponentInstanceConfiguration/]
    [createAllComponentInstanceConfiguration(aComponentInstanceConfiguration)/]
[/template]

[template public createAllComponentInstanceConfiguration(aComponentInstanceConfiguration : ComponentInstanceConfiguration)]
 [createMainComponentInstance(aComponentInstanceConfiguration)/]
[for (aComponentInstance : ComponentInstance | aComponentInstanceConfiguration.componentInstances)]
[if (aComponentInstance.componentType.oclIsTypeOf(StructuredComponent))]
[createRecursiveComponentInstanceConfigurations(aComponentInstance, 'Main_package/')/] 
[elseif (aComponentInstance.componentType.oclIsTypeOf(AtomicComponent))]
	[createAtomicComponentInstanceModelClasses(aComponentInstance, 'Main_package/')/]
[/if]
[/for]

[/template]

[**
 * instanciate all component instances in the model mainComponentInstanceConfiguration from aComponentInstanceConfiguration
 * @param aComponentInstanceConfiguration
 */]
[template public createMainComponentInstance(aComponentInstanceConfiguration : ComponentInstanceConfiguration)]
[file ('Main_package'+'/''package.mo', false, 'Cp1252')]
	package Main_package
// main package with all instances of a component instance configuration
annotation(Diagram(coordinateSystem(extent={{-148.5,-105.0},{148.5,105.0}}, preserveAspectRatio=true, initialScale=0.1, grid={10,10})), Icon(coordinateSystem(extent={{-100.0,-100.0},{100.0,100.0}}, preserveAspectRatio=true, initialScale=0.1, grid={10,10}), graphics={Rectangle(visible=true, origin={0.0,-11.4622}, fillColor={190,224,255}, fillPattern=FillPattern.Solid, extent={{-100.0,-58.5379},{100.0,58.5379}}),Rectangle(visible=true, origin={-55.0,63.5379}, fillColor={255,255,255}, fillPattern=FillPattern.Solid, extent={{-45.0,-16.4621},{45.0,16.4621}}),Text(visible=true, origin={0.0,-42.7008}, fillPattern=FillPattern.Solid, extent={{-93.2419,-12.7008},{93.2419,12.7008}}, textString="BouncingBallExample", fontName="Arial", textStyle={TextStyle.Bold}),Polygon(visible=true, origin={31.1881,0.7502}, fillColor={255,255,255}, fillPattern=FillPattern.Solid, points={{-1.1881,29.2498},{50.7679,-14.6249},{-49.5798,-14.6249}})}));
end Main_package;
[/file]	
[file ('Main_package/mainComponentInstances.mo', false, 'UTF-8')]
	within Main_package;
		[comment  Instanciate all Component Instances of this Comonent Instance Configuration/]
		model mainComponentInstanceConfiguration
      	[for (componentInstance : ComponentInstance | aComponentInstanceConfiguration.componentInstances)]
			[componentInstance.init_ComponentInstance('Main_package')/]			
		[/for]
		end mainComponentInstanceConfiguration;
	[/file]
[/template]

