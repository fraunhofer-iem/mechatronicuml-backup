testSpecificationName {
	constraint requiredHardwareResourceInstance bar {
		descriptors (a, b), (c, d);
		ocl let c1 : instance::ComponentInstance = self.componentInstanceConfiguration.componentInstances->any(name='c1')
		in
		let c3 : instance::ComponentInstance = self.componentInstanceConfiguration.componentInstances->any(name='c3')
		in
		let e1 : hwresourceinstance::ResourceInstance = self.hardwarePlatformInstanceConfiguration.resources->any(name='e1')
		in
		let e3 : hwresourceinstance::ResourceInstance = self.hardwarePlatformInstanceConfiguration.resources->any(name='e3')
		in
		Set{
			-- mixed tuple order
			Tuple{a = c1, c = c3, b = e3, d = e3}
		};
	}
	
	constraint requiredHardwareResourceInstance foo {
		descriptors (ins1, res1) , (ins2, res2);
		ocl let c1 : instance::ComponentInstance = self.componentInstanceConfiguration.componentInstances->any(name='c1')
		in
		let c3 : instance::ComponentInstance = self.componentInstanceConfiguration.componentInstances->any(name='c3')
		in
		let e1 : hwresourceinstance::ResourceInstance = self.hardwarePlatformInstanceConfiguration.resources->any(name='e1')
		in
		let e2 : hwresourceinstance::ResourceInstance = self.hardwarePlatformInstanceConfiguration.resources->any(name='e2')
		in
		let e3 : hwresourceinstance::ResourceInstance = self.hardwarePlatformInstanceConfiguration.resources->any(name='e3')
		in
		Set{Tuple{ins1 = c1, res1 = e1, ins2 = c3, res2 = e2},
			Tuple{ins1 = c1, res1 = e1, ins2 = c3, res2 = e3},
			Tuple{ins1 = c1, res1 = e2, ins2 = c3, res2 = e2},
			Tuple{ins1 = c1, res1 = e2, ins2 = c3, res2 = e3}
		};
	}
}