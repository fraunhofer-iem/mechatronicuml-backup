//import CommonLibrary;
import ComponentInstanceLibrary;
import ComponentLibrary;

import ModelcopyLibrary;

transformation CodeGenNormalizationTransformation(in inCodeGenModel:Codegen,  out outCodeGenModel:Codegen);


modeltype Core uses core('http://www.storydriven.org/core/0.3.1');

modeltype MumlPackage uses muml('http://www.fujaba.de/muml/0.4.0');
modeltype Typespackage uses muml::types('http://www.fujaba.de/muml/0.4.0');
modeltype ConnectorPackage uses muml::connector('http://www.fujaba.de/muml/0.4.0');
modeltype ValuetypePackage uses muml::valuetype('http://www.fujaba.de/muml/0.4.0');
modeltype ComponentPackage uses muml::component('http://www.fujaba.de/muml/0.4.0');
modeltype MessagePackage uses muml::msgtype('http://www.fujaba.de/muml/0.4.0');
modeltype RTSCPackage uses muml::realtimestatechart('http://www.fujaba.de/muml/0.4.0');
modeltype ProtocolPackage uses muml::protocol('http://www.fujaba.de/muml/0.4.0');
modeltype InstancePackage uses muml::instance('http://www.fujaba.de/muml/0.4.0');
modeltype ModelInstance uses modelinstance('http://www.fujaba.de/modelinstance/0.4.0');
modeltype Actionlanguage uses actionlanguage('http://www.fujaba.de/muml/actionlanguage/0.4.0');

modeltype PSM uses psm('http://www.fujaba.de/muml/psm/0.4.0/');
modeltype Allocation uses psm::allocation('http://www.fujaba.de/muml/psm/0.4.0/');
modeltype Codegen uses psm::codegen('http://www.fujaba.de/muml/psm/0.4.0/');
modeltype PortMappingModel uses psm::portapimapping('http://www.fujaba.de/muml/psm/0.4.0/');
modeltype ApiExpessions uses psm::apiexpressions('http://www.fujaba.de/muml/psm/0.4.0/');
modeltype PSMInstance uses psm::psm_instance('http://www.fujaba.de/muml/psm/0.4.0/');
modeltype PSMRTSC uses psm::psm_realtimestatechart('http://www.fujaba.de/muml/psm/0.4.0/');
modeltype PSMRTSCParameter uses psm::psm_realtimestatechart::realtimestatechartparameter('http://www.fujaba.de/muml/psm/0.4.0/');

modeltype SoftPlattform uses swplatform('http://www.fujaba.de/muml/swplatform/0.4.0/');
modeltype Hardware uses hardware('http://www.fujaba.de/muml/hardware/1.1/');
modeltype Platform uses hardware::hwplatform('http://www.fujaba.de/muml/hardware/1.1/');
modeltype PlatformInstance uses hardware::hwplatforminstance('http://www.fujaba.de/muml/hardware/1.1/');
modeltype ResourceInstance uses hardware::hwresourceinstance('http://www.fujaba.de/muml/hardware/1.1/');
modeltype Resource uses hardware::hwresource('http://www.fujaba.de/muml/hardware/1.1/');

modeltype ecore uses 'http://www.eclipse.org/emf/2002/Ecore';


main() {
	//initialoize propery
	property_genComponentInstance:=inCodeGenModel.rootObjects()[GenSystem]->any(true).genECUs.allocatedGenTasks.genComponentInstances;
	
	//inCodeGenModel.rootObjects()[GenSystem].genECUs.allocatedGenTasks->map transform();
//	log(outCodeGenModel.toString());
//	outCodeGenModel.rootObjects()->forEach(elem){
//		log(elem.toString());
//	}

	inCodeGenModel.rootObjects()[GenSystem]->map mapGenSystem();
	//inCodeGenModel.rootObjects()[RootNode]->map transform();
}


mapping GenSystem::mapGenSystem():GenSystem{
	cic:=self.cic.map transform().oclAsType(ComponentInstanceConfiguration);
	hpic:=self.hpic;
	genECUs:=self.genECUs->map mapGenECU();	
}


mapping GenECU::mapGenECU():GenECU{
	ecu:=self.ecu;
	allocatedGenTasks:=self.allocatedGenTasks->map mapGenTask();
}

mapping GenTask::mapGenTask():GenTask{
	genComponentInstances:=self.genComponentInstances->map mapGenComponentInstance();
}

mapping GenComponentInstance::mapGenComponentInstance():GenComponentInstance{
	componentInstance:=self.componentInstance.late resolveone(ComponentInstance);
} 

mapping RootNode::create() : EObject {
	init {
		result := new RootNode().oclAsType(EObject);
	}
}


mapping ComponentInstanceConfiguration::create():EObject{
init {
		result := new ComponentInstanceConfiguration().oclAsType(EObject);
	}
}


mapping MessageTypeRepository::create():EObject{
init {
		result := new MessageTypeRepository().oclAsType(EObject);
	}
}



mapping StaticAtomicComponent::create():EObject{
init {
		result := new StaticAtomicComponent().oclAsType(EObject);
	}
}

mapping StaticStructuredComponent::create():EObject{
init {
		result := new StaticStructuredComponent().oclAsType(EObject);
	}
}

mapping PrimitiveDataType::create():EObject{
init {
		result := new PrimitiveDataType().oclAsType(EObject);
	}
}

mapping CoordinationProtocol::create():EObject{
init {
		result := new CoordinationProtocol().oclAsType(EObject);
	}
}