testSpecificationName {
	constraint sameLocation foo {
		descriptors (a, b);
		ocl let c1 : instance::ComponentInstance = self.componentInstanceConfiguration.componentInstances->any(name='c1')
		in
		let c2 : instance::ComponentInstance = self.componentInstanceConfiguration.componentInstances->any(name='c2')
		in
		Set{Tuple{a : instance::ComponentInstance = c1, b : instance::ComponentInstance = c2}};
	}
	
	constraint sameLocation sc1Embedded {
		descriptors (first, second);
		ocl let sc1 : instance::StructuredComponentInstance = self.componentInstanceConfiguration.componentInstances->any(name='sc1').oclAsType(instance::StructuredComponentInstance)
		in
        -- change order of the cartesian product (cf. "locationConstraintStructured.allocation_specification")
		sc1.embeddedCIC.componentInstances->product(sc1.oclAsType(instance::ComponentInstance)->asSet())
		;
	}
}
