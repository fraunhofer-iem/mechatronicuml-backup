import transforms.lib.MUML2MUML;
import transforms.lib.ExternalizedStrings;
import transforms.lib.RTSCUtil;
import org.muml.uppaal.adapter._blackbox.CharSubstitutionUnit;

modeltype modelinstance uses 'http://www.muml.org/core/modelinstance/1.0.0';
modeltype ecore uses 'http://www.eclipse.org/emf/2002/Ecore';
modeltype muml_protocol uses pim::protocol('http://www.muml.org/pim/1.0.0');
modeltype storydriven uses 'http://www.muml.org/core/1.0.0';

transformation NameNormalization(in input:muml_protocol, out output:muml_protocol) extends MUML2MUML;


main() {
	input.objects()[RootNode]->map RootNode2RootNode();
	output.objects()[NamedElement]->forEach(nE){substituteUnsupportedStrings(nE)};
	output.objects()[NamedElement]->forEach(nE){addPrefix(nE)};
	output.objects()[NamedElement]->forEach(nE){addSuffix(nE)};
}

helper substituteUnsupportedStrings(inout theNamedElement : NamedElement){
	theNamedElement.name := substituteUnsupportedCharsByUTF(theNamedElement.name);
}

helper addPrefix(inout theNamedElement : NamedElement){
	theNamedElement.name := mumlPrefix+(theNamedElement.name);
}

helper addSuffix(inout theNamedElement : NamedElement) {
	theNamedElement.name := theNamedElement.name.addSuffixNumberUnderline();
}

