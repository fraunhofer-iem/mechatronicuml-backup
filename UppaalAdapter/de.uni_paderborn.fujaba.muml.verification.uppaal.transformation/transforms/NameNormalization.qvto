import transforms.lib.MUML2MUML;
import transforms.lib.ExternalizedStrings;

modeltype modelinstance uses 'http://www.fujaba.de/modelinstance/0.4.0';
modeltype ecore uses 'http://www.eclipse.org/emf/2002/Ecore';
modeltype muml_protocol uses muml::protocol('http://www.fujaba.de/muml/0.4.0');
modeltype storydriven uses 'http://www.storydriven.org/core/0.3.1';

transformation NameNormalization(in input:muml_protocol, out output:muml_protocol) extends MUML2MUML;


main() {
	input.objects()[RootNode]->map RootNode2RootNode();
	output.objects()[NamedElement]->forEach(nE){substituteUnsupportedStrings(nE)};
	output.objects()[NamedElement]->forEach(nE){addPrefix(nE)};
	output.objects()[NamedElement]->forEach(nE){addSuffix(nE)};
}

helper substituteUnsupportedStrings(inout theNamedElement : NamedElement){
	getUnsupportedStrings()->forEach(uS){	
		theNamedElement.name := theNamedElement.name.substituteAll(uS, substituteString);
	}
}

helper addPrefix(inout theNamedElement : NamedElement){
	theNamedElement.name := mumlPrefix+(theNamedElement.name);
}

helper addSuffix(inout theNamedElement : NamedElement) {
	theNamedElement.name := theNamedElement.name.addSuffixNumber();
}

