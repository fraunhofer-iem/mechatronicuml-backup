<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'>
	<nta>
		<declaration>


urgent  chan  hurry  ;  


const int  NUM_OF_MESSAGES   = 4;  

typedef int [0, NUM_OF_MESSAGES]
Message;


const Message  null   = 0, accept   = 1, decline   = 2, finish   = 3, request   = 4;  


const int  CAPACITY   = 5;  

typedef struct {

int [0, CAPACITY]
tail  ;  


Message  messages [CAPACITY]
;  
}
Buffer;

bool check(
Buffer  buffer  , 
Message  m  )
{
return (m != null 
and buffer.messages[0] == m); 
} 
 

void remove(
Buffer &amp; buffer  , 
Message  m  )
{
if(check(buffer,m)
)
{


int  i  ;  
for(i = 0; i &lt; CAPACITY - 1; i++)
buffer.messages[i] = buffer.messages[i + 1];
;
; buffer.messages[CAPACITY - 1] = null;
; buffer.tail--;
} 
;
} 
 

void add(
Buffer &amp; b  , 
Message  e  )
{
b.messages[b.tail] = e;
; b.tail++;
} 
 


const int  NUM_OF_INSTANCES   = 2;  

typedef int [0, NUM_OF_INSTANCES - 1]
instance;


bool  overflow  ;  


Buffer  buffers [instance]
;  


Buffer  connectors [instance]
;  


int  earliest [instance]
;  


int  latest [instance]
;  


clock  transmissionTimes [instance]
[CAPACITY]
;  

void send(
instance  sender  , 
Message  m  )
{
if(connectors[sender].tail &lt; CAPACITY)
{
add(connectors[sender],m)
;
; transmissionTimes[sender][latest[sender]] = 0;
; latest[sender] == CAPACITY - 1 ? latest[sender] = 0 : latest[sender]++;
} 
else overflow = true;
;
} 
 

bool receive(
instance  receiver  , 
Message  m  )
{
return check(buffers[receiver],m)
; 
} 
 

void consume(
instance  receiver  , 
Message  m  )
{
if(receive(receiver,m)
)
remove(buffers[receiver],m)
;
;
} 
 

typedef int [0, 0]
rear_RANGE;


int  trigger0 [rear_RANGE]
  = {0}	
;  


int  trigger1 [rear_RANGE]
  = {1}	
;  


int  trigger2 [rear_RANGE]
  = {0}	
;  


clock  overtakingTime [rear_RANGE]
;  


clock  waitingTime [rear_RANGE]
;  


urgent  chan  exit_noOvertaking0 [rear_RANGE]
;  


urgent  chan  enter_noOvertaking_in_rear_via_entry2 [rear_RANGE]
;  


urgent  chan  enter_noOvertaking_in_rear_via_entry1 [rear_RANGE]
;  

typedef int [1, 1]
front_RANGE;


int  trigger [front_RANGE]
  = {0}	
;  


clock  evaluationTime [front_RANGE]
;  


urgent  chan  exit_noOvertaking [front_RANGE]
;  


urgent  chan  enter_noOvertaking_in_front_via_entry [front_RANGE]
;  


urgent  chan  enter_noOvertaking_in_front_via_entry2 [front_RANGE]
;  



		</declaration>
		
<template>
    <name>Connector</name>
	
		<parameter>

const instance  sender  , 
const instance  receiver  , 
const int  min  , 
const int  max  , 
const bool  loss  , 
const int  bufferSize  
		</parameter>
	
	<declaration>
		


Message  tmp  ;  


	</declaration>	
	
<location id="Idle_Connector" x="" y="" color="Default">
	<name>Idle</name>
<label kind="invariant">connectors[sender].tail &gt; 0 imply transmissionTimes[sender][earliest[sender]] &lt;= max</label>


</location>

<location id="transfer_loc_Connector" x="" y="" color="Default">
	<name>transfer_loc</name>


<committed/>
</location>

	<init ref="Idle_Connector"/>
	
<transition>
<source ref="Idle_Connector"/>
<target ref="transfer_loc_Connector"/>
<label kind="select">i   : Message</label>
<label kind="guard">(check(connectors[sender],i)
 
and transmissionTimes[sender][earliest[sender]] &gt;= min 
and transmissionTimes[sender][earliest[sender]] &lt;= max)</label>

<label kind="assignment">tmp = i, 
remove(connectors[sender],i)
, 
earliest[sender] == CAPACITY - 1 ? earliest[sender] = 0 : earliest[sender]++</label>
</transition>

<transition>
<source ref="transfer_loc_Connector"/>
<target ref="Idle_Connector"/>
<label kind="select"></label>
<label kind="guard">buffers[receiver].tail &lt; bufferSize</label>

<label kind="assignment">add(buffers[receiver],tmp)
</label>
</transition>

<transition>
<source ref="transfer_loc_Connector"/>
<target ref="Idle_Connector"/>
<label kind="select"></label>
<label kind="guard">buffers[receiver].tail &gt;= bufferSize</label>

<label kind="assignment">overflow = true</label>
</transition>

<transition>
<source ref="transfer_loc_Connector"/>
<target ref="Idle_Connector"/>
<label kind="select"></label>
<label kind="guard">loss == true</label>

<label kind="assignment"></label>
</transition>

</template>

<template>
    <name>rear</name>
	
		<parameter>

const rear_RANGE  portOrRoleInstanceID  
		</parameter>
	
	<declaration>
		
	</declaration>	
	
<location id="rear_IDLE_rear" x="" y="" color="Default">
	<name>rear_IDLE</name>



</location>

<location id="overtaking_ACTIVE_IN_rear_rear" x="" y="" color="Default">
	<name>overtaking_ACTIVE_IN_rear</name>
<label kind="invariant">overtakingTime[portOrRoleInstanceID] &lt;= 10</label>


</location>

<location id="noOvertaking_ACTIVE_IN_rear_rear" x="" y="" color="Default">
	<name>noOvertaking_ACTIVE_IN_rear</name>



</location>

<location id="rear_AUX_noOvertaking_entry2_rear" x="" y="" color="Default">
	<name>rear_AUX_noOvertaking_entry2</name>


<committed/>
</location>

<location id="rear_AUX_noOvertaking_entry1_rear" x="" y="" color="Default">
	<name>rear_AUX_noOvertaking_entry1</name>


<committed/>
</location>

<location id="exit20_rear" x="" y="" color="Default">
	<name>exit20</name>


<committed/>
</location>

<location id="exit11_rear" x="" y="" color="Default">
	<name>exit11</name>


<committed/>
</location>

<location id="exit12_rear" x="" y="" color="Default">
	<name>exit12</name>


<committed/>
</location>

	<init ref="noOvertaking_ACTIVE_IN_rear_rear"/>
	
<transition>
<source ref="exit20_rear"/>
<target ref="overtaking_ACTIVE_IN_rear_rear"/>
<label kind="select"></label>

<label kind="synchronisation">exit_noOvertaking0[portOrRoleInstanceID]!</label>
<label kind="assignment">overtakingTime[portOrRoleInstanceID] = 0</label>
</transition>

<transition>
<source ref="overtaking_ACTIVE_IN_rear_rear"/>
<target ref="rear_AUX_noOvertaking_entry2_rear"/>
<label kind="select"></label>
<label kind="guard">overtakingTime[portOrRoleInstanceID] &gt;= 10</label>

<label kind="assignment"></label>
</transition>

<transition>
<source ref="rear_AUX_noOvertaking_entry2_rear"/>
<target ref="noOvertaking_ACTIVE_IN_rear_rear"/>
<label kind="select"></label>

<label kind="synchronisation">enter_noOvertaking_in_rear_via_entry2[portOrRoleInstanceID]!</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="rear_AUX_noOvertaking_entry1_rear"/>
<target ref="noOvertaking_ACTIVE_IN_rear_rear"/>
<label kind="select"></label>

<label kind="synchronisation">enter_noOvertaking_in_rear_via_entry1[portOrRoleInstanceID]!</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="noOvertaking_ACTIVE_IN_rear_rear"/>
<target ref="exit20_rear"/>
<label kind="select"></label>
<label kind="guard">(trigger0[portOrRoleInstanceID] == 1 
and receive(portOrRoleInstanceID,accept)
)</label>
<label kind="synchronisation">hurry?</label>
<label kind="assignment">consume(portOrRoleInstanceID,accept)
</label>
</transition>

<transition>
<source ref="noOvertaking_ACTIVE_IN_rear_rear"/>
<target ref="exit11_rear"/>
<label kind="select"></label>
<label kind="guard">(trigger1[portOrRoleInstanceID] == 1 
and receive(portOrRoleInstanceID,decline)
)</label>
<label kind="synchronisation">hurry?</label>
<label kind="assignment">consume(portOrRoleInstanceID,decline)
</label>
</transition>

<transition>
<source ref="noOvertaking_ACTIVE_IN_rear_rear"/>
<target ref="exit12_rear"/>
<label kind="select"></label>
<label kind="guard">(trigger2[portOrRoleInstanceID] == 1 
and receive(portOrRoleInstanceID,decline)
)</label>
<label kind="synchronisation">hurry?</label>
<label kind="assignment">consume(portOrRoleInstanceID,decline)
</label>
</transition>

<transition>
<source ref="exit11_rear"/>
<target ref="rear_AUX_noOvertaking_entry1_rear"/>
<label kind="select"></label>

<label kind="synchronisation">exit_noOvertaking0[portOrRoleInstanceID]!</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="exit12_rear"/>
<target ref="rear_AUX_noOvertaking_entry1_rear"/>
<label kind="select"></label>

<label kind="synchronisation">exit_noOvertaking0[portOrRoleInstanceID]!</label>
<label kind="assignment"></label>
</transition>

</template>

<template>
    <name>rear_noOvertaking</name>
	
		<parameter>

const rear_RANGE  portOrRoleInstanceID  
		</parameter>
	
	<declaration>
		
	</declaration>	
	
<location id="rear_noOvertaking_IDLE_rear_noOvertaking" x="" y="" color="Default">
	<name>rear_noOvertaking_IDLE</name>



</location>

<location id="init_ACTIVE_IN_rear_noOvertaking_rear_noOvertaking" x="" y="" color="Default">
	<name>init_ACTIVE_IN_rear_noOvertaking</name>



</location>

<location id="requested_ACTIVE_IN_rear_noOvertaking_rear_noOvertaking" x="" y="" color="Default">
	<name>requested_ACTIVE_IN_rear_noOvertaking</name>
<label kind="invariant">waitingTime[portOrRoleInstanceID] &lt;= 7</label>


</location>

	<init ref="init_ACTIVE_IN_rear_noOvertaking_rear_noOvertaking"/>
	
<transition>
<source ref="init_ACTIVE_IN_rear_noOvertaking_rear_noOvertaking"/>
<target ref="rear_noOvertaking_IDLE_rear_noOvertaking"/>
<label kind="select"></label>

<label kind="synchronisation">exit_noOvertaking0[portOrRoleInstanceID]?</label>
<label kind="assignment">trigger1[portOrRoleInstanceID] -= 1</label>
</transition>

<transition>
<source ref="requested_ACTIVE_IN_rear_noOvertaking_rear_noOvertaking"/>
<target ref="rear_noOvertaking_IDLE_rear_noOvertaking"/>
<label kind="select"></label>

<label kind="synchronisation">exit_noOvertaking0[portOrRoleInstanceID]?</label>
<label kind="assignment">trigger0[portOrRoleInstanceID] -= 1, 
trigger2[portOrRoleInstanceID] -= 1</label>
</transition>

<transition>
<source ref="requested_ACTIVE_IN_rear_noOvertaking_rear_noOvertaking"/>
<target ref="rear_noOvertaking_IDLE_rear_noOvertaking"/>
<label kind="select"></label>

<label kind="synchronisation">exit_noOvertaking0[portOrRoleInstanceID]?</label>
<label kind="assignment">trigger0[portOrRoleInstanceID] -= 1, 
trigger2[portOrRoleInstanceID] -= 1</label>
</transition>

<transition>
<source ref="rear_noOvertaking_IDLE_rear_noOvertaking"/>
<target ref="init_ACTIVE_IN_rear_noOvertaking_rear_noOvertaking"/>
<label kind="select"></label>

<label kind="synchronisation">enter_noOvertaking_in_rear_via_entry2[portOrRoleInstanceID]?</label>
<label kind="assignment">trigger1[portOrRoleInstanceID] += 1, 
send(portOrRoleInstanceID,finish)
</label>
</transition>

<transition>
<source ref="rear_noOvertaking_IDLE_rear_noOvertaking"/>
<target ref="init_ACTIVE_IN_rear_noOvertaking_rear_noOvertaking"/>
<label kind="select"></label>

<label kind="synchronisation">enter_noOvertaking_in_rear_via_entry1[portOrRoleInstanceID]?</label>
<label kind="assignment">trigger1[portOrRoleInstanceID] += 1</label>
</transition>

<transition>
<source ref="requested_ACTIVE_IN_rear_noOvertaking_rear_noOvertaking"/>
<target ref="init_ACTIVE_IN_rear_noOvertaking_rear_noOvertaking"/>
<label kind="select"></label>
<label kind="guard">waitingTime[portOrRoleInstanceID] &gt;= 6</label>

<label kind="assignment">trigger0[portOrRoleInstanceID] -= 1, 
trigger1[portOrRoleInstanceID] += 1, 
trigger2[portOrRoleInstanceID] -= 1</label>
</transition>

<transition>
<source ref="requested_ACTIVE_IN_rear_noOvertaking_rear_noOvertaking"/>
<target ref="init_ACTIVE_IN_rear_noOvertaking_rear_noOvertaking"/>
<label kind="select"></label>
<label kind="guard">receive(portOrRoleInstanceID,decline)
</label>
<label kind="synchronisation">hurry?</label>
<label kind="assignment">consume(portOrRoleInstanceID,decline)
, 
trigger0[portOrRoleInstanceID] -= 1, 
trigger1[portOrRoleInstanceID] += 1, 
trigger2[portOrRoleInstanceID] -= 1</label>
</transition>

<transition>
<source ref="init_ACTIVE_IN_rear_noOvertaking_rear_noOvertaking"/>
<target ref="requested_ACTIVE_IN_rear_noOvertaking_rear_noOvertaking"/>
<label kind="select"></label>


<label kind="assignment">waitingTime[portOrRoleInstanceID] = 0, 
trigger0[portOrRoleInstanceID] += 1, 
trigger1[portOrRoleInstanceID] -= 1, 
trigger2[portOrRoleInstanceID] += 1, 
send(portOrRoleInstanceID,request)
</label>
</transition>

</template>

<template>
    <name>front</name>
	
		<parameter>

const front_RANGE  portOrRoleInstanceID  
		</parameter>
	
	<declaration>
		
	</declaration>	
	
<location id="front_IDLE_front" x="" y="" color="Default">
	<name>front_IDLE</name>



</location>

<location id="noAcceleration_ACTIVE_IN_front_front" x="" y="" color="Default">
	<name>noAcceleration_ACTIVE_IN_front</name>



</location>

<location id="noOvertaking_ACTIVE_IN_front_front" x="" y="" color="Default">
	<name>noOvertaking_ACTIVE_IN_front</name>



</location>

<location id="front_AUX_noOvertaking_entry_front" x="" y="" color="Default">
	<name>front_AUX_noOvertaking_entry</name>


<committed/>
</location>

<location id="front_AUX_noOvertaking_entry2_front" x="" y="" color="Default">
	<name>front_AUX_noOvertaking_entry2</name>


<committed/>
</location>

<location id="exit_front" x="" y="" color="Default">
	<name>exit</name>


<committed/>
</location>

	<init ref="noOvertaking_ACTIVE_IN_front_front"/>
	
<transition>
<source ref="exit_front"/>
<target ref="noAcceleration_ACTIVE_IN_front_front"/>
<label kind="select"></label>

<label kind="synchronisation">exit_noOvertaking[portOrRoleInstanceID]!</label>
<label kind="assignment">send(portOrRoleInstanceID,accept)
</label>
</transition>

<transition>
<source ref="noAcceleration_ACTIVE_IN_front_front"/>
<target ref="front_AUX_noOvertaking_entry_front"/>
<label kind="select"></label>
<label kind="guard">receive(portOrRoleInstanceID,finish)
</label>
<label kind="synchronisation">hurry?</label>
<label kind="assignment">consume(portOrRoleInstanceID,finish)
</label>
</transition>

<transition>
<source ref="noAcceleration_ACTIVE_IN_front_front"/>
<target ref="front_AUX_noOvertaking_entry2_front"/>
<label kind="select"></label>
<label kind="guard">receive(portOrRoleInstanceID,request)
</label>
<label kind="synchronisation">hurry?</label>
<label kind="assignment">consume(portOrRoleInstanceID,request)
</label>
</transition>

<transition>
<source ref="front_AUX_noOvertaking_entry_front"/>
<target ref="noOvertaking_ACTIVE_IN_front_front"/>
<label kind="select"></label>

<label kind="synchronisation">enter_noOvertaking_in_front_via_entry[portOrRoleInstanceID]!</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="front_AUX_noOvertaking_entry2_front"/>
<target ref="noOvertaking_ACTIVE_IN_front_front"/>
<label kind="select"></label>

<label kind="synchronisation">enter_noOvertaking_in_front_via_entry2[portOrRoleInstanceID]!</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="noOvertaking_ACTIVE_IN_front_front"/>
<target ref="exit_front"/>
<label kind="select"></label>
<label kind="guard">trigger[portOrRoleInstanceID] == 1</label>

<label kind="assignment"></label>
</transition>

</template>

<template>
    <name>front_noOvertaking</name>
	
		<parameter>

const front_RANGE  portOrRoleInstanceID  
		</parameter>
	
	<declaration>
		
	</declaration>	
	
<location id="front_noOvertaking_IDLE_front_noOvertaking" x="" y="" color="Default">
	<name>front_noOvertaking_IDLE</name>



</location>

<location id="init_ACTIVE_IN_front_noOvertaking_front_noOvertaking" x="" y="" color="Default">
	<name>init_ACTIVE_IN_front_noOvertaking</name>



</location>

<location id="received_ACTIVE_IN_front_noOvertaking_front_noOvertaking" x="" y="" color="Default">
	<name>received_ACTIVE_IN_front_noOvertaking</name>
<label kind="invariant">evaluationTime[portOrRoleInstanceID] &lt;= 3</label>


</location>

	<init ref="init_ACTIVE_IN_front_noOvertaking_front_noOvertaking"/>
	
<transition>
<source ref="received_ACTIVE_IN_front_noOvertaking_front_noOvertaking"/>
<target ref="front_noOvertaking_IDLE_front_noOvertaking"/>
<label kind="select"></label>

<label kind="synchronisation">exit_noOvertaking[portOrRoleInstanceID]?</label>
<label kind="assignment">trigger[portOrRoleInstanceID] -= 1</label>
</transition>

<transition>
<source ref="front_noOvertaking_IDLE_front_noOvertaking"/>
<target ref="init_ACTIVE_IN_front_noOvertaking_front_noOvertaking"/>
<label kind="select"></label>

<label kind="synchronisation">enter_noOvertaking_in_front_via_entry[portOrRoleInstanceID]?</label>
<label kind="assignment">evaluationTime[portOrRoleInstanceID] = 0</label>
</transition>

<transition>
<source ref="front_noOvertaking_IDLE_front_noOvertaking"/>
<target ref="received_ACTIVE_IN_front_noOvertaking_front_noOvertaking"/>
<label kind="select"></label>

<label kind="synchronisation">enter_noOvertaking_in_front_via_entry2[portOrRoleInstanceID]?</label>
<label kind="assignment">evaluationTime[portOrRoleInstanceID] = 0, 
trigger[portOrRoleInstanceID] += 1</label>
</transition>

<transition>
<source ref="received_ACTIVE_IN_front_noOvertaking_front_noOvertaking"/>
<target ref="init_ACTIVE_IN_front_noOvertaking_front_noOvertaking"/>
<label kind="select"></label>


<label kind="assignment">trigger[portOrRoleInstanceID] -= 1, 
send(portOrRoleInstanceID,decline)
</label>
</transition>

<transition>
<source ref="init_ACTIVE_IN_front_noOvertaking_front_noOvertaking"/>
<target ref="received_ACTIVE_IN_front_noOvertaking_front_noOvertaking"/>
<label kind="select"></label>
<label kind="guard">receive(portOrRoleInstanceID,request)
</label>
<label kind="synchronisation">hurry?</label>
<label kind="assignment">consume(portOrRoleInstanceID,request)
, 
evaluationTime[portOrRoleInstanceID] = 0, 
trigger[portOrRoleInstanceID] += 1</label>
</transition>

</template>

<template>
    <name>UrgencyProvider</name>
	
	<declaration>
		
	</declaration>	
	
<location id="idle_UrgencyProvider" x="" y="" color="Default">
	<name>idle</name>



</location>

	<init ref="idle_UrgencyProvider"/>
	
<transition>
<source ref="idle_UrgencyProvider"/>
<target ref="idle_UrgencyProvider"/>
<label kind="select"></label>

<label kind="synchronisation">hurry!</label>
<label kind="assignment"></label>
</transition>

</template>

		<system>
			

rear_0 = rear(0);

rear_noOvertaking_0 = rear_noOvertaking(0);

front_1 = front(1);

front_noOvertaking_1 = front_noOvertaking(1);

Connector_0_1 = Connector(0, 1, 0, 0, false, 5);

Connector_1_0 = Connector(1, 0, 0, 0, false, 5);


system Connector_0_1,Connector_1_0,front_1,front_noOvertaking_1,rear_0,rear_noOvertaking_0,UrgencyProvider;


		</system>
	</nta>
	