/*
 * generated by Fujaba - CodeGen2
 */
package org.muml.udbm.clockconstraint;

import org.muml.udbm.ClockConstraint;


public abstract class ComparativeClockConstraint extends ClockConstraint{

	/**
	 * @param value
	 * @param relationalOperator
	 */
	public ComparativeClockConstraint(int value,
			RelationalOperator relationalOperator) {
		this.value = value;
		setRelationalOperator(relationalOperator);
	}


   /**
    * <pre>
    *           0..n     has     0..1
    * ComparativeClockConstraint ------------------------> RelationalOperator
    *           comparativeClockConstraint               relationalOperator
    * </pre>
    */
   private RelationalOperator relationalOperator;

   protected boolean setRelationalOperator (RelationalOperator value)
   {
      boolean changed = false;

      if (this.relationalOperator != value)
      {
      
         RelationalOperator oldValue = this.relationalOperator;
         this.relationalOperator = value;
         changed = true;
      
      }
      return changed;
   }


   public RelationalOperator getRelationalOperator ()
   {
      return this.relationalOperator;
   }


   private int value = 0;


   public int getValue ()
   {
      return this.value;
   }
   
   public void setValue (int value)
   {
      this.value = value;
   }

   protected void removeYou()
   {
      this.setRelationalOperator (null);
      super.removeYou ();
   }
   
   public Object clone(){
	   return super.clone();
   }
   
}

