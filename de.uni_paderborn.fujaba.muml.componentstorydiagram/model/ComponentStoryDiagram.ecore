<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="componentstorydiagram" nsURI="http://www.fujaba.de/muml/componentstorydiagram/0.3.1"
    nsPrefix="componentstorydiagram">
  <eSubpackages name="controlflow" nsURI="http://www.fujaba.de/muml/componentstorydiagram/controlflow/0.3.1"
      nsPrefix="controlflow">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="ComponentStoryRule" eSuperTypes="../../de.uni_paderborn.fujaba.muml.reconfiguration/model/MumlReconfiguration.ecore#//ReconfigurationRule">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="This class represents a component story rule which is used to specifiy reconfiguration of a MechatronicUML component. The actual reconfiguration operation is encapsulated in the contained Activity in order to reuse the existing meta-model for story diagrams. The ComponentStoryRule contains an activity rather than inheriting from an activity to distinguish between the parameter sets."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="activity" lowerBound="1"
          eType="ecore:EClass ../../org.storydriven.storydiagrams/model/storydiagrams.ecore#//activities/Activity"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ComponentStoryNode" eSuperTypes="../../org.storydriven.storydiagrams/model/storydiagrams.ecore#//activities/ActivityNode">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A component story nodes contains a component story pattern. In a component story rule, only component story pattern but no normal story pattern may be used."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="componentStoryPattern"
          lowerBound="1" eType="#//componentstorypattern/ComponentStoryPattern" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="forEach" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
          defaultValueLiteral="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ControllerExchangeNode" eSuperTypes="../../org.storydriven.storydiagrams/model/storydiagrams.ecore#//activities/ActivityNode">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Controller Exchange Activity Nodes are used to exchange controllers modeled by continuous components. The controller exchange node either applies a fading function or a flat switching to the out-ports of the continuous component. "/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
        <details key="HasOnlyOneCreateAndOneDestroyPartVariable" value="let partVariables : OrderedSet(componentstorypattern::PartVariable) = self.componentStoryPattern.oclAsType(componentstorypattern::ComponentStoryPattern).thisVariable.oclAsType(componentstorypattern::ComponentVariable).partVariables->asOrderedSet() in&#xD;&#xA;partVariables->size() = 2 and&#xD;&#xA;if partVariables->first().oclAsType(componentstorypattern::PartVariable).bindingOperator = storydiagrams::patterns::BindingOperator::CREATE then partVariables->last().oclAsType(componentstorypattern::PartVariable).bindingOperator = storydiagrams::patterns::BindingOperator::DESTROY else&#xD;&#xA;if partVariables->first().oclAsType(componentstorypattern::PartVariable).bindingOperator = storydiagrams::patterns::BindingOperator::DESTROY then partVariables->last().oclAsType(componentstorypattern::PartVariable).bindingOperator = storydiagrams::patterns::BindingOperator::CREATE else&#xD;&#xA;false endif endif&#xD;&#xA;"/>
        <details key="CorrectNumberOfFadingFunctions" value="if self.controllerExchangeStrategy &lt;> ControllerExchangeStrategy::FADING_FUNCTION then&#xD;&#xA;self.fadingFunctions->size()=0&#xD;&#xA;else&#xD;&#xA;&#x9;if self.componentStoryPattern.oclAsType(componentstorypattern::ComponentStoryPattern).thisVariable.oclAsType(componentstorypattern::ComponentVariable).type.oclIsKindOf(muml::component::StructuredComponent) then&#xD;&#xA;&#x9;&#x9;--self.componentStoryPattern.oclAsType(componentstorypattern::ComponentStoryPattern).thisVariable.oclAsType(componentstorypattern::ComponentVariable).type.oclAsType(muml::component::StructuredComponent).ports->select(i : muml::component::Port | i.oclIsKindOf(muml::component::ContinuousPort))->select(i : muml::component::ContinuousPort | i.outPort = true)->size() = self.fadingFunctions->size()&#xD;&#xA;&#x9;&#x9;self.fadingFunctions->size()>0&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;endif"/>
        <details key="NoDeadlineIfStrategyIsATOMIC_SWITCHING" value="if self.controllerExchangeStrategy = ControllerExchangeStrategy::ATOMIC_SWITCHING then&#xD;&#xA;self.deadline.oclIsUndefined()&#xD;&#xA;else&#xD;&#xA;not self.deadline.oclIsUndefined()&#xD;&#xA;endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
        <details key="constraints" value="HasOnlyOneCreateAndOneDestroyPartVariable CorrectNumberOfFadingFunctions NoDeadlineIfStrategyIsATOMIC_SWITCHING"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="deadline" eType="ecore:EClass ../../de.uni_paderborn.fujaba.muml/model/muml.ecore#//realtimestatechart/RelativeDeadline"
          containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The relative deadline denotes the minimum and maximum duration of the controller exchange. In case of a fading function, the deadline denotes the time interval in which both controllers are active and during which their out-ports are faded. In case of a flat switching, the deadline denotes the time interval in which the spline computing by the flat switching is used as a value of the out-port."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="componentStoryPattern"
          lowerBound="1" eType="#//componentstorypattern/ComponentStoryPattern" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="controllerExchangeStrategy"
          lowerBound="1" eType="#//controlflow/ControllerExchangeStrategy" defaultValueLiteral="ControllerExchangeStrategy.ATOMIC_SWITCHING"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="fadingFunctions" upperBound="-1"
          eType="#//componentstorypattern/FadingFunction" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A fading function defines how the value of one out-port of a continuous component is faded to the value of another out-port of a continuous component. For each out-port of a continuous component to be deleted, one fading function is required."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="ControllerExchangeStrategy">
      <eLiterals name="ATOMIC_SWITCHING"/>
      <eLiterals name="FADING_FUNCTION" value="1"/>
      <eLiterals name="FLAT_SWITCHING" value="2"/>
    </eClassifiers>
  </eSubpackages>
  <eSubpackages name="componentstorypattern" nsURI="http://www.fujaba.de/muml/componentstorydiagram/componentstorypattern/0.3.3"
      nsPrefix="componentstorypattern">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="ComponentStoryPattern" eSuperTypes="../../org.storydriven.core/model/core.ecore#//NamedElement ../../org.storydriven.core/model/core.ecore#//CommentableElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="thisVariable" lowerBound="1"
          eType="#//componentstorypattern/ComponentVariable" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ComponentStoryPatternVariable" eSuperTypes="../../org.storydriven.core/model/core.ecore#//NamedElement ../../org.storydriven.core/model/core.ecore#//CommentableElement">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="bindingSemantics" eType="ecore:EEnum ../../org.storydriven.storydiagrams/model/storydiagrams.ecore#//patterns/BindingSemantics"
          defaultValueLiteral="BindingSemantics.MANDATORY"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="bindingOperator" eType="ecore:EEnum ../../org.storydriven.storydiagrams/model/storydiagrams.ecore#//patterns/BindingOperator"
          defaultValueLiteral="BindingOperator.CHECK_ONLY"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="bindingState" eType="ecore:EEnum ../../org.storydriven.storydiagrams/model/storydiagrams.ecore#//patterns/BindingState"
          defaultValueLiteral="BindingState.UNBOUND"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ComponentVariable" eSuperTypes="#//componentstorypattern/ComponentStoryPatternVariable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
        <details key="AtLeastOnePartVariableOrPortVariable" value="self.portVariables->size() > 0 or self.partVariables->size() > 0"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
        <details key="constraints" value="AtLeastOnePartVariableOrPortVariable"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="portVariables" upperBound="-1"
          eType="#//componentstorypattern/PortVariable" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="partVariables" upperBound="-1"
          eType="#//componentstorypattern/PartVariable" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="connectorVariables" upperBound="-1"
          eType="#//componentstorypattern/ConnectorVariable" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
          eType="ecore:EClass ../../de.uni_paderborn.fujaba.muml.reconfiguration/model/MumlReconfiguration.ecore#//ReconfigurableComponent"
          volatile="true" transient="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="derivation" value="self.eContainer().eContainer().eContainer().eContainer().oclAsType(reconfiguration::ReconfigurationRule).reconfiguredComponent"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PortVariable" abstract="true" eSuperTypes="#//componentstorypattern/ComponentStoryPatternVariable ../../de.uni_paderborn.fujaba.muml/model/muml.ecore#//connector/ConnectorEndpoint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
        <details key="SameBindingOperatorAsParent" value="if self.eContainer().oclAsType(ComponentStoryPatternVariable).bindingOperator&lt;>storydiagrams::patterns::BindingOperator::CHECK_ONLY then&#xD;&#xA;&#x9;self.bindingOperator = self.eContainer().oclAsType(ComponentStoryPatternVariable).bindingOperator&#xD;&#xA;else&#xD;&#xA;&#x9;true&#xD;&#xA;endif"/>
        <details key="SameBindingSemanticsAsParent" value="if self.eContainer().oclAsType(ComponentStoryPatternVariable).bindingSemantics=storydiagrams::patterns::BindingSemantics::OPTIONAL then&#xD;&#xA;&#x9;self.bindingSemantics = self.eContainer().oclAsType(ComponentStoryPatternVariable).bindingSemantics&#xD;&#xA;else&#xD;&#xA;&#x9;true&#xD;&#xA;endif"/>
        <details key="ValidTypeOfPortVariable" value="if self.eContainer().oclIsKindOf(ComponentVariable) then&#xD;&#xA;&#x9;if not self.eContainer().oclAsType(ComponentVariable).type.oclIsUndefined() then&#xD;&#xA;&#x9;&#x9;self.eContainer().oclAsType(ComponentVariable).type.oclAsType(muml::component::Component).ports->includes(self.type.oclAsType(muml::component::Port))&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;else&#xD;&#xA;&#x9;if self.eContainer().oclIsKindOf(PartVariable) then&#xD;&#xA;&#x9;&#x9;if not self.eContainer().oclAsType(PartVariable).type.oclIsUndefined() then&#xD;&#xA;&#x9;&#x9;&#x9;self.eContainer().oclAsType(PartVariable).type.oclAsType(muml::component::ComponentPart).componentType.oclAsType(muml::component::Component).ports->includes(self.type.oclAsType(muml::component::Port))&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;false&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
        <details key="constraints" value="SameBindingOperatorAsParent SameBindingSemanticsAsParent ValidTypeOfPortVariable"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
          eType="ecore:EClass ../../de.uni_paderborn.fujaba.muml/model/muml.ecore#//component/Port"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="connectorVariables" upperBound="-1"
          eType="#//componentstorypattern/ConnectorVariable" changeable="false" volatile="true"
          transient="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="derivation" value="self.connectors->select(c | c.oclIsKindOf(ConnectorVariable)).oclAsType(ConnectorVariable)->asOrderedSet()"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PartVariable" eSuperTypes="#//componentstorypattern/ComponentStoryPatternVariable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
        <details key="SameBindingOperatorAsComponentVariable" value="if self.eContainer().oclAsType(ComponentStoryPatternVariable).bindingOperator&lt;>storydiagrams::patterns::BindingOperator::CHECK_ONLY then&#xD;&#xA;&#x9;self.bindingOperator = self.eContainer().oclAsType(ComponentStoryPatternVariable).bindingOperator&#xD;&#xA;else&#xD;&#xA;&#x9;true&#xD;&#xA;endif"/>
        <details key="ValidTypeOfPartVariable" value="if not self.eContainer().oclAsType(ComponentVariable).type.oclIsUndefined() then&#xD;&#xA;&#x9;if self.eContainer().oclAsType(ComponentVariable).type.oclIsKindOf(muml::component::StructuredComponent) then&#xD;&#xA;&#x9;&#x9;self.eContainer().oclAsType(ComponentVariable).type.oclAsType(muml::component::StructuredComponent).embeddedParts->includes(self.type.oclAsType(muml::component::ComponentPart))&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;else&#xD;&#xA;&#x9;false&#xD;&#xA;endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
        <details key="constraints" value="SameBindingOperatorAsComponentVariable ValidTypeOfPartVariable"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="portVariables" upperBound="-1"
          eType="#//componentstorypattern/PortVariable" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
          eType="ecore:EClass ../../de.uni_paderborn.fujaba.muml/model/muml.ecore#//component/ComponentPart"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="call" eType="#//componentstorypattern/Call"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ConnectorVariable" abstract="true"
        eSuperTypes="#//componentstorypattern/ComponentStoryPatternVariable ../../de.uni_paderborn.fujaba.muml/model/muml.ecore#//connector/Connector">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
        <details key="MustNotConnectCreateAndDestroyPorts" value="if self.portVariables->asOrderedSet()->first().oclAsType(ComponentStoryPatternVariable).bindingOperator=storydiagrams::patterns::BindingOperator::CREATE then&#xD;&#xA;&#x9;self.portVariables->asOrderedSet()->last().oclAsType(ComponentStoryPatternVariable).bindingOperator&lt;>storydiagrams::patterns::BindingOperator::DESTROY&#xD;&#xA;else&#xD;&#xA;&#x9;if self.portVariables->asOrderedSet()->first().oclAsType(ComponentStoryPatternVariable).bindingOperator=storydiagrams::patterns::BindingOperator::DESTROY then&#xD;&#xA;&#x9;&#x9;self.portVariables->asOrderedSet()->last().oclAsType(ComponentStoryPatternVariable).bindingOperator&lt;>storydiagrams::patterns::BindingOperator::CREATE&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;endif"/>
        <details key="SameBindingOperatorAsPortVariable" value="if self.portVariables->asOrderedSet()->first().oclAsType(ComponentStoryPatternVariable).bindingOperator&lt;>storydiagrams::patterns::BindingOperator::CHECK_ONLY then&#xD;&#xA;&#x9;self.oclAsType(ComponentStoryPatternVariable).bindingOperator = self.portVariables->asOrderedSet()->first().oclAsType(ComponentStoryPatternVariable).bindingOperator&#xD;&#xA;else&#xD;&#xA;&#x9;if self.portVariables->asOrderedSet()->last().oclAsType(ComponentStoryPatternVariable).bindingOperator&lt;>storydiagrams::patterns::BindingOperator::CHECK_ONLY then&#xD;&#xA;&#x9;&#x9;self.oclAsType(ComponentStoryPatternVariable).bindingOperator = self.portVariables->asOrderedSet()->last().oclAsType(ComponentStoryPatternVariable).bindingOperator&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;endif"/>
        <details key="ExistingConnectorBetweenPortVariableTypes" value="if self.oclIsKindOf(AssemblyVariable) then&#xD;&#xA;&#x9;if not self.oclAsType(AssemblyVariable).type.oclIsUndefined() then&#xD;&#xA;&#x9;&#x9;(self.oclAsType(AssemblyVariable).type.oclAsType(muml::component::PortConnector).ports->asOrderedSet()->first() = self.portVariables->asOrderedSet()->first().oclAsType(PortVariable).type and&#xD;&#xA;&#x9;&#x9;self.oclAsType(AssemblyVariable).type.oclAsType(muml::component::PortConnector).ports->asOrderedSet()->last()= self.portVariables->asOrderedSet()->last().oclAsType(PortVariable).type) or&#xD;&#xA;&#x9;&#x9;(self.oclAsType(AssemblyVariable).type.oclAsType(muml::component::PortConnector).ports->asOrderedSet()->last() = self.portVariables->asOrderedSet()->first().oclAsType(PortVariable).type and&#xD;&#xA;&#x9;&#x9;self.oclAsType(AssemblyVariable).type.oclAsType(muml::component::PortConnector).ports->asOrderedSet()->first() = self.portVariables->asOrderedSet()->last().oclAsType(PortVariable).type)&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;else&#xD;&#xA;&#x9;if self.oclIsKindOf(DelegationVariable) then&#xD;&#xA;&#x9;&#x9;if not self.oclAsType(DelegationVariable).type.oclIsUndefined() then&#xD;&#xA;&#x9;&#x9;&#x9;(self.oclAsType(DelegationVariable).type.oclAsType(muml::component::PortConnector).ports->asOrderedSet()->first() = self.portVariables->asOrderedSet()->first().oclAsType(PortVariable).type and&#xD;&#xA;&#x9;&#x9;&#x9;self.oclAsType(DelegationVariable).type.oclAsType(muml::component::PortConnector).ports->asOrderedSet()->last() = self.portVariables->asOrderedSet()->last().oclAsType(PortVariable).type) or&#xD;&#xA;&#x9;&#x9;&#x9;(self.oclAsType(DelegationVariable).type.oclAsType(muml::component::PortConnector).ports->asOrderedSet()->last() = self.portVariables->asOrderedSet()->first().oclAsType(PortVariable).type and&#xD;&#xA;&#x9;&#x9;&#x9;self.oclAsType(DelegationVariable).type.oclAsType(muml::component::PortConnector).ports->asOrderedSet()->first() = self.portVariables->asOrderedSet()->last().oclAsType(PortVariable).type)&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;false&#xD;&#xA;&#x9;&#x9;endif&#x9;&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
        <details key="constraints" value="MustNotConnectCreateAndDestroyPorts SameBindingOperatorAsPortVariable ExistingConnectorBetweenPortVariableTypes"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="portVariables" upperBound="-1"
          eType="#//componentstorypattern/PortVariable" changeable="false" volatile="true"
          transient="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="derivation" value="self.connectorEndpoints->select(i | i.oclIsKindOf(PortVariable)).oclAsType(PortVariable)->asOrderedSet()"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="AssemblyVariable" eSuperTypes="#//componentstorypattern/ConnectorVariable">
      <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
          eType="ecore:EClass ../../de.uni_paderborn.fujaba.muml/model/muml.ecore#//component/AssemblyConnector"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="DelegationVariable" eSuperTypes="#//componentstorypattern/ConnectorVariable">
      <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
          eType="ecore:EClass ../../de.uni_paderborn.fujaba.muml/model/muml.ecore#//component/DelegationConnector"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Call" eSuperTypes="../../org.storydriven.core/model/core.ecore#//ExtendableElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="callee" lowerBound="1"
          eType="#//controlflow/ComponentStoryRule"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parameterBinding" upperBound="-1"
          eType="ecore:EClass ../../de.uni_paderborn.fujaba.muml/model/muml.ecore#//behavior/ParameterBinding"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="FadingFunction" eSuperTypes="../../org.storydriven.core/model/core.ecore#//NamedElement ../../org.storydriven.core/model/core.ecore#//CommentableElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="fromPort" lowerBound="1"
          eType="#//componentstorypattern/PortVariable"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="toPort" lowerBound="1"
          eType="#//componentstorypattern/PortVariable"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SinglePortVariable" eSuperTypes="#//componentstorypattern/PortVariable">
      <eStructuralFeatures xsi:type="ecore:EReference" name="multiPortVariable" eType="#//componentstorypattern/MultiPortVariable"
          eOpposite="#//componentstorypattern/MultiPortVariable/subPortVariables"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="MultiPortVariable" eSuperTypes="#//componentstorypattern/PortVariable">
      <eStructuralFeatures xsi:type="ecore:EReference" name="subPortVariables" upperBound="-1"
          eType="#//componentstorypattern/SinglePortVariable" eOpposite="#//componentstorypattern/SinglePortVariable/multiPortVariable">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="These are all sub-portVariables of the multi-portVariable. The sub-portVariables are represented by SinglePortVariables. \todosd{Why is this not a containment reference?}&quot;"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="gmfSubPortVariables"
          upperBound="-1" eType="#//componentstorypattern/SinglePortVariable" derived="true"
          containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This reference just derives the values of &quot;subPortVariables&quot; and specifies a containment. This containment reference is needed by the GMF tooling."/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="derivation" value="self.subPortVariables"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
  </eSubpackages>
</ecore:EPackage>
