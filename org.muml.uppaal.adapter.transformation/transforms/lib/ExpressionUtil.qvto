library ExpressionUtil;

modeltype actionLanguage uses 'http://www.muml.org/pim/actionlanguage/1.0.0';
modeltype common uses core::expressions::common('http://www.muml.org/core/1.0.0');
modeltype expressions uses core::expressions('http://www.muml.org/core/1.0.0');

helper OrderedSet(Expression) :: constructConjunction() : Expression {
	
	-- filter invalid expressions as a workaround for https://bugs.eclipse.org/bugs/show_bug.cgi?id=415310 		
	var filteredExpressions : OrderedSet(Expression) = self->reject(e | e.oclIsUndefined());
	
	if filteredExpressions->isEmpty() then return null endif;
			
	var conjunction : Expression = filteredExpressions->first();
	
	Set{2..filteredExpressions->size()}->forEach(i) {
		
		conjunction := object LogicalExpression {
			leftExpression := conjunction;
			operator := LogicOperator::AND;
			rightExpression := filteredExpressions->at(i);
		}
		
	};
			
	return conjunction
	
}