<?xml version="1.0" encoding="ASCII"?>
<uppaal:NTA xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:declarations="http://www.muml.org/uppaal/declarations/1.0.0" xmlns:expressions="http://www.muml.org/uppaal/expressions/1.0.0" xmlns:statements="http://www.muml.org/uppaal/statements/1.0.0" xmlns:system="http://www.muml.org/uppaal/declarations/system/1.0.0" xmlns:types="http://www.muml.org/uppaal/types/1.0.0" xmlns:uppaal="http://www.muml.org/uppaal/1.0.0" name="Overtaking">
  <globalDeclarations>
    <declaration xsi:type="declarations:ChannelVariableDeclaration" urgent="true">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@chan"/>
      <variable name="hurry"/>
    </declaration>
    <declaration xsi:type="declarations:TypeDeclaration">
      <type name="MUMLInt"/>
      <typeDefinition xsi:type="types:RangeTypeSpecification">
        <bounds>
          <lowerBound xsi:type="expressions:LiteralExpression" text="-2147483648"/>
          <upperBound xsi:type="expressions:LiteralExpression" text="2147483647"/>
        </bounds>
      </typeDefinition>
    </declaration>
    <declaration xsi:type="declarations:TypeDeclaration">
      <type name="MUMLShort"/>
      <typeDefinition xsi:type="types:RangeTypeSpecification">
        <bounds>
          <lowerBound xsi:type="expressions:LiteralExpression" text="-32768"/>
          <upperBound xsi:type="expressions:LiteralExpression" text="32767"/>
        </bounds>
      </typeDefinition>
    </declaration>
    <declaration xsi:type="declarations:TypeDeclaration">
      <type name="MUMLByte"/>
      <typeDefinition xsi:type="types:RangeTypeSpecification">
        <bounds>
          <lowerBound xsi:type="expressions:LiteralExpression" text="-128"/>
          <upperBound xsi:type="expressions:LiteralExpression" text="127"/>
        </bounds>
      </typeDefinition>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
      <variable name="NUM_OF_MESSAGE_KINDS">
        <initializer xsi:type="declarations:ExpressionInitializer">
          <expression xsi:type="expressions:LiteralExpression" text="5"/>
        </initializer>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
      <variable name="NUM_MAX_MESSAGES_IN_TRANSIT">
        <initializer xsi:type="declarations:ExpressionInitializer">
          <expression xsi:type="expressions:LiteralExpression" text="140"/>
        </initializer>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
      <variable name="MAX_BUFFER_SIZE">
        <initializer xsi:type="declarations:ExpressionInitializer">
          <expression xsi:type="expressions:LiteralExpression" text="5"/>
        </initializer>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
      <variable name="MAX_NUM_OF_MESSAGE_BUFFERS_PER_ROLE">
        <initializer xsi:type="declarations:ExpressionInitializer">
          <expression xsi:type="expressions:LiteralExpression" text="1"/>
        </initializer>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:TypeDeclaration">
      <type name="MessageId"/>
      <typeDefinition xsi:type="types:RangeTypeSpecification">
        <bounds>
          <lowerBound xsi:type="expressions:LiteralExpression" text="0"/>
          <upperBound xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
        </bounds>
      </typeDefinition>
    </declaration>
    <declaration xsi:type="declarations:TypeDeclaration">
      <type name="MessageKind"/>
      <typeDefinition xsi:type="types:RangeTypeSpecification">
        <bounds>
          <lowerBound xsi:type="expressions:LiteralExpression" text="0"/>
          <upperBound xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.4/@variable.0"/>
        </bounds>
      </typeDefinition>
    </declaration>
    <declaration xsi:type="declarations:TypeDeclaration">
      <type name="Message"/>
      <typeDefinition xsi:type="types:StructTypeSpecification">
        <declaration>
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
          <variable name="mId"/>
        </declaration>
        <declaration>
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.9/@type.0"/>
          <variable name="mType"/>
        </declaration>
        <declaration>
          <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
          <variable name="mArgsPosition"/>
        </declaration>
      </typeDefinition>
    </declaration>
    <declaration xsi:type="declarations:TypeDeclaration">
      <type name="Buffer"/>
      <typeDefinition xsi:type="types:StructTypeSpecification">
        <declaration>
          <typeDefinition xsi:type="types:RangeTypeSpecification">
            <bounds>
              <lowerBound xsi:type="expressions:LiteralExpression" text="0"/>
              <upperBound xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.6/@variable.0"/>
            </bounds>
          </typeDefinition>
          <variable name="tail"/>
        </declaration>
        <declaration>
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.10/@type.0"/>
          <variable name="messages">
            <index xsi:type="declarations:ValueIndex">
              <sizeExpression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.6/@variable.0"/>
            </index>
          </variable>
        </declaration>
      </typeDefinition>
    </declaration>
    <declaration xsi:type="declarations:TypeDeclaration">
      <type name="requestParameters"/>
      <typeDefinition xsi:type="types:StructTypeSpecification">
        <declaration>
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
          <variable name="mId"/>
        </declaration>
      </typeDefinition>
    </declaration>
    <declaration xsi:type="declarations:TypeDeclaration">
      <type name="finishParameters"/>
      <typeDefinition xsi:type="types:StructTypeSpecification">
        <declaration>
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
          <variable name="mId"/>
        </declaration>
      </typeDefinition>
    </declaration>
    <declaration xsi:type="declarations:TypeDeclaration">
      <type name="laneChangedParameters"/>
      <typeDefinition xsi:type="types:StructTypeSpecification">
        <declaration>
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
          <variable name="mId"/>
        </declaration>
      </typeDefinition>
    </declaration>
    <declaration xsi:type="declarations:TypeDeclaration">
      <type name="declineParameters"/>
      <typeDefinition xsi:type="types:StructTypeSpecification">
        <declaration>
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
          <variable name="mId"/>
        </declaration>
        <declaration>
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.1/@type.0"/>
          <variable name="frontVelocity"/>
        </declaration>
      </typeDefinition>
    </declaration>
    <declaration xsi:type="declarations:TypeDeclaration">
      <type name="acceptParameters"/>
      <typeDefinition xsi:type="types:StructTypeSpecification">
        <declaration>
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
          <variable name="mId"/>
        </declaration>
      </typeDefinition>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
      <variable name="NUM_OF_INSTANCES">
        <initializer xsi:type="declarations:ExpressionInitializer">
          <expression xsi:type="expressions:LiteralExpression" text="2"/>
        </initializer>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:TypeDeclaration">
      <type name="instance"/>
      <typeDefinition xsi:type="types:RangeTypeSpecification">
        <bounds>
          <lowerBound xsi:type="expressions:LiteralExpression" text="0"/>
          <upperBound xsi:type="expressions:ArithmeticExpression" operator="-">
            <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.17/@variable.0"/>
            <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
          </upperBound>
        </bounds>
      </typeDefinition>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
      <typeDefinition xsi:type="types:RangeTypeSpecification">
        <bounds>
          <lowerBound xsi:type="expressions:LiteralExpression" text="-1"/>
          <upperBound xsi:type="expressions:ArithmeticExpression" operator="-">
            <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.7/@variable.0"/>
            <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
          </upperBound>
        </bounds>
      </typeDefinition>
      <variable name="buffer_assignment">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.18/@type.0"/>
        </index>
        <index xsi:type="declarations:ValueIndex">
          <sizeExpression xsi:type="expressions:ArithmeticExpression">
            <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.4/@variable.0"/>
            <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
          </sizeExpression>
        </index>
        <initializer xsi:type="declarations:ArrayInitializer">
          <initializer xsi:type="declarations:ArrayInitializer">
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="-1"/>
            </initializer>
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="-1"/>
            </initializer>
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="-1"/>
            </initializer>
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="-1"/>
            </initializer>
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="0"/>
            </initializer>
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="0"/>
            </initializer>
          </initializer>
          <initializer xsi:type="declarations:ArrayInitializer">
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="-1"/>
            </initializer>
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="0"/>
            </initializer>
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="0"/>
            </initializer>
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="0"/>
            </initializer>
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="-1"/>
            </initializer>
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="-1"/>
            </initializer>
          </initializer>
        </initializer>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
      <typeDefinition xsi:type="types:RangeTypeSpecification">
        <bounds>
          <lowerBound xsi:type="expressions:LiteralExpression" text="-1"/>
          <upperBound xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.6/@variable.0"/>
        </bounds>
      </typeDefinition>
      <variable name="bufferSize">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.18/@type.0"/>
        </index>
        <index xsi:type="declarations:ValueIndex">
          <sizeExpression xsi:type="expressions:ArithmeticExpression">
            <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.4/@variable.0"/>
            <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
          </sizeExpression>
        </index>
        <initializer xsi:type="declarations:ArrayInitializer">
          <initializer xsi:type="declarations:ArrayInitializer">
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="-1"/>
            </initializer>
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="-1"/>
            </initializer>
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="-1"/>
            </initializer>
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="-1"/>
            </initializer>
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="5"/>
            </initializer>
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="5"/>
            </initializer>
          </initializer>
          <initializer xsi:type="declarations:ArrayInitializer">
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="-1"/>
            </initializer>
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="5"/>
            </initializer>
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="5"/>
            </initializer>
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="5"/>
            </initializer>
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="-1"/>
            </initializer>
            <initializer xsi:type="declarations:ExpressionInitializer">
              <expression xsi:type="expressions:LiteralExpression" text="-1"/>
            </initializer>
          </initializer>
        </initializer>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@bool"/>
      <variable name="overflow"/>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.11/@type.0"/>
      <variable name="buffers">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.18/@type.0"/>
        </index>
        <index xsi:type="declarations:ValueIndex">
          <sizeExpression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.7/@variable.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.11/@type.0"/>
      <variable name="connectors">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.18/@type.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
      <variable name="earliest">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.18/@type.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
      <variable name="latest">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.18/@type.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:ClockVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@clock"/>
      <variable name="transmissionTimes">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.18/@type.0"/>
        </index>
        <index xsi:type="declarations:ValueIndex">
          <sizeExpression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.6/@variable.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.9/@type.0"/>
      <variable name="nullMessageKind">
        <initializer xsi:type="declarations:ExpressionInitializer">
          <expression xsi:type="expressions:LiteralExpression" text="0"/>
        </initializer>
      </variable>
      <variable name="request">
        <initializer xsi:type="declarations:ExpressionInitializer">
          <expression xsi:type="expressions:LiteralExpression" text="1"/>
        </initializer>
      </variable>
      <variable name="finish">
        <initializer xsi:type="declarations:ExpressionInitializer">
          <expression xsi:type="expressions:LiteralExpression" text="2"/>
        </initializer>
      </variable>
      <variable name="laneChanged">
        <initializer xsi:type="declarations:ExpressionInitializer">
          <expression xsi:type="expressions:LiteralExpression" text="3"/>
        </initializer>
      </variable>
      <variable name="decline">
        <initializer xsi:type="declarations:ExpressionInitializer">
          <expression xsi:type="expressions:LiteralExpression" text="4"/>
        </initializer>
      </variable>
      <variable name="accept">
        <initializer xsi:type="declarations:ExpressionInitializer">
          <expression xsi:type="expressions:LiteralExpression" text="5"/>
        </initializer>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
      <variable name="nullMessageId">
        <initializer xsi:type="declarations:ExpressionInitializer">
          <expression xsi:type="expressions:LiteralExpression" text="0"/>
        </initializer>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.10/@type.0"/>
      <variable name="nullMessage">
        <initializer xsi:type="declarations:ArrayInitializer">
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.28/@variable.0"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.0"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="0"/>
          </initializer>
        </initializer>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
      <variable name="freeIds">
        <index xsi:type="declarations:ValueIndex">
          <sizeExpression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
        </index>
        <initializer xsi:type="declarations:ArrayInitializer">
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="1"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="2"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="3"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="4"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="5"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="6"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="7"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="8"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="9"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="10"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="11"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="12"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="13"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="14"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="15"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="17"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="16"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="19"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="18"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="21"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="20"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="23"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="22"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="25"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="24"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="27"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="26"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="29"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="28"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="31"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="30"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="34"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="35"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="32"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="33"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="38"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="39"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="36"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="37"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="42"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="43"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="40"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="41"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="46"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="47"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="44"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="45"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="51"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="50"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="49"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="48"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="55"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="54"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="53"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="52"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="59"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="58"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="57"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="56"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="63"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="62"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="61"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="60"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="68"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="69"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="70"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="71"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="64"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="65"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="66"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="67"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="76"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="77"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="78"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="79"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="72"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="73"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="74"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="75"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="85"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="84"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="87"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="86"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="81"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="80"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="83"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="82"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="93"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="92"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="95"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="94"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="89"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="88"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="91"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="90"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="102"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="103"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="100"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="101"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="98"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="99"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="96"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="97"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="110"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="111"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="108"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="109"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="106"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="107"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="104"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="105"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="119"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="118"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="117"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="116"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="115"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="114"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="113"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="112"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="127"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="126"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="125"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="124"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="123"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="122"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="121"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="120"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="137"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="136"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="139"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="138"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="140"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="129"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="128"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="131"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="130"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="133"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="132"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="135"/>
          </initializer>
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="134"/>
          </initializer>
        </initializer>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.12/@type.0"/>
      <variable name="requestNullMessage"/>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.13/@type.0"/>
      <variable name="finishNullMessage"/>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.14/@type.0"/>
      <variable name="laneChangedNullMessage"/>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.15/@type.0"/>
      <variable name="declineNullMessage"/>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.16/@type.0"/>
      <variable name="acceptNullMessage"/>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:RangeTypeSpecification">
        <bounds>
          <lowerBound xsi:type="expressions:LiteralExpression" text="0"/>
          <upperBound xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
        </bounds>
      </typeDefinition>
      <variable name="requestTail"/>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:RangeTypeSpecification">
        <bounds>
          <lowerBound xsi:type="expressions:LiteralExpression" text="0"/>
          <upperBound xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
        </bounds>
      </typeDefinition>
      <variable name="finishTail"/>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:RangeTypeSpecification">
        <bounds>
          <lowerBound xsi:type="expressions:LiteralExpression" text="0"/>
          <upperBound xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
        </bounds>
      </typeDefinition>
      <variable name="laneChangedTail"/>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:RangeTypeSpecification">
        <bounds>
          <lowerBound xsi:type="expressions:LiteralExpression" text="0"/>
          <upperBound xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
        </bounds>
      </typeDefinition>
      <variable name="declineTail"/>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:RangeTypeSpecification">
        <bounds>
          <lowerBound xsi:type="expressions:LiteralExpression" text="0"/>
          <upperBound xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
        </bounds>
      </typeDefinition>
      <variable name="acceptTail"/>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.12/@type.0"/>
      <variable name="requestMessageArguments">
        <index xsi:type="declarations:ValueIndex">
          <sizeExpression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.13/@type.0"/>
      <variable name="finishMessageArguments">
        <index xsi:type="declarations:ValueIndex">
          <sizeExpression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.14/@type.0"/>
      <variable name="laneChangedMessageArguments">
        <index xsi:type="declarations:ValueIndex">
          <sizeExpression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.15/@type.0"/>
      <variable name="declineMessageArguments">
        <index xsi:type="declarations:ValueIndex">
          <sizeExpression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.16/@type.0"/>
      <variable name="acceptMessageArguments">
        <index xsi:type="declarations:ValueIndex">
          <sizeExpression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="add">
        <returnType xsi:type="types:TypeReference" referredType="//@void"/>
        <block>
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.46/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.1/@variable.0">
                  <index xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.46/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.0/@variable.0"/>
                  </index>
                </identifier>
              </firstExpr>
              <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.46/@function/@parameter.1/@variableDeclaration/@variable.0"/>
            </expression>
          </statement>
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:IncrementDecrementExpression" position="POST">
              <expression xsi:type="expressions:ScopedIdentifierExpression">
                <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.46/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.0/@variable.0"/>
              </expression>
            </expression>
          </statement>
        </block>
        <parameter callType="CALL_BY_REFERENCE">
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.11/@type.0"/>
            <variable name="b"/>
          </variableDeclaration>
        </parameter>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.10/@type.0"/>
            <variable name="e"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="getNumberOfElementsInBuffer">
        <returnType xsi:type="types:TypeReference" referredType="//@int"/>
        <block>
          <statement xsi:type="statements:ReturnStatement">
            <returnExpression xsi:type="expressions:ScopedIdentifierExpression">
              <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.47/@function/@parameter.0/@variableDeclaration/@variable.0"/>
              <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.0/@variable.0"/>
            </returnExpression>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.11/@type.0"/>
            <variable name="b"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="check">
        <returnType xsi:type="types:TypeReference" referredType="//@bool"/>
        <block>
          <declarations>
            <declaration xsi:type="declarations:DataVariableDeclaration">
              <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.10/@type.0"/>
              <variable name="nextMessage">
                <initializer xsi:type="declarations:ExpressionInitializer">
                  <expression xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.48/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.1/@variable.0">
                      <index xsi:type="expressions:LiteralExpression" text="0"/>
                    </identifier>
                  </expression>
                </initializer>
              </variable>
            </declaration>
          </declarations>
          <statement xsi:type="statements:ReturnStatement">
            <returnExpression xsi:type="expressions:LogicalExpression">
              <firstExpr xsi:type="expressions:CompareExpression" operator="!=">
                <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.48/@function/@parameter.1/@variableDeclaration/@variable.0"/>
                <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.0"/>
              </firstExpr>
              <secondExpr xsi:type="expressions:CompareExpression">
                <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                  <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.48/@function/@block/@declarations/@declaration.0/@variable.0"/>
                  <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.1/@variable.0"/>
                </firstExpr>
                <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.48/@function/@parameter.1/@variableDeclaration/@variable.0"/>
              </secondExpr>
            </returnExpression>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.11/@type.0"/>
            <variable name="buffer"/>
          </variableDeclaration>
        </parameter>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.9/@type.0"/>
            <variable name="mKind"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="checkMessageInBuffer">
        <returnType xsi:type="types:TypeReference" referredType="//@bool"/>
        <block>
          <declarations>
            <declaration xsi:type="declarations:DataVariableDeclaration">
              <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
              <variable name="i"/>
            </declaration>
          </declarations>
          <statement xsi:type="statements:ForLoop">
            <initialization xsi:type="expressions:AssignmentExpression">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.49/@function/@block/@declarations/@declaration.0/@variable.0"/>
              <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
            </initialization>
            <condition xsi:type="expressions:CompareExpression" operator="&lt;">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.49/@function/@block/@declarations/@declaration.0/@variable.0"/>
              <secondExpr xsi:type="expressions:ArithmeticExpression" operator="-">
                <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.6/@variable.0"/>
                <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
              </secondExpr>
            </condition>
            <iteration xsi:type="expressions:IncrementDecrementExpression" position="POST">
              <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.49/@function/@block/@declarations/@declaration.0/@variable.0"/>
            </iteration>
            <statement xsi:type="statements:IfStatement">
              <ifExpression xsi:type="expressions:CompareExpression">
                <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                  <scope xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.49/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.1/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.49/@function/@block/@declarations/@declaration.0/@variable.0"/>
                    </identifier>
                  </scope>
                  <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.1/@variable.0"/>
                </firstExpr>
                <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.49/@function/@parameter.1/@variableDeclaration/@variable.0"/>
              </ifExpression>
              <thenStatement xsi:type="statements:ReturnStatement">
                <returnExpression xsi:type="expressions:LiteralExpression" text="true"/>
              </thenStatement>
            </statement>
          </statement>
          <statement xsi:type="statements:ReturnStatement">
            <returnExpression xsi:type="expressions:LiteralExpression" text="false"/>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.11/@type.0"/>
            <variable name="buffer"/>
          </variableDeclaration>
        </parameter>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.9/@type.0"/>
            <variable name="mKind"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="remove">
        <returnType xsi:type="types:TypeReference" referredType="//@void"/>
        <block>
          <statement xsi:type="statements:IfStatement">
            <ifExpression xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.48/@function">
              <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.50/@function/@parameter.0/@variableDeclaration/@variable.0"/>
              <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.50/@function/@parameter.1/@variableDeclaration/@variable.0"/>
            </ifExpression>
            <thenStatement xsi:type="statements:Block">
              <declarations>
                <declaration xsi:type="declarations:DataVariableDeclaration">
                  <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
                  <variable name="i"/>
                </declaration>
              </declarations>
              <statement xsi:type="statements:ForLoop">
                <initialization xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.50/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                  <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
                </initialization>
                <condition xsi:type="expressions:CompareExpression" operator="&lt;">
                  <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.50/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                  <secondExpr xsi:type="expressions:ArithmeticExpression" operator="-">
                    <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.6/@variable.0"/>
                    <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                  </secondExpr>
                </condition>
                <iteration xsi:type="expressions:IncrementDecrementExpression" position="POST">
                  <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.50/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                </iteration>
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                      <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.50/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                      <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.1/@variable.0">
                        <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.50/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                      </identifier>
                    </firstExpr>
                    <secondExpr xsi:type="expressions:ScopedIdentifierExpression">
                      <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.50/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                      <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.1/@variable.0">
                        <index xsi:type="expressions:ArithmeticExpression">
                          <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.50/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                          <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                        </index>
                      </identifier>
                    </secondExpr>
                  </expression>
                </statement>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.50/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.1/@variable.0">
                      <index xsi:type="expressions:ArithmeticExpression" operator="-">
                        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.6/@variable.0"/>
                        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                      </index>
                    </identifier>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.29/@variable.0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:IncrementDecrementExpression" position="POST" operator="--">
                  <expression xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.50/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.0/@variable.0"/>
                  </expression>
                </expression>
              </statement>
            </thenStatement>
          </statement>
        </block>
        <parameter callType="CALL_BY_REFERENCE">
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.11/@type.0"/>
            <variable name="buffer"/>
          </variableDeclaration>
        </parameter>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.9/@type.0"/>
            <variable name="m"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="receive">
        <returnType xsi:type="types:TypeReference" referredType="//@bool"/>
        <block>
          <statement xsi:type="statements:ReturnStatement">
            <returnExpression xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.48/@function">
              <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.22/@variable.0">
                <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.51/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.19/@variable.0">
                  <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.51/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                  <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.51/@function/@parameter.1/@variableDeclaration/@variable.0"/>
                </index>
              </argument>
              <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.51/@function/@parameter.1/@variableDeclaration/@variable.0"/>
            </returnExpression>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.18/@type.0"/>
            <variable name="receiver"/>
          </variableDeclaration>
        </parameter>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.9/@type.0"/>
            <variable name="mKind"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="requestId">
        <returnType xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
        <block>
          <declarations>
            <declaration xsi:type="declarations:DataVariableDeclaration">
              <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
              <variable name="i"/>
            </declaration>
          </declarations>
          <statement xsi:type="statements:ForLoop">
            <initialization xsi:type="expressions:AssignmentExpression">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.52/@function/@block/@declarations/@declaration.0/@variable.0"/>
              <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
            </initialization>
            <condition xsi:type="expressions:CompareExpression" operator="&lt;">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.52/@function/@block/@declarations/@declaration.0/@variable.0"/>
              <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
            </condition>
            <iteration xsi:type="expressions:IncrementDecrementExpression" position="POST">
              <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.52/@function/@block/@declarations/@declaration.0/@variable.0"/>
            </iteration>
            <statement xsi:type="statements:IfStatement">
              <ifExpression xsi:type="expressions:CompareExpression" operator="!=">
                <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.30/@variable.0">
                  <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.52/@function/@block/@declarations/@declaration.0/@variable.0"/>
                </firstExpr>
                <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.28/@variable.0"/>
              </ifExpression>
              <thenStatement xsi:type="statements:Block">
                <declarations>
                  <declaration xsi:type="declarations:DataVariableDeclaration">
                    <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
                    <variable name="result"/>
                  </declaration>
                </declarations>
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.52/@function/@block/@statement.0/@statement/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                    <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.30/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.52/@function/@block/@declarations/@declaration.0/@variable.0"/>
                    </secondExpr>
                  </expression>
                </statement>
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.30/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.52/@function/@block/@declarations/@declaration.0/@variable.0"/>
                    </firstExpr>
                    <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.28/@variable.0"/>
                  </expression>
                </statement>
                <statement xsi:type="statements:ReturnStatement">
                  <returnExpression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.52/@function/@block/@statement.0/@statement/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                </statement>
              </thenStatement>
            </statement>
          </statement>
          <statement xsi:type="statements:ReturnStatement">
            <returnExpression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.28/@variable.0"/>
          </statement>
        </block>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="releaseId">
        <returnType xsi:type="types:TypeReference" referredType="//@bool"/>
        <block>
          <declarations>
            <declaration xsi:type="declarations:DataVariableDeclaration">
              <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
              <variable name="i"/>
            </declaration>
          </declarations>
          <statement xsi:type="statements:ForLoop">
            <initialization xsi:type="expressions:AssignmentExpression">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.53/@function/@block/@declarations/@declaration.0/@variable.0"/>
              <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
            </initialization>
            <condition xsi:type="expressions:CompareExpression" operator="&lt;">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.53/@function/@block/@declarations/@declaration.0/@variable.0"/>
              <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
            </condition>
            <iteration xsi:type="expressions:IncrementDecrementExpression" position="POST">
              <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.53/@function/@block/@declarations/@declaration.0/@variable.0"/>
            </iteration>
            <statement xsi:type="statements:IfStatement">
              <ifExpression xsi:type="expressions:CompareExpression">
                <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.30/@variable.0">
                  <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.53/@function/@block/@declarations/@declaration.0/@variable.0"/>
                </firstExpr>
                <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.53/@function/@parameter.0/@variableDeclaration/@variable.0"/>
              </ifExpression>
              <thenStatement xsi:type="statements:ReturnStatement">
                <returnExpression xsi:type="expressions:LiteralExpression" text="false"/>
              </thenStatement>
            </statement>
          </statement>
          <statement xsi:type="statements:ForLoop">
            <initialization xsi:type="expressions:AssignmentExpression">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.53/@function/@block/@declarations/@declaration.0/@variable.0"/>
              <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
            </initialization>
            <condition xsi:type="expressions:CompareExpression" operator="&lt;">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.53/@function/@block/@declarations/@declaration.0/@variable.0"/>
              <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
            </condition>
            <iteration xsi:type="expressions:IncrementDecrementExpression" position="POST">
              <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.53/@function/@block/@declarations/@declaration.0/@variable.0"/>
            </iteration>
            <statement xsi:type="statements:IfStatement">
              <ifExpression xsi:type="expressions:CompareExpression">
                <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.30/@variable.0">
                  <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.53/@function/@block/@declarations/@declaration.0/@variable.0"/>
                </firstExpr>
                <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.28/@variable.0"/>
              </ifExpression>
              <thenStatement xsi:type="statements:Block">
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.30/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.53/@function/@block/@declarations/@declaration.0/@variable.0"/>
                    </firstExpr>
                    <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.53/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                  </expression>
                </statement>
                <statement xsi:type="statements:ReturnStatement">
                  <returnExpression xsi:type="expressions:LiteralExpression" text="true"/>
                </statement>
              </thenStatement>
            </statement>
          </statement>
          <statement xsi:type="statements:ReturnStatement">
            <returnExpression xsi:type="expressions:LiteralExpression" text="false"/>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
            <variable name="id"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="addrequestArguments">
        <returnType xsi:type="types:TypeReference" referredType="//@int"/>
        <block>
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.41/@variable.0">
                <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.36/@variable.0"/>
              </firstExpr>
              <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.54/@function/@parameter.0/@variableDeclaration/@variable.0"/>
            </expression>
          </statement>
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:IncrementDecrementExpression" position="POST">
              <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.36/@variable.0"/>
            </expression>
          </statement>
          <statement xsi:type="statements:ReturnStatement">
            <returnExpression xsi:type="expressions:ArithmeticExpression" operator="-">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.36/@variable.0"/>
              <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
            </returnExpression>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.12/@type.0"/>
            <variable name="m"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="addfinishArguments">
        <returnType xsi:type="types:TypeReference" referredType="//@int"/>
        <block>
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.42/@variable.0">
                <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.37/@variable.0"/>
              </firstExpr>
              <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.55/@function/@parameter.0/@variableDeclaration/@variable.0"/>
            </expression>
          </statement>
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:IncrementDecrementExpression" position="POST">
              <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.37/@variable.0"/>
            </expression>
          </statement>
          <statement xsi:type="statements:ReturnStatement">
            <returnExpression xsi:type="expressions:ArithmeticExpression" operator="-">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.37/@variable.0"/>
              <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
            </returnExpression>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.13/@type.0"/>
            <variable name="m"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="addlaneChangedArguments">
        <returnType xsi:type="types:TypeReference" referredType="//@int"/>
        <block>
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.43/@variable.0">
                <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.38/@variable.0"/>
              </firstExpr>
              <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.56/@function/@parameter.0/@variableDeclaration/@variable.0"/>
            </expression>
          </statement>
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:IncrementDecrementExpression" position="POST">
              <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.38/@variable.0"/>
            </expression>
          </statement>
          <statement xsi:type="statements:ReturnStatement">
            <returnExpression xsi:type="expressions:ArithmeticExpression" operator="-">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.38/@variable.0"/>
              <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
            </returnExpression>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.14/@type.0"/>
            <variable name="m"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="adddeclineArguments">
        <returnType xsi:type="types:TypeReference" referredType="//@int"/>
        <block>
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.44/@variable.0">
                <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.39/@variable.0"/>
              </firstExpr>
              <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.57/@function/@parameter.0/@variableDeclaration/@variable.0"/>
            </expression>
          </statement>
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:IncrementDecrementExpression" position="POST">
              <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.39/@variable.0"/>
            </expression>
          </statement>
          <statement xsi:type="statements:ReturnStatement">
            <returnExpression xsi:type="expressions:ArithmeticExpression" operator="-">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.39/@variable.0"/>
              <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
            </returnExpression>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.15/@type.0"/>
            <variable name="m"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="addacceptArguments">
        <returnType xsi:type="types:TypeReference" referredType="//@int"/>
        <block>
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.45/@variable.0">
                <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.40/@variable.0"/>
              </firstExpr>
              <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.58/@function/@parameter.0/@variableDeclaration/@variable.0"/>
            </expression>
          </statement>
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:IncrementDecrementExpression" position="POST">
              <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.40/@variable.0"/>
            </expression>
          </statement>
          <statement xsi:type="statements:ReturnStatement">
            <returnExpression xsi:type="expressions:ArithmeticExpression" operator="-">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.40/@variable.0"/>
              <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
            </returnExpression>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.16/@type.0"/>
            <variable name="m"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="removerequestArguments">
        <returnType xsi:type="types:TypeReference" referredType="//@bool"/>
        <block>
          <declarations>
            <declaration xsi:type="declarations:DataVariableDeclaration">
              <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
              <variable name="i"/>
            </declaration>
          </declarations>
          <statement xsi:type="statements:ForLoop">
            <initialization xsi:type="expressions:AssignmentExpression">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.59/@function/@block/@declarations/@declaration.0/@variable.0"/>
              <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
            </initialization>
            <condition xsi:type="expressions:CompareExpression" operator="&lt;">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.59/@function/@block/@declarations/@declaration.0/@variable.0"/>
              <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
            </condition>
            <iteration xsi:type="expressions:IncrementDecrementExpression" position="POST">
              <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.59/@function/@block/@declarations/@declaration.0/@variable.0"/>
            </iteration>
            <statement xsi:type="statements:Block">
              <statement xsi:type="statements:IfStatement">
                <ifExpression xsi:type="expressions:CompareExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.41/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.59/@function/@block/@declarations/@declaration.0/@variable.0"/>
                    </scope>
                    <identifier identifier="//@globalDeclarations/@declaration.12/@typeDefinition/@declaration.0/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.59/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                </ifExpression>
                <thenStatement xsi:type="statements:Block">
                  <declarations>
                    <declaration xsi:type="declarations:DataVariableDeclaration">
                      <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
                      <variable name="j"/>
                    </declaration>
                  </declarations>
                  <statement xsi:type="statements:ForLoop">
                    <initialization xsi:type="expressions:AssignmentExpression">
                      <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.59/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                      <secondExpr xsi:type="expressions:ArithmeticExpression">
                        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.59/@function/@block/@declarations/@declaration.0/@variable.0"/>
                        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                      </secondExpr>
                    </initialization>
                    <condition xsi:type="expressions:CompareExpression" operator="&lt;">
                      <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.59/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                      <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
                    </condition>
                    <iteration xsi:type="expressions:IncrementDecrementExpression" position="POST">
                      <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.59/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                    </iteration>
                    <statement xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.41/@variable.0">
                          <index xsi:type="expressions:ArithmeticExpression" operator="-">
                            <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.59/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                            <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                          </index>
                        </firstExpr>
                        <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.41/@variable.0">
                          <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.59/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                        </secondExpr>
                      </expression>
                    </statement>
                  </statement>
                  <statement xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.41/@variable.0">
                        <index xsi:type="expressions:ArithmeticExpression" operator="-">
                          <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
                          <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                        </index>
                      </firstExpr>
                      <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.31/@variable.0"/>
                    </expression>
                  </statement>
                  <statement xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:IncrementDecrementExpression" position="POST" operator="--">
                      <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.36/@variable.0"/>
                    </expression>
                  </statement>
                  <statement xsi:type="statements:ReturnStatement">
                    <returnExpression xsi:type="expressions:LiteralExpression" text="true"/>
                  </statement>
                </thenStatement>
              </statement>
            </statement>
          </statement>
          <statement xsi:type="statements:ReturnStatement">
            <returnExpression xsi:type="expressions:LiteralExpression" text="false"/>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
            <variable name="mId"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="removefinishArguments">
        <returnType xsi:type="types:TypeReference" referredType="//@bool"/>
        <block>
          <declarations>
            <declaration xsi:type="declarations:DataVariableDeclaration">
              <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
              <variable name="i"/>
            </declaration>
          </declarations>
          <statement xsi:type="statements:ForLoop">
            <initialization xsi:type="expressions:AssignmentExpression">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.60/@function/@block/@declarations/@declaration.0/@variable.0"/>
              <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
            </initialization>
            <condition xsi:type="expressions:CompareExpression" operator="&lt;">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.60/@function/@block/@declarations/@declaration.0/@variable.0"/>
              <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
            </condition>
            <iteration xsi:type="expressions:IncrementDecrementExpression" position="POST">
              <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.60/@function/@block/@declarations/@declaration.0/@variable.0"/>
            </iteration>
            <statement xsi:type="statements:Block">
              <statement xsi:type="statements:IfStatement">
                <ifExpression xsi:type="expressions:CompareExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.42/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.60/@function/@block/@declarations/@declaration.0/@variable.0"/>
                    </scope>
                    <identifier identifier="//@globalDeclarations/@declaration.13/@typeDefinition/@declaration.0/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.60/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                </ifExpression>
                <thenStatement xsi:type="statements:Block">
                  <declarations>
                    <declaration xsi:type="declarations:DataVariableDeclaration">
                      <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
                      <variable name="j"/>
                    </declaration>
                  </declarations>
                  <statement xsi:type="statements:ForLoop">
                    <initialization xsi:type="expressions:AssignmentExpression">
                      <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.60/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                      <secondExpr xsi:type="expressions:ArithmeticExpression">
                        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.60/@function/@block/@declarations/@declaration.0/@variable.0"/>
                        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                      </secondExpr>
                    </initialization>
                    <condition xsi:type="expressions:CompareExpression" operator="&lt;">
                      <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.60/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                      <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
                    </condition>
                    <iteration xsi:type="expressions:IncrementDecrementExpression" position="POST">
                      <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.60/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                    </iteration>
                    <statement xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.42/@variable.0">
                          <index xsi:type="expressions:ArithmeticExpression" operator="-">
                            <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.60/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                            <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                          </index>
                        </firstExpr>
                        <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.42/@variable.0">
                          <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.60/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                        </secondExpr>
                      </expression>
                    </statement>
                  </statement>
                  <statement xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.42/@variable.0">
                        <index xsi:type="expressions:ArithmeticExpression" operator="-">
                          <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
                          <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                        </index>
                      </firstExpr>
                      <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.32/@variable.0"/>
                    </expression>
                  </statement>
                  <statement xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:IncrementDecrementExpression" position="POST" operator="--">
                      <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.37/@variable.0"/>
                    </expression>
                  </statement>
                  <statement xsi:type="statements:ReturnStatement">
                    <returnExpression xsi:type="expressions:LiteralExpression" text="true"/>
                  </statement>
                </thenStatement>
              </statement>
            </statement>
          </statement>
          <statement xsi:type="statements:ReturnStatement">
            <returnExpression xsi:type="expressions:LiteralExpression" text="false"/>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
            <variable name="mId"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="removelaneChangedArguments">
        <returnType xsi:type="types:TypeReference" referredType="//@bool"/>
        <block>
          <declarations>
            <declaration xsi:type="declarations:DataVariableDeclaration">
              <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
              <variable name="i"/>
            </declaration>
          </declarations>
          <statement xsi:type="statements:ForLoop">
            <initialization xsi:type="expressions:AssignmentExpression">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.61/@function/@block/@declarations/@declaration.0/@variable.0"/>
              <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
            </initialization>
            <condition xsi:type="expressions:CompareExpression" operator="&lt;">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.61/@function/@block/@declarations/@declaration.0/@variable.0"/>
              <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
            </condition>
            <iteration xsi:type="expressions:IncrementDecrementExpression" position="POST">
              <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.61/@function/@block/@declarations/@declaration.0/@variable.0"/>
            </iteration>
            <statement xsi:type="statements:Block">
              <statement xsi:type="statements:IfStatement">
                <ifExpression xsi:type="expressions:CompareExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.43/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.61/@function/@block/@declarations/@declaration.0/@variable.0"/>
                    </scope>
                    <identifier identifier="//@globalDeclarations/@declaration.14/@typeDefinition/@declaration.0/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.61/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                </ifExpression>
                <thenStatement xsi:type="statements:Block">
                  <declarations>
                    <declaration xsi:type="declarations:DataVariableDeclaration">
                      <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
                      <variable name="j"/>
                    </declaration>
                  </declarations>
                  <statement xsi:type="statements:ForLoop">
                    <initialization xsi:type="expressions:AssignmentExpression">
                      <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.61/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                      <secondExpr xsi:type="expressions:ArithmeticExpression">
                        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.61/@function/@block/@declarations/@declaration.0/@variable.0"/>
                        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                      </secondExpr>
                    </initialization>
                    <condition xsi:type="expressions:CompareExpression" operator="&lt;">
                      <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.61/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                      <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
                    </condition>
                    <iteration xsi:type="expressions:IncrementDecrementExpression" position="POST">
                      <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.61/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                    </iteration>
                    <statement xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.43/@variable.0">
                          <index xsi:type="expressions:ArithmeticExpression" operator="-">
                            <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.61/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                            <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                          </index>
                        </firstExpr>
                        <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.43/@variable.0">
                          <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.61/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                        </secondExpr>
                      </expression>
                    </statement>
                  </statement>
                  <statement xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.43/@variable.0">
                        <index xsi:type="expressions:ArithmeticExpression" operator="-">
                          <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
                          <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                        </index>
                      </firstExpr>
                      <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.33/@variable.0"/>
                    </expression>
                  </statement>
                  <statement xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:IncrementDecrementExpression" position="POST" operator="--">
                      <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.38/@variable.0"/>
                    </expression>
                  </statement>
                  <statement xsi:type="statements:ReturnStatement">
                    <returnExpression xsi:type="expressions:LiteralExpression" text="true"/>
                  </statement>
                </thenStatement>
              </statement>
            </statement>
          </statement>
          <statement xsi:type="statements:ReturnStatement">
            <returnExpression xsi:type="expressions:LiteralExpression" text="false"/>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
            <variable name="mId"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="removedeclineArguments">
        <returnType xsi:type="types:TypeReference" referredType="//@bool"/>
        <block>
          <declarations>
            <declaration xsi:type="declarations:DataVariableDeclaration">
              <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
              <variable name="i"/>
            </declaration>
          </declarations>
          <statement xsi:type="statements:ForLoop">
            <initialization xsi:type="expressions:AssignmentExpression">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.62/@function/@block/@declarations/@declaration.0/@variable.0"/>
              <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
            </initialization>
            <condition xsi:type="expressions:CompareExpression" operator="&lt;">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.62/@function/@block/@declarations/@declaration.0/@variable.0"/>
              <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
            </condition>
            <iteration xsi:type="expressions:IncrementDecrementExpression" position="POST">
              <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.62/@function/@block/@declarations/@declaration.0/@variable.0"/>
            </iteration>
            <statement xsi:type="statements:Block">
              <statement xsi:type="statements:IfStatement">
                <ifExpression xsi:type="expressions:CompareExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.44/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.62/@function/@block/@declarations/@declaration.0/@variable.0"/>
                    </scope>
                    <identifier identifier="//@globalDeclarations/@declaration.15/@typeDefinition/@declaration.0/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.62/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                </ifExpression>
                <thenStatement xsi:type="statements:Block">
                  <declarations>
                    <declaration xsi:type="declarations:DataVariableDeclaration">
                      <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
                      <variable name="j"/>
                    </declaration>
                  </declarations>
                  <statement xsi:type="statements:ForLoop">
                    <initialization xsi:type="expressions:AssignmentExpression">
                      <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.62/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                      <secondExpr xsi:type="expressions:ArithmeticExpression">
                        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.62/@function/@block/@declarations/@declaration.0/@variable.0"/>
                        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                      </secondExpr>
                    </initialization>
                    <condition xsi:type="expressions:CompareExpression" operator="&lt;">
                      <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.62/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                      <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
                    </condition>
                    <iteration xsi:type="expressions:IncrementDecrementExpression" position="POST">
                      <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.62/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                    </iteration>
                    <statement xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.44/@variable.0">
                          <index xsi:type="expressions:ArithmeticExpression" operator="-">
                            <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.62/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                            <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                          </index>
                        </firstExpr>
                        <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.44/@variable.0">
                          <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.62/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                        </secondExpr>
                      </expression>
                    </statement>
                  </statement>
                  <statement xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.44/@variable.0">
                        <index xsi:type="expressions:ArithmeticExpression" operator="-">
                          <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
                          <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                        </index>
                      </firstExpr>
                      <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.34/@variable.0"/>
                    </expression>
                  </statement>
                  <statement xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:IncrementDecrementExpression" position="POST" operator="--">
                      <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.39/@variable.0"/>
                    </expression>
                  </statement>
                  <statement xsi:type="statements:ReturnStatement">
                    <returnExpression xsi:type="expressions:LiteralExpression" text="true"/>
                  </statement>
                </thenStatement>
              </statement>
            </statement>
          </statement>
          <statement xsi:type="statements:ReturnStatement">
            <returnExpression xsi:type="expressions:LiteralExpression" text="false"/>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
            <variable name="mId"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="removeacceptArguments">
        <returnType xsi:type="types:TypeReference" referredType="//@bool"/>
        <block>
          <declarations>
            <declaration xsi:type="declarations:DataVariableDeclaration">
              <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
              <variable name="i"/>
            </declaration>
          </declarations>
          <statement xsi:type="statements:ForLoop">
            <initialization xsi:type="expressions:AssignmentExpression">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.63/@function/@block/@declarations/@declaration.0/@variable.0"/>
              <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
            </initialization>
            <condition xsi:type="expressions:CompareExpression" operator="&lt;">
              <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.63/@function/@block/@declarations/@declaration.0/@variable.0"/>
              <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
            </condition>
            <iteration xsi:type="expressions:IncrementDecrementExpression" position="POST">
              <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.63/@function/@block/@declarations/@declaration.0/@variable.0"/>
            </iteration>
            <statement xsi:type="statements:Block">
              <statement xsi:type="statements:IfStatement">
                <ifExpression xsi:type="expressions:CompareExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.45/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.63/@function/@block/@declarations/@declaration.0/@variable.0"/>
                    </scope>
                    <identifier identifier="//@globalDeclarations/@declaration.16/@typeDefinition/@declaration.0/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.63/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                </ifExpression>
                <thenStatement xsi:type="statements:Block">
                  <declarations>
                    <declaration xsi:type="declarations:DataVariableDeclaration">
                      <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
                      <variable name="j"/>
                    </declaration>
                  </declarations>
                  <statement xsi:type="statements:ForLoop">
                    <initialization xsi:type="expressions:AssignmentExpression">
                      <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.63/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                      <secondExpr xsi:type="expressions:ArithmeticExpression">
                        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.63/@function/@block/@declarations/@declaration.0/@variable.0"/>
                        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                      </secondExpr>
                    </initialization>
                    <condition xsi:type="expressions:CompareExpression" operator="&lt;">
                      <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.63/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                      <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
                    </condition>
                    <iteration xsi:type="expressions:IncrementDecrementExpression" position="POST">
                      <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.63/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                    </iteration>
                    <statement xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.45/@variable.0">
                          <index xsi:type="expressions:ArithmeticExpression" operator="-">
                            <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.63/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                            <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                          </index>
                        </firstExpr>
                        <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.45/@variable.0">
                          <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.63/@function/@block/@statement.0/@statement/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                        </secondExpr>
                      </expression>
                    </statement>
                  </statement>
                  <statement xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.45/@variable.0">
                        <index xsi:type="expressions:ArithmeticExpression" operator="-">
                          <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.5/@variable.0"/>
                          <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                        </index>
                      </firstExpr>
                      <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.35/@variable.0"/>
                    </expression>
                  </statement>
                  <statement xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:IncrementDecrementExpression" position="POST" operator="--">
                      <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.40/@variable.0"/>
                    </expression>
                  </statement>
                  <statement xsi:type="statements:ReturnStatement">
                    <returnExpression xsi:type="expressions:LiteralExpression" text="true"/>
                  </statement>
                </thenStatement>
              </statement>
            </statement>
          </statement>
          <statement xsi:type="statements:ReturnStatement">
            <returnExpression xsi:type="expressions:LiteralExpression" text="false"/>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
            <variable name="mId"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="sendrequest">
        <returnType xsi:type="types:TypeReference" referredType="//@void"/>
        <block>
          <statement xsi:type="statements:IfStatement">
            <ifExpression xsi:type="expressions:CompareExpression" operator="&lt;">
              <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.23/@variable.0">
                  <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.64/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                </scope>
                <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.0/@variable.0"/>
              </firstExpr>
              <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.6/@variable.0"/>
            </ifExpression>
            <thenStatement xsi:type="statements:Block">
              <declarations>
                <declaration xsi:type="declarations:DataVariableDeclaration">
                  <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.12/@type.0"/>
                  <variable name="requestInstance">
                    <initializer xsi:type="declarations:ArrayInitializer">
                      <initializer xsi:type="declarations:ExpressionInitializer">
                        <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.28/@variable.0"/>
                      </initializer>
                    </initializer>
                  </variable>
                </declaration>
                <declaration xsi:type="declarations:DataVariableDeclaration">
                  <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.10/@type.0"/>
                  <variable name="message">
                    <initializer xsi:type="declarations:ExpressionInitializer">
                      <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.29/@variable.0"/>
                    </initializer>
                  </variable>
                </declaration>
                <declaration xsi:type="declarations:DataVariableDeclaration">
                  <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
                  <variable name="mId">
                    <initializer xsi:type="declarations:ExpressionInitializer">
                      <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.28/@variable.0"/>
                    </initializer>
                  </variable>
                </declaration>
              </declarations>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.64/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.2/@variable.0"/>
                  <secondExpr xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.52/@function"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.64/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.12/@typeDefinition/@declaration.0/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.64/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.2/@variable.0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.64/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.1/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.0/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.64/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.2/@variable.0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.64/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.1/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.1/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.1"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.64/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.1/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.2/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.54/@function">
                    <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.64/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                  </secondExpr>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.46/@function">
                  <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.23/@variable.0">
                    <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.64/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                  </argument>
                  <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.64/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.1/@variable.0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.26/@variable.0">
                    <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.64/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.25/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.64/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    </index>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:ConditionExpression">
                  <ifExpression xsi:type="expressions:CompareExpression">
                    <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.25/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.64/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    </firstExpr>
                    <secondExpr xsi:type="expressions:ArithmeticExpression" operator="-">
                      <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.6/@variable.0"/>
                      <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                    </secondExpr>
                  </ifExpression>
                  <thenExpression xsi:type="expressions:AssignmentExpression">
                    <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.25/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.64/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    </firstExpr>
                    <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
                  </thenExpression>
                  <elseExpression xsi:type="expressions:IncrementDecrementExpression" position="POST">
                    <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.25/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.64/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    </expression>
                  </elseExpression>
                </expression>
              </statement>
            </thenStatement>
            <elseStatement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.21/@variable.0"/>
                <secondExpr xsi:type="expressions:LiteralExpression" text="true"/>
              </expression>
            </elseStatement>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.18/@type.0"/>
            <variable name="sender"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="sendfinish">
        <returnType xsi:type="types:TypeReference" referredType="//@void"/>
        <block>
          <statement xsi:type="statements:IfStatement">
            <ifExpression xsi:type="expressions:CompareExpression" operator="&lt;">
              <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.23/@variable.0">
                  <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.65/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                </scope>
                <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.0/@variable.0"/>
              </firstExpr>
              <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.6/@variable.0"/>
            </ifExpression>
            <thenStatement xsi:type="statements:Block">
              <declarations>
                <declaration xsi:type="declarations:DataVariableDeclaration">
                  <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.13/@type.0"/>
                  <variable name="finishInstance">
                    <initializer xsi:type="declarations:ArrayInitializer">
                      <initializer xsi:type="declarations:ExpressionInitializer">
                        <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.28/@variable.0"/>
                      </initializer>
                    </initializer>
                  </variable>
                </declaration>
                <declaration xsi:type="declarations:DataVariableDeclaration">
                  <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.10/@type.0"/>
                  <variable name="message">
                    <initializer xsi:type="declarations:ExpressionInitializer">
                      <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.29/@variable.0"/>
                    </initializer>
                  </variable>
                </declaration>
                <declaration xsi:type="declarations:DataVariableDeclaration">
                  <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
                  <variable name="mId">
                    <initializer xsi:type="declarations:ExpressionInitializer">
                      <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.28/@variable.0"/>
                    </initializer>
                  </variable>
                </declaration>
              </declarations>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.65/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.2/@variable.0"/>
                  <secondExpr xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.52/@function"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.65/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.13/@typeDefinition/@declaration.0/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.65/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.2/@variable.0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.65/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.1/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.0/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.65/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.2/@variable.0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.65/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.1/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.1/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.2"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.65/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.1/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.2/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.55/@function">
                    <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.65/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                  </secondExpr>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.46/@function">
                  <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.23/@variable.0">
                    <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.65/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                  </argument>
                  <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.65/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.1/@variable.0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.26/@variable.0">
                    <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.65/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.25/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.65/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    </index>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:ConditionExpression">
                  <ifExpression xsi:type="expressions:CompareExpression">
                    <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.25/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.65/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    </firstExpr>
                    <secondExpr xsi:type="expressions:ArithmeticExpression" operator="-">
                      <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.6/@variable.0"/>
                      <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                    </secondExpr>
                  </ifExpression>
                  <thenExpression xsi:type="expressions:AssignmentExpression">
                    <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.25/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.65/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    </firstExpr>
                    <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
                  </thenExpression>
                  <elseExpression xsi:type="expressions:IncrementDecrementExpression" position="POST">
                    <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.25/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.65/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    </expression>
                  </elseExpression>
                </expression>
              </statement>
            </thenStatement>
            <elseStatement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.21/@variable.0"/>
                <secondExpr xsi:type="expressions:LiteralExpression" text="true"/>
              </expression>
            </elseStatement>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.18/@type.0"/>
            <variable name="sender"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="sendlaneChanged">
        <returnType xsi:type="types:TypeReference" referredType="//@void"/>
        <block>
          <statement xsi:type="statements:IfStatement">
            <ifExpression xsi:type="expressions:CompareExpression" operator="&lt;">
              <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.23/@variable.0">
                  <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.66/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                </scope>
                <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.0/@variable.0"/>
              </firstExpr>
              <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.6/@variable.0"/>
            </ifExpression>
            <thenStatement xsi:type="statements:Block">
              <declarations>
                <declaration xsi:type="declarations:DataVariableDeclaration">
                  <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.14/@type.0"/>
                  <variable name="laneChangedInstance">
                    <initializer xsi:type="declarations:ArrayInitializer">
                      <initializer xsi:type="declarations:ExpressionInitializer">
                        <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.28/@variable.0"/>
                      </initializer>
                    </initializer>
                  </variable>
                </declaration>
                <declaration xsi:type="declarations:DataVariableDeclaration">
                  <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.10/@type.0"/>
                  <variable name="message">
                    <initializer xsi:type="declarations:ExpressionInitializer">
                      <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.29/@variable.0"/>
                    </initializer>
                  </variable>
                </declaration>
                <declaration xsi:type="declarations:DataVariableDeclaration">
                  <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
                  <variable name="mId">
                    <initializer xsi:type="declarations:ExpressionInitializer">
                      <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.28/@variable.0"/>
                    </initializer>
                  </variable>
                </declaration>
              </declarations>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.66/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.2/@variable.0"/>
                  <secondExpr xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.52/@function"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.66/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.14/@typeDefinition/@declaration.0/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.66/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.2/@variable.0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.66/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.1/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.0/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.66/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.2/@variable.0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.66/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.1/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.1/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.3"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.66/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.1/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.2/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.56/@function">
                    <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.66/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                  </secondExpr>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.46/@function">
                  <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.23/@variable.0">
                    <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.66/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                  </argument>
                  <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.66/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.1/@variable.0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.26/@variable.0">
                    <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.66/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.25/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.66/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    </index>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:ConditionExpression">
                  <ifExpression xsi:type="expressions:CompareExpression">
                    <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.25/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.66/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    </firstExpr>
                    <secondExpr xsi:type="expressions:ArithmeticExpression" operator="-">
                      <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.6/@variable.0"/>
                      <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                    </secondExpr>
                  </ifExpression>
                  <thenExpression xsi:type="expressions:AssignmentExpression">
                    <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.25/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.66/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    </firstExpr>
                    <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
                  </thenExpression>
                  <elseExpression xsi:type="expressions:IncrementDecrementExpression" position="POST">
                    <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.25/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.66/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    </expression>
                  </elseExpression>
                </expression>
              </statement>
            </thenStatement>
            <elseStatement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.21/@variable.0"/>
                <secondExpr xsi:type="expressions:LiteralExpression" text="true"/>
              </expression>
            </elseStatement>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.18/@type.0"/>
            <variable name="sender"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="senddecline">
        <returnType xsi:type="types:TypeReference" referredType="//@void"/>
        <block>
          <statement xsi:type="statements:IfStatement">
            <ifExpression xsi:type="expressions:CompareExpression" operator="&lt;">
              <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.23/@variable.0">
                  <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.67/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                </scope>
                <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.0/@variable.0"/>
              </firstExpr>
              <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.6/@variable.0"/>
            </ifExpression>
            <thenStatement xsi:type="statements:Block">
              <declarations>
                <declaration xsi:type="declarations:DataVariableDeclaration">
                  <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.15/@type.0"/>
                  <variable name="declineInstance">
                    <initializer xsi:type="declarations:ArrayInitializer">
                      <initializer xsi:type="declarations:ExpressionInitializer">
                        <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.28/@variable.0"/>
                      </initializer>
                      <initializer xsi:type="declarations:ExpressionInitializer">
                        <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.67/@function/@parameter.1/@variableDeclaration/@variable.0"/>
                      </initializer>
                    </initializer>
                  </variable>
                </declaration>
                <declaration xsi:type="declarations:DataVariableDeclaration">
                  <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.10/@type.0"/>
                  <variable name="message">
                    <initializer xsi:type="declarations:ExpressionInitializer">
                      <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.29/@variable.0"/>
                    </initializer>
                  </variable>
                </declaration>
                <declaration xsi:type="declarations:DataVariableDeclaration">
                  <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
                  <variable name="mId">
                    <initializer xsi:type="declarations:ExpressionInitializer">
                      <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.28/@variable.0"/>
                    </initializer>
                  </variable>
                </declaration>
              </declarations>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.67/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.2/@variable.0"/>
                  <secondExpr xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.52/@function"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.67/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.15/@typeDefinition/@declaration.0/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.67/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.2/@variable.0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.67/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.1/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.0/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.67/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.2/@variable.0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.67/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.1/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.1/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.4"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.67/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.1/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.2/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.57/@function">
                    <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.67/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                  </secondExpr>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.46/@function">
                  <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.23/@variable.0">
                    <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.67/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                  </argument>
                  <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.67/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.1/@variable.0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.26/@variable.0">
                    <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.67/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.25/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.67/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    </index>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:ConditionExpression">
                  <ifExpression xsi:type="expressions:CompareExpression">
                    <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.25/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.67/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    </firstExpr>
                    <secondExpr xsi:type="expressions:ArithmeticExpression" operator="-">
                      <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.6/@variable.0"/>
                      <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                    </secondExpr>
                  </ifExpression>
                  <thenExpression xsi:type="expressions:AssignmentExpression">
                    <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.25/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.67/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    </firstExpr>
                    <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
                  </thenExpression>
                  <elseExpression xsi:type="expressions:IncrementDecrementExpression" position="POST">
                    <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.25/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.67/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    </expression>
                  </elseExpression>
                </expression>
              </statement>
            </thenStatement>
            <elseStatement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.21/@variable.0"/>
                <secondExpr xsi:type="expressions:LiteralExpression" text="true"/>
              </expression>
            </elseStatement>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.18/@type.0"/>
            <variable name="sender"/>
          </variableDeclaration>
        </parameter>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.1/@type.0"/>
            <variable name="frontVelocity0"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="sendaccept">
        <returnType xsi:type="types:TypeReference" referredType="//@void"/>
        <block>
          <statement xsi:type="statements:IfStatement">
            <ifExpression xsi:type="expressions:CompareExpression" operator="&lt;">
              <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.23/@variable.0">
                  <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.68/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                </scope>
                <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.0/@variable.0"/>
              </firstExpr>
              <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.6/@variable.0"/>
            </ifExpression>
            <thenStatement xsi:type="statements:Block">
              <declarations>
                <declaration xsi:type="declarations:DataVariableDeclaration">
                  <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.16/@type.0"/>
                  <variable name="acceptInstance">
                    <initializer xsi:type="declarations:ArrayInitializer">
                      <initializer xsi:type="declarations:ExpressionInitializer">
                        <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.28/@variable.0"/>
                      </initializer>
                    </initializer>
                  </variable>
                </declaration>
                <declaration xsi:type="declarations:DataVariableDeclaration">
                  <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.10/@type.0"/>
                  <variable name="message">
                    <initializer xsi:type="declarations:ExpressionInitializer">
                      <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.29/@variable.0"/>
                    </initializer>
                  </variable>
                </declaration>
                <declaration xsi:type="declarations:DataVariableDeclaration">
                  <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.8/@type.0"/>
                  <variable name="mId">
                    <initializer xsi:type="declarations:ExpressionInitializer">
                      <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.28/@variable.0"/>
                    </initializer>
                  </variable>
                </declaration>
              </declarations>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.68/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.2/@variable.0"/>
                  <secondExpr xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.52/@function"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.68/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.16/@typeDefinition/@declaration.0/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.68/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.2/@variable.0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.68/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.1/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.0/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.68/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.2/@variable.0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.68/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.1/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.1/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.5"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.68/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.1/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.2/@variable.0"/>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.58/@function">
                    <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.68/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                  </secondExpr>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.46/@function">
                  <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.23/@variable.0">
                    <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.68/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                  </argument>
                  <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.68/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.1/@variable.0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.26/@variable.0">
                    <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.68/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.25/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.68/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    </index>
                  </firstExpr>
                  <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:ConditionExpression">
                  <ifExpression xsi:type="expressions:CompareExpression">
                    <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.25/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.68/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    </firstExpr>
                    <secondExpr xsi:type="expressions:ArithmeticExpression" operator="-">
                      <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.6/@variable.0"/>
                      <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
                    </secondExpr>
                  </ifExpression>
                  <thenExpression xsi:type="expressions:AssignmentExpression">
                    <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.25/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.68/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    </firstExpr>
                    <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
                  </thenExpression>
                  <elseExpression xsi:type="expressions:IncrementDecrementExpression" position="POST">
                    <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.25/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.68/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    </expression>
                  </elseExpression>
                </expression>
              </statement>
            </thenStatement>
            <elseStatement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.21/@variable.0"/>
                <secondExpr xsi:type="expressions:LiteralExpression" text="true"/>
              </expression>
            </elseStatement>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.18/@type.0"/>
            <variable name="sender"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:FunctionDeclaration">
      <function name="consume">
        <returnType xsi:type="types:TypeReference" referredType="//@void"/>
        <block>
          <statement xsi:type="statements:IfStatement">
            <ifExpression xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.51/@function">
              <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.69/@function/@parameter.0/@variableDeclaration/@variable.0"/>
              <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.69/@function/@parameter.1/@variableDeclaration/@variable.0"/>
            </ifExpression>
            <thenStatement xsi:type="statements:Block">
              <declarations>
                <declaration xsi:type="declarations:DataVariableDeclaration">
                  <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.10/@type.0"/>
                  <variable name="nextMessage">
                    <initializer xsi:type="declarations:ExpressionInitializer">
                      <expression xsi:type="expressions:ScopedIdentifierExpression">
                        <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.22/@variable.0">
                          <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.69/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                          <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.19/@variable.0">
                            <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.69/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                            <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.69/@function/@parameter.1/@variableDeclaration/@variable.0"/>
                          </index>
                        </scope>
                        <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.1/@variable.0">
                          <index xsi:type="expressions:LiteralExpression" text="0"/>
                        </identifier>
                      </expression>
                    </initializer>
                  </variable>
                </declaration>
              </declarations>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.53/@function">
                  <argument xsi:type="expressions:ScopedIdentifierExpression">
                    <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.69/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                    <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.0/@variable.0"/>
                  </argument>
                </expression>
              </statement>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.50/@function">
                  <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.22/@variable.0">
                    <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.69/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                    <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.19/@variable.0">
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.69/@function/@parameter.0/@variableDeclaration/@variable.0"/>
                      <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.69/@function/@parameter.1/@variableDeclaration/@variable.0"/>
                    </index>
                  </argument>
                  <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.69/@function/@parameter.1/@variableDeclaration/@variable.0"/>
                </expression>
              </statement>
              <statement xsi:type="statements:IfStatement">
                <ifExpression xsi:type="expressions:CompareExpression">
                  <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.69/@function/@parameter.1/@variableDeclaration/@variable.0"/>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.1"/>
                </ifExpression>
                <thenStatement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.59/@function">
                    <argument xsi:type="expressions:ScopedIdentifierExpression">
                      <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.69/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                      <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.0/@variable.0"/>
                    </argument>
                  </expression>
                </thenStatement>
              </statement>
              <statement xsi:type="statements:IfStatement">
                <ifExpression xsi:type="expressions:CompareExpression">
                  <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.69/@function/@parameter.1/@variableDeclaration/@variable.0"/>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.2"/>
                </ifExpression>
                <thenStatement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.60/@function">
                    <argument xsi:type="expressions:ScopedIdentifierExpression">
                      <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.69/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                      <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.0/@variable.0"/>
                    </argument>
                  </expression>
                </thenStatement>
              </statement>
              <statement xsi:type="statements:IfStatement">
                <ifExpression xsi:type="expressions:CompareExpression">
                  <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.69/@function/@parameter.1/@variableDeclaration/@variable.0"/>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.3"/>
                </ifExpression>
                <thenStatement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.61/@function">
                    <argument xsi:type="expressions:ScopedIdentifierExpression">
                      <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.69/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                      <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.0/@variable.0"/>
                    </argument>
                  </expression>
                </thenStatement>
              </statement>
              <statement xsi:type="statements:IfStatement">
                <ifExpression xsi:type="expressions:CompareExpression">
                  <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.69/@function/@parameter.1/@variableDeclaration/@variable.0"/>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.4"/>
                </ifExpression>
                <thenStatement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.62/@function">
                    <argument xsi:type="expressions:ScopedIdentifierExpression">
                      <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.69/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                      <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.0/@variable.0"/>
                    </argument>
                  </expression>
                </thenStatement>
              </statement>
              <statement xsi:type="statements:IfStatement">
                <ifExpression xsi:type="expressions:CompareExpression">
                  <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.69/@function/@parameter.1/@variableDeclaration/@variable.0"/>
                  <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.5"/>
                </ifExpression>
                <thenStatement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.63/@function">
                    <argument xsi:type="expressions:ScopedIdentifierExpression">
                      <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.69/@function/@block/@statement.0/@thenStatement/@declarations/@declaration.0/@variable.0"/>
                      <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.0/@variable.0"/>
                    </argument>
                  </expression>
                </thenStatement>
              </statement>
            </thenStatement>
          </statement>
        </block>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.18/@type.0"/>
            <variable name="receiver"/>
          </variableDeclaration>
        </parameter>
        <parameter>
          <variableDeclaration xsi:type="declarations:DataVariableDeclaration">
            <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.9/@type.0"/>
            <variable name="mKind"/>
          </variableDeclaration>
        </parameter>
      </function>
    </declaration>
    <declaration xsi:type="declarations:TypeDeclaration">
      <type name="Overtaker_RANGE"/>
      <typeDefinition xsi:type="types:RangeTypeSpecification">
        <bounds>
          <lowerBound xsi:type="expressions:LiteralExpression" text="0"/>
          <upperBound xsi:type="expressions:LiteralExpression" text="0"/>
        </bounds>
      </typeDefinition>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.1/@type.0"/>
      <variable name="trigger4">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.70/@type.0"/>
        </index>
        <initializer xsi:type="declarations:ArrayInitializer">
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="0"/>
          </initializer>
        </initializer>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.1/@type.0"/>
      <variable name="trigger5">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.70/@type.0"/>
        </index>
        <initializer xsi:type="declarations:ArrayInitializer">
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="0"/>
          </initializer>
        </initializer>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:ClockVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@clock"/>
      <variable name="c1">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.70/@type.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:ClockVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@clock"/>
      <variable name="RELATIVE">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.70/@type.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:ChannelVariableDeclaration" urgent="true">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@chan"/>
      <variable name="exit_overtaking">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.70/@type.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:ChannelVariableDeclaration" urgent="true">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@chan"/>
      <variable name="enter_overtaking_in_overtaker_Role_via_overtaking_ENTRY1">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.70/@type.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:ChannelVariableDeclaration" urgent="true">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@chan"/>
      <variable name="exit_noOvertaking">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.70/@type.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:ChannelVariableDeclaration" urgent="true">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@chan"/>
      <variable name="enter_noOvertaking_in_overtaker_Role_via_noOvertaking_ENTRY2">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.70/@type.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:TypeDeclaration">
      <type name="Overtakee_RANGE"/>
      <typeDefinition xsi:type="types:RangeTypeSpecification">
        <bounds>
          <lowerBound xsi:type="expressions:LiteralExpression" text="1"/>
          <upperBound xsi:type="expressions:LiteralExpression" text="1"/>
        </bounds>
      </typeDefinition>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.1/@type.0"/>
      <variable name="speed">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.79/@type.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.1/@type.0"/>
      <variable name="trigger">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.79/@type.0"/>
        </index>
        <initializer xsi:type="declarations:ArrayInitializer">
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="0"/>
          </initializer>
        </initializer>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.1/@type.0"/>
      <variable name="trigger0">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.79/@type.0"/>
        </index>
        <initializer xsi:type="declarations:ArrayInitializer">
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="0"/>
          </initializer>
        </initializer>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.1/@type.0"/>
      <variable name="trigger1">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.79/@type.0"/>
        </index>
        <initializer xsi:type="declarations:ArrayInitializer">
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="0"/>
          </initializer>
        </initializer>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.1/@type.0"/>
      <variable name="trigger2">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.79/@type.0"/>
        </index>
        <initializer xsi:type="declarations:ArrayInitializer">
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="0"/>
          </initializer>
        </initializer>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:DataVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.1/@type.0"/>
      <variable name="trigger3">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.79/@type.0"/>
        </index>
        <initializer xsi:type="declarations:ArrayInitializer">
          <initializer xsi:type="declarations:ExpressionInitializer">
            <expression xsi:type="expressions:LiteralExpression" text="0"/>
          </initializer>
        </initializer>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:ClockVariableDeclaration">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@clock"/>
      <variable name="c2">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.79/@type.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:ChannelVariableDeclaration" urgent="true">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@chan"/>
      <variable name="exit_noAcceleration">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.79/@type.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:ChannelVariableDeclaration" urgent="true">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@chan"/>
      <variable name="enter_noAcceleration_in_overtakee_Role_via_noAcceleration_ENTRY">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.79/@type.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:ChannelVariableDeclaration" urgent="true">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@chan"/>
      <variable name="exit_noOvertaking1">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.79/@type.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:ChannelVariableDeclaration" urgent="true">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@chan"/>
      <variable name="enter_noOvertaking1_in_overtakee_Role_via_entry1_SD">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.79/@type.0"/>
        </index>
      </variable>
    </declaration>
    <declaration xsi:type="declarations:ChannelVariableDeclaration" urgent="true">
      <typeDefinition xsi:type="types:TypeReference" referredType="//@chan"/>
      <variable name="enter_noOvertaking1_in_overtakee_Role_via_noOvertaking1_ENTRY0">
        <index xsi:type="declarations:TypeIndex">
          <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.79/@type.0"/>
        </index>
      </variable>
    </declaration>
  </globalDeclarations>
  <template name="Connector" init="//@template.0/@location.0">
    <parameter>
      <variableDeclaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
        <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.18/@type.0"/>
        <variable name="sender"/>
      </variableDeclaration>
    </parameter>
    <parameter>
      <variableDeclaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
        <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.18/@type.0"/>
        <variable name="receiver"/>
      </variableDeclaration>
    </parameter>
    <parameter>
      <variableDeclaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
        <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
        <variable name="min"/>
      </variableDeclaration>
    </parameter>
    <parameter>
      <variableDeclaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
        <typeDefinition xsi:type="types:TypeReference" referredType="//@int"/>
        <variable name="max"/>
      </variableDeclaration>
    </parameter>
    <parameter>
      <variableDeclaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
        <typeDefinition xsi:type="types:TypeReference" referredType="//@bool"/>
        <variable name="loss"/>
      </variableDeclaration>
    </parameter>
    <declarations>
      <declaration xsi:type="declarations:DataVariableDeclaration">
        <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.10/@type.0"/>
        <variable name="tmp"/>
      </declaration>
    </declarations>
    <location name="Idle">
      <invariant xsi:type="expressions:LogicalExpression" operator="imply">
        <firstExpr xsi:type="expressions:CompareExpression" operator=">">
          <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
            <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.23/@variable.0">
              <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.0/@variableDeclaration/@variable.0"/>
            </scope>
            <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.0/@variable.0"/>
          </firstExpr>
          <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:CompareExpression" operator="&lt;=">
          <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.26/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.0/@variableDeclaration/@variable.0"/>
            <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.24/@variable.0">
              <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.0/@variableDeclaration/@variable.0"/>
            </index>
          </firstExpr>
          <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.3/@variableDeclaration/@variable.0"/>
        </secondExpr>
      </invariant>
    </location>
    <location name="transfer_loc" locationTimeKind="COMMITED"/>
    <edge source="//@template.0/@location.0" target="//@template.0/@location.1">
      <guard xsi:type="expressions:LogicalExpression">
        <firstExpr xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.48/@function">
          <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.23/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.0/@variableDeclaration/@variable.0"/>
          </argument>
          <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@edge.0/@selection.0/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LogicalExpression">
          <firstExpr xsi:type="expressions:CompareExpression" operator=">=">
            <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.26/@variable.0">
              <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.0/@variableDeclaration/@variable.0"/>
              <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.24/@variable.0">
                <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.0/@variableDeclaration/@variable.0"/>
              </index>
            </firstExpr>
            <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.2/@variableDeclaration/@variable.0"/>
          </firstExpr>
          <secondExpr xsi:type="expressions:CompareExpression" operator="&lt;=">
            <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.26/@variable.0">
              <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.0/@variableDeclaration/@variable.0"/>
              <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.24/@variable.0">
                <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.0/@variableDeclaration/@variable.0"/>
              </index>
            </firstExpr>
            <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.3/@variableDeclaration/@variable.0"/>
          </secondExpr>
        </secondExpr>
      </guard>
      <update xsi:type="expressions:AssignmentExpression">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@declarations/@declaration.0/@variable.0"/>
        <secondExpr xsi:type="expressions:ScopedIdentifierExpression">
          <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.23/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.0/@variableDeclaration/@variable.0"/>
          </scope>
          <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.1/@variable.0">
            <index xsi:type="expressions:LiteralExpression" text="0"/>
          </identifier>
        </secondExpr>
      </update>
      <update xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.50/@function">
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.23/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.0/@variableDeclaration/@variable.0"/>
        </argument>
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@edge.0/@selection.0/@variable.0"/>
      </update>
      <update xsi:type="expressions:ConditionExpression">
        <ifExpression xsi:type="expressions:CompareExpression">
          <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.24/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.0/@variableDeclaration/@variable.0"/>
          </firstExpr>
          <secondExpr xsi:type="expressions:ArithmeticExpression" operator="-">
            <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.6/@variable.0"/>
            <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
          </secondExpr>
        </ifExpression>
        <thenExpression xsi:type="expressions:AssignmentExpression">
          <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.24/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.0/@variableDeclaration/@variable.0"/>
          </firstExpr>
          <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
        </thenExpression>
        <elseExpression xsi:type="expressions:IncrementDecrementExpression" position="POST">
          <expression xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.24/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.0/@variableDeclaration/@variable.0"/>
          </expression>
        </elseExpression>
      </update>
      <selection>
        <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.9/@type.0"/>
        <variable name="i"/>
      </selection>
    </edge>
    <edge source="//@template.0/@location.1" target="//@template.0/@location.0">
      <guard xsi:type="expressions:CompareExpression" operator="&lt;">
        <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
          <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.22/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.1/@variableDeclaration/@variable.0"/>
            <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.19/@variable.0">
              <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.1/@variableDeclaration/@variable.0"/>
              <index xsi:type="expressions:ScopedIdentifierExpression">
                <scope xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@declarations/@declaration.0/@variable.0"/>
                <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.1/@variable.0"/>
              </index>
            </index>
          </scope>
          <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.0/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.20/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.1/@variableDeclaration/@variable.0"/>
          <index xsi:type="expressions:ScopedIdentifierExpression">
            <scope xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@declarations/@declaration.0/@variable.0"/>
            <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.1/@variable.0"/>
          </index>
        </secondExpr>
      </guard>
      <update xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.46/@function">
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.22/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.1/@variableDeclaration/@variable.0"/>
          <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.19/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.1/@variableDeclaration/@variable.0"/>
            <index xsi:type="expressions:ScopedIdentifierExpression">
              <scope xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@declarations/@declaration.0/@variable.0"/>
              <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.1/@variable.0"/>
            </index>
          </index>
        </argument>
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@declarations/@declaration.0/@variable.0"/>
      </update>
    </edge>
    <edge source="//@template.0/@location.1" target="//@template.0/@location.0">
      <guard xsi:type="expressions:CompareExpression" operator=">=">
        <firstExpr xsi:type="expressions:ScopedIdentifierExpression">
          <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.22/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.1/@variableDeclaration/@variable.0"/>
            <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.19/@variable.0">
              <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.1/@variableDeclaration/@variable.0"/>
              <index xsi:type="expressions:ScopedIdentifierExpression">
                <scope xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@declarations/@declaration.0/@variable.0"/>
                <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.1/@variable.0"/>
              </index>
            </index>
          </scope>
          <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.0/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.20/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.1/@variableDeclaration/@variable.0"/>
          <index xsi:type="expressions:ScopedIdentifierExpression">
            <scope xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@declarations/@declaration.0/@variable.0"/>
            <identifier identifier="//@globalDeclarations/@declaration.10/@typeDefinition/@declaration.1/@variable.0"/>
          </index>
        </secondExpr>
      </guard>
      <update xsi:type="expressions:AssignmentExpression">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.21/@variable.0"/>
        <secondExpr xsi:type="expressions:LiteralExpression" text="true"/>
      </update>
    </edge>
    <edge source="//@template.0/@location.1" target="//@template.0/@location.0">
      <guard xsi:type="expressions:CompareExpression">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@template.0/@parameter.4/@variableDeclaration/@variable.0"/>
        <secondExpr xsi:type="expressions:LiteralExpression" text="true"/>
      </guard>
    </edge>
  </template>
  <template name="overtaker_Role" init="//@template.1/@location.2">
    <parameter>
      <variableDeclaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
        <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.70/@type.0"/>
        <variable name="portOrRoleInstanceID"/>
      </variableDeclaration>
    </parameter>
    <declarations>
      <declaration xsi:type="declarations:DataVariableDeclaration">
        <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.10/@type.0"/>
        <variable name="msg"/>
      </declaration>
    </declarations>
    <location name="overtaker_Role_IDLE"/>
    <location name="overtaking_ACTIVE_IN_overtaker_Role">
      <invariant xsi:type="expressions:CompareExpression" operator="&lt;=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.73/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.1/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:ArithmeticExpression" operator="*">
          <firstExpr xsi:type="expressions:LiteralExpression" text="10"/>
          <secondExpr xsi:type="expressions:LiteralExpression" text="1000"/>
        </secondExpr>
      </invariant>
    </location>
    <location name="noOvertaking_ACTIVE_IN_overtaker_Role"/>
    <location name="overtaker_Role_AUX_overtaking_overtaking_ENTRY1" locationTimeKind="COMMITED"/>
    <location name="overtaker_Role_AUX_noOvertaking_noOvertaking_ENTRY2" locationTimeKind="COMMITED"/>
    <location name="exit34" locationTimeKind="COMMITED"/>
    <location name="exit25" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE0" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE1" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE2" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE3" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE4" color="LightGrey" locationTimeKind="COMMITED"/>
    <edge source="//@template.1/@location.3" target="//@template.1/@location.7">
      <update xsi:type="expressions:AssignmentExpression">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.73/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.1/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
      </update>
      <synchronization kind="!">
        <channelExpression identifier="//@globalDeclarations/@declaration.76/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.1/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.1/@location.1" target="//@template.1/@location.8">
      <guard xsi:type="expressions:CompareExpression">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.71/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.1/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </guard>
    </edge>
    <edge source="//@template.1/@location.4" target="//@template.1/@location.9">
      <synchronization kind="!">
        <channelExpression identifier="//@globalDeclarations/@declaration.78/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.1/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.1/@location.2" target="//@template.1/@location.10">
      <guard xsi:type="expressions:LogicalExpression">
        <firstExpr xsi:type="expressions:CompareExpression">
          <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.72/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.1/@parameter.0/@variableDeclaration/@variable.0"/>
          </firstExpr>
          <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.51/@function">
          <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.1/@parameter.0/@variableDeclaration/@variable.0"/>
          <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.5"/>
        </secondExpr>
      </guard>
      <update xsi:type="expressions:AssignmentExpression">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@template.1/@declarations/@declaration.0/@variable.0"/>
        <secondExpr xsi:type="expressions:ScopedIdentifierExpression">
          <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.22/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.1/@parameter.0/@variableDeclaration/@variable.0"/>
            <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.19/@variable.0">
              <index xsi:type="expressions:IdentifierExpression" identifier="//@template.1/@parameter.0/@variableDeclaration/@variable.0"/>
              <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.5"/>
            </index>
          </scope>
          <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.1/@variable.0">
            <index xsi:type="expressions:LiteralExpression" text="0"/>
          </identifier>
        </secondExpr>
      </update>
      <update xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.69/@function">
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.1/@parameter.0/@variableDeclaration/@variable.0"/>
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.5"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.0/@variable.0"/>
      </synchronization>
    </edge>
    <edge source="//@template.1/@location.6" target="//@template.1/@location.11">
      <synchronization kind="!">
        <channelExpression identifier="//@globalDeclarations/@declaration.77/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.1/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.1/@location.5" target="//@template.1/@location.12">
      <synchronization kind="!">
        <channelExpression identifier="//@globalDeclarations/@declaration.75/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.1/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.1/@location.7" target="//@template.1/@location.1"/>
    <edge source="//@template.1/@location.8" target="//@template.1/@location.5"/>
    <edge source="//@template.1/@location.9" target="//@template.1/@location.2"/>
    <edge source="//@template.1/@location.10" target="//@template.1/@location.6"/>
    <edge source="//@template.1/@location.11" target="//@template.1/@location.3"/>
    <edge source="//@template.1/@location.12" target="//@template.1/@location.4"/>
  </template>
  <template name="overtaker_overtaking" init="//@template.2/@location.0">
    <parameter>
      <variableDeclaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
        <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.70/@type.0"/>
        <variable name="portOrRoleInstanceID"/>
      </variableDeclaration>
    </parameter>
    <declarations>
      <declaration xsi:type="declarations:DataVariableDeclaration">
        <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.10/@type.0"/>
        <variable name="msg"/>
      </declaration>
    </declarations>
    <location name="overtaker_overtaking_IDLE"/>
    <location name="init_ACTIVE_IN_overtaker_overtaking"/>
    <location name="changed_ACTIVE_IN_overtaker_overtaking"/>
    <location name="INTERMEDIATE_ACTIVE_IN_overtaker_overtaking">
      <invariant xsi:type="expressions:CompareExpression" operator="&lt;=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.74/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.2/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:ArithmeticExpression" operator="*">
          <firstExpr xsi:type="expressions:LiteralExpression" text="5"/>
          <secondExpr xsi:type="expressions:LiteralExpression" text="1000"/>
        </secondExpr>
      </invariant>
    </location>
    <location name="INTERMEDIATE5" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE6" color="LightGrey" locationTimeKind="COMMITED"/>
    <edge source="//@template.2/@location.1" target="//@template.2/@location.3">
      <update xsi:type="expressions:AssignmentExpression">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.74/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.2/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.0/@variable.0"/>
      </synchronization>
    </edge>
    <edge source="//@template.2/@location.3" target="//@template.2/@location.2">
      <guard xsi:type="expressions:CompareExpression" operator=">=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.74/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.2/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:ArithmeticExpression" operator="*">
          <firstExpr xsi:type="expressions:LiteralExpression" text="5"/>
          <secondExpr xsi:type="expressions:LiteralExpression" text="1000"/>
        </secondExpr>
      </guard>
      <update xsi:type="expressions:AssignmentExpression" operator="+=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.71/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.2/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <update xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.66/@function">
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.2/@parameter.0/@variableDeclaration/@variable.0"/>
      </update>
    </edge>
    <edge source="//@template.2/@location.2" target="//@template.2/@location.4">
      <update xsi:type="expressions:AssignmentExpression" operator="-=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.71/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.2/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.75/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.2/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.2/@location.0" target="//@template.2/@location.5">
      <update xsi:type="expressions:AssignmentExpression">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.74/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.2/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.76/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.2/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.2/@location.4" target="//@template.2/@location.0"/>
    <edge source="//@template.2/@location.5" target="//@template.2/@location.1"/>
  </template>
  <template name="overtaker_noOvertaking" init="//@template.3/@location.1">
    <parameter>
      <variableDeclaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
        <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.70/@type.0"/>
        <variable name="portOrRoleInstanceID"/>
      </variableDeclaration>
    </parameter>
    <declarations>
      <declaration xsi:type="declarations:DataVariableDeclaration">
        <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.10/@type.0"/>
        <variable name="msg"/>
      </declaration>
    </declarations>
    <location name="overtaker_noOvertaking_IDLE"/>
    <location name="init_ACTIVE_IN_overtaker_noOvertaking"/>
    <location name="requested_ACTIVE_IN_overtaker_noOvertaking">
      <invariant xsi:type="expressions:CompareExpression" operator="&lt;=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.73/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.3/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:ArithmeticExpression" operator="*">
          <firstExpr xsi:type="expressions:LiteralExpression" text="7"/>
          <secondExpr xsi:type="expressions:LiteralExpression" text="1000"/>
        </secondExpr>
      </invariant>
    </location>
    <location name="INTERMEDIATE7" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE8" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE9" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE10" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE11" color="LightGrey" locationTimeKind="COMMITED"/>
    <edge source="//@template.3/@location.2" target="//@template.3/@location.3">
      <update xsi:type="expressions:AssignmentExpression" operator="-=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.72/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.3/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.77/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.3/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.3/@location.0" target="//@template.3/@location.4">
      <update xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.65/@function">
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.3/@parameter.0/@variableDeclaration/@variable.0"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.78/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.3/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.3/@location.2" target="//@template.3/@location.5">
      <guard xsi:type="expressions:CompareExpression" operator=">=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.73/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.3/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:ArithmeticExpression" operator="*">
          <firstExpr xsi:type="expressions:LiteralExpression" text="6"/>
          <secondExpr xsi:type="expressions:LiteralExpression" text="1000"/>
        </secondExpr>
      </guard>
      <update xsi:type="expressions:AssignmentExpression" operator="-=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.72/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.3/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
    </edge>
    <edge source="//@template.3/@location.2" target="//@template.3/@location.6">
      <guard xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.51/@function">
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.3/@parameter.0/@variableDeclaration/@variable.0"/>
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.4"/>
      </guard>
      <update xsi:type="expressions:AssignmentExpression">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@template.3/@declarations/@declaration.0/@variable.0"/>
        <secondExpr xsi:type="expressions:ScopedIdentifierExpression">
          <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.22/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.3/@parameter.0/@variableDeclaration/@variable.0"/>
            <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.19/@variable.0">
              <index xsi:type="expressions:IdentifierExpression" identifier="//@template.3/@parameter.0/@variableDeclaration/@variable.0"/>
              <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.4"/>
            </index>
          </scope>
          <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.1/@variable.0">
            <index xsi:type="expressions:LiteralExpression" text="0"/>
          </identifier>
        </secondExpr>
      </update>
      <update xsi:type="expressions:AssignmentExpression" operator="-=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.72/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.3/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <update xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.69/@function">
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.3/@parameter.0/@variableDeclaration/@variable.0"/>
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.4"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.0/@variable.0"/>
      </synchronization>
    </edge>
    <edge source="//@template.3/@location.1" target="//@template.3/@location.7">
      <update xsi:type="expressions:AssignmentExpression">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.73/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.3/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
      </update>
      <update xsi:type="expressions:AssignmentExpression" operator="+=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.72/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.3/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <update xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.64/@function">
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.3/@parameter.0/@variableDeclaration/@variable.0"/>
      </update>
    </edge>
    <edge source="//@template.3/@location.3" target="//@template.3/@location.0"/>
    <edge source="//@template.3/@location.4" target="//@template.3/@location.1"/>
    <edge source="//@template.3/@location.5" target="//@template.3/@location.1"/>
    <edge source="//@template.3/@location.6" target="//@template.3/@location.1"/>
    <edge source="//@template.3/@location.7" target="//@template.3/@location.2"/>
  </template>
  <template name="overtakee_Role" init="//@template.4/@location.2">
    <parameter>
      <variableDeclaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
        <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.79/@type.0"/>
        <variable name="portOrRoleInstanceID"/>
      </variableDeclaration>
    </parameter>
    <declarations>
      <declaration xsi:type="declarations:DataVariableDeclaration">
        <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.10/@type.0"/>
        <variable name="msg"/>
      </declaration>
    </declarations>
    <location name="overtakee_Role_IDLE"/>
    <location name="noAcceleration_ACTIVE_IN_overtakee_Role"/>
    <location name="noOvertaking1_ACTIVE_IN_overtakee_Role"/>
    <location name="overtakee_Role_AUX_noAcceleration_noAcceleration_ENTRY" locationTimeKind="COMMITED"/>
    <location name="overtakee_Role_AUX_noOvertaking1_entry1_SD" locationTimeKind="COMMITED"/>
    <location name="overtakee_Role_AUX_noOvertaking1_noOvertaking1_ENTRY0" locationTimeKind="COMMITED"/>
    <location name="noAcceleration_EXIT" locationTimeKind="COMMITED"/>
    <location name="noAcceleration_EXIT0" locationTimeKind="COMMITED"/>
    <location name="noAcceleration_EXIT01" locationTimeKind="COMMITED"/>
    <location name="noAcceleration_EXIT02" locationTimeKind="COMMITED"/>
    <location name="exit13" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE12" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE13" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE14" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE15" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE16" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE17" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE18" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE19" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE20" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE21" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE22" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE23" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE24" color="LightGrey" locationTimeKind="COMMITED"/>
    <edge source="//@template.4/@location.3" target="//@template.4/@location.11">
      <synchronization kind="!">
        <channelExpression identifier="//@globalDeclarations/@declaration.88/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.4/@location.1" target="//@template.4/@location.12">
      <guard xsi:type="expressions:LogicalExpression">
        <firstExpr xsi:type="expressions:CompareExpression">
          <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.81/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
          </firstExpr>
          <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.51/@function">
          <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
          <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.1"/>
        </secondExpr>
      </guard>
      <update xsi:type="expressions:AssignmentExpression">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@declarations/@declaration.0/@variable.0"/>
        <secondExpr xsi:type="expressions:ScopedIdentifierExpression">
          <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.22/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
            <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.19/@variable.0">
              <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
              <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.1"/>
            </index>
          </scope>
          <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.1/@variable.0">
            <index xsi:type="expressions:LiteralExpression" text="0"/>
          </identifier>
        </secondExpr>
      </update>
      <update xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.69/@function">
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.1"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.0/@variable.0"/>
      </synchronization>
    </edge>
    <edge source="//@template.4/@location.1" target="//@template.4/@location.13">
      <guard xsi:type="expressions:LogicalExpression">
        <firstExpr xsi:type="expressions:CompareExpression">
          <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.82/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
          </firstExpr>
          <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.51/@function">
          <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
          <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.1"/>
        </secondExpr>
      </guard>
      <update xsi:type="expressions:AssignmentExpression">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@declarations/@declaration.0/@variable.0"/>
        <secondExpr xsi:type="expressions:ScopedIdentifierExpression">
          <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.22/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
            <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.19/@variable.0">
              <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
              <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.1"/>
            </index>
          </scope>
          <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.1/@variable.0">
            <index xsi:type="expressions:LiteralExpression" text="0"/>
          </identifier>
        </secondExpr>
      </update>
      <update xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.69/@function">
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.1"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.0/@variable.0"/>
      </synchronization>
    </edge>
    <edge source="//@template.4/@location.1" target="//@template.4/@location.14">
      <guard xsi:type="expressions:LogicalExpression">
        <firstExpr xsi:type="expressions:CompareExpression">
          <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.83/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
          </firstExpr>
          <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.51/@function">
          <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
          <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.2"/>
        </secondExpr>
      </guard>
      <update xsi:type="expressions:AssignmentExpression">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@declarations/@declaration.0/@variable.0"/>
        <secondExpr xsi:type="expressions:ScopedIdentifierExpression">
          <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.22/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
            <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.19/@variable.0">
              <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
              <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.2"/>
            </index>
          </scope>
          <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.1/@variable.0">
            <index xsi:type="expressions:LiteralExpression" text="0"/>
          </identifier>
        </secondExpr>
      </update>
      <update xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.69/@function">
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.2"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.0/@variable.0"/>
      </synchronization>
    </edge>
    <edge source="//@template.4/@location.1" target="//@template.4/@location.15">
      <guard xsi:type="expressions:LogicalExpression">
        <firstExpr xsi:type="expressions:CompareExpression">
          <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.84/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
          </firstExpr>
          <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.51/@function">
          <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
          <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.2"/>
        </secondExpr>
      </guard>
      <update xsi:type="expressions:AssignmentExpression">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@declarations/@declaration.0/@variable.0"/>
        <secondExpr xsi:type="expressions:ScopedIdentifierExpression">
          <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.22/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
            <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.19/@variable.0">
              <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
              <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.2"/>
            </index>
          </scope>
          <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.1/@variable.0">
            <index xsi:type="expressions:LiteralExpression" text="0"/>
          </identifier>
        </secondExpr>
      </update>
      <update xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.69/@function">
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.2"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.0/@variable.0"/>
      </synchronization>
    </edge>
    <edge source="//@template.4/@location.4" target="//@template.4/@location.16">
      <synchronization kind="!">
        <channelExpression identifier="//@globalDeclarations/@declaration.90/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.4/@location.5" target="//@template.4/@location.17">
      <synchronization kind="!">
        <channelExpression identifier="//@globalDeclarations/@declaration.91/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.4/@location.2" target="//@template.4/@location.18">
      <guard xsi:type="expressions:CompareExpression">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.85/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </guard>
    </edge>
    <edge source="//@template.4/@location.10" target="//@template.4/@location.19">
      <synchronization kind="!">
        <channelExpression identifier="//@globalDeclarations/@declaration.89/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.4/@location.6" target="//@template.4/@location.20">
      <synchronization kind="!">
        <channelExpression identifier="//@globalDeclarations/@declaration.87/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.4/@location.7" target="//@template.4/@location.21">
      <synchronization kind="!">
        <channelExpression identifier="//@globalDeclarations/@declaration.87/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.4/@location.8" target="//@template.4/@location.22">
      <synchronization kind="!">
        <channelExpression identifier="//@globalDeclarations/@declaration.87/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.4/@location.9" target="//@template.4/@location.23">
      <synchronization kind="!">
        <channelExpression identifier="//@globalDeclarations/@declaration.87/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.4/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.4/@location.11" target="//@template.4/@location.1"/>
    <edge source="//@template.4/@location.12" target="//@template.4/@location.6"/>
    <edge source="//@template.4/@location.13" target="//@template.4/@location.7"/>
    <edge source="//@template.4/@location.14" target="//@template.4/@location.8"/>
    <edge source="//@template.4/@location.15" target="//@template.4/@location.9"/>
    <edge source="//@template.4/@location.16" target="//@template.4/@location.2"/>
    <edge source="//@template.4/@location.17" target="//@template.4/@location.2"/>
    <edge source="//@template.4/@location.18" target="//@template.4/@location.10"/>
    <edge source="//@template.4/@location.19" target="//@template.4/@location.3"/>
    <edge source="//@template.4/@location.20" target="//@template.4/@location.4"/>
    <edge source="//@template.4/@location.21" target="//@template.4/@location.4"/>
    <edge source="//@template.4/@location.22" target="//@template.4/@location.5"/>
    <edge source="//@template.4/@location.23" target="//@template.4/@location.5"/>
  </template>
  <template name="overtakee_noAcceleration" init="//@template.5/@location.0">
    <parameter>
      <variableDeclaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
        <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.79/@type.0"/>
        <variable name="portOrRoleInstanceID"/>
      </variableDeclaration>
    </parameter>
    <declarations>
      <declaration xsi:type="declarations:DataVariableDeclaration">
        <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.10/@type.0"/>
        <variable name="msg"/>
      </declaration>
    </declarations>
    <location name="overtakee_noAcceleration_IDLE"/>
    <location name="noBraking_ACTIVE_IN_overtakee_noAcceleration"/>
    <location name="brakingAllowed_ACTIVE_IN_overtakee_noAcceleration"/>
    <location name="INTERMEDIATE25" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE26" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE27" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE28" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE29" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE30" color="LightGrey" locationTimeKind="COMMITED"/>
    <edge source="//@template.5/@location.1" target="//@template.5/@location.3">
      <update xsi:type="expressions:AssignmentExpression" operator="-=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.81/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <update xsi:type="expressions:AssignmentExpression" operator="-=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.83/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.87/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.5/@location.1" target="//@template.5/@location.4">
      <update xsi:type="expressions:AssignmentExpression" operator="-=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.81/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <update xsi:type="expressions:AssignmentExpression" operator="-=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.83/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.87/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.5/@location.2" target="//@template.5/@location.5">
      <update xsi:type="expressions:AssignmentExpression" operator="-=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.82/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <update xsi:type="expressions:AssignmentExpression" operator="-=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.84/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.87/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.5/@location.2" target="//@template.5/@location.6">
      <update xsi:type="expressions:AssignmentExpression" operator="-=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.82/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <update xsi:type="expressions:AssignmentExpression" operator="-=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.84/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.87/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.5/@location.0" target="//@template.5/@location.7">
      <update xsi:type="expressions:AssignmentExpression" operator="+=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.81/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <update xsi:type="expressions:AssignmentExpression" operator="+=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.83/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <update xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.68/@function">
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.88/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.5/@location.1" target="//@template.5/@location.8">
      <guard xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.51/@function">
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.3"/>
      </guard>
      <update xsi:type="expressions:AssignmentExpression">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@declarations/@declaration.0/@variable.0"/>
        <secondExpr xsi:type="expressions:ScopedIdentifierExpression">
          <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.22/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
            <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.19/@variable.0">
              <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
              <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.3"/>
            </index>
          </scope>
          <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.1/@variable.0">
            <index xsi:type="expressions:LiteralExpression" text="0"/>
          </identifier>
        </secondExpr>
      </update>
      <update xsi:type="expressions:AssignmentExpression" operator="-=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.81/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <update xsi:type="expressions:AssignmentExpression" operator="+=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.82/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <update xsi:type="expressions:AssignmentExpression" operator="-=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.83/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <update xsi:type="expressions:AssignmentExpression" operator="+=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.84/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <update xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.69/@function">
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.5/@parameter.0/@variableDeclaration/@variable.0"/>
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.3"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.0/@variable.0"/>
      </synchronization>
    </edge>
    <edge source="//@template.5/@location.3" target="//@template.5/@location.0"/>
    <edge source="//@template.5/@location.4" target="//@template.5/@location.0"/>
    <edge source="//@template.5/@location.5" target="//@template.5/@location.0"/>
    <edge source="//@template.5/@location.6" target="//@template.5/@location.0"/>
    <edge source="//@template.5/@location.7" target="//@template.5/@location.1"/>
    <edge source="//@template.5/@location.8" target="//@template.5/@location.2"/>
  </template>
  <template name="overtakee_noOvertaking" init="//@template.6/@location.1">
    <parameter>
      <variableDeclaration xsi:type="declarations:DataVariableDeclaration" prefix="const">
        <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.79/@type.0"/>
        <variable name="portOrRoleInstanceID"/>
      </variableDeclaration>
    </parameter>
    <declarations>
      <declaration xsi:type="declarations:DataVariableDeclaration">
        <typeDefinition xsi:type="types:TypeReference" referredType="//@globalDeclarations/@declaration.10/@type.0"/>
        <variable name="msg"/>
      </declaration>
    </declarations>
    <location name="overtakee_noOvertaking_IDLE"/>
    <location name="init1_ACTIVE_IN_overtakee_noOvertaking"/>
    <location name="received_ACTIVE_IN_overtakee_noOvertaking">
      <invariant xsi:type="expressions:CompareExpression" operator="&lt;=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.86/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.6/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:ArithmeticExpression" operator="*">
          <firstExpr xsi:type="expressions:LiteralExpression" text="3"/>
          <secondExpr xsi:type="expressions:LiteralExpression" text="1000"/>
        </secondExpr>
      </invariant>
    </location>
    <location name="INTERMEDIATE31" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE32" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE33" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE34" color="LightGrey" locationTimeKind="COMMITED"/>
    <location name="INTERMEDIATE35" color="LightGrey" locationTimeKind="COMMITED"/>
    <edge source="//@template.6/@location.2" target="//@template.6/@location.3">
      <update xsi:type="expressions:AssignmentExpression" operator="-=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.85/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.6/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.89/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.6/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.6/@location.0" target="//@template.6/@location.4">
      <update xsi:type="expressions:AssignmentExpression">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.86/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.6/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
      </update>
      <update xsi:type="expressions:AssignmentExpression" operator="+=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.85/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.6/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.90/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.6/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.6/@location.0" target="//@template.6/@location.5">
      <update xsi:type="expressions:AssignmentExpression">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.86/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.6/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.91/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.6/@parameter.0/@variableDeclaration/@variable.0"/>
        </channelExpression>
      </synchronization>
    </edge>
    <edge source="//@template.6/@location.2" target="//@template.6/@location.6">
      <update xsi:type="expressions:AssignmentExpression" operator="-=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.85/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.6/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <update xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.67/@function">
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.6/@parameter.0/@variableDeclaration/@variable.0"/>
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.80/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.6/@parameter.0/@variableDeclaration/@variable.0"/>
        </argument>
      </update>
    </edge>
    <edge source="//@template.6/@location.1" target="//@template.6/@location.7">
      <guard xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.51/@function">
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.6/@parameter.0/@variableDeclaration/@variable.0"/>
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.1"/>
      </guard>
      <update xsi:type="expressions:AssignmentExpression">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.86/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.6/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="0"/>
      </update>
      <update xsi:type="expressions:AssignmentExpression">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@template.6/@declarations/@declaration.0/@variable.0"/>
        <secondExpr xsi:type="expressions:ScopedIdentifierExpression">
          <scope xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.22/@variable.0">
            <index xsi:type="expressions:IdentifierExpression" identifier="//@template.6/@parameter.0/@variableDeclaration/@variable.0"/>
            <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.19/@variable.0">
              <index xsi:type="expressions:IdentifierExpression" identifier="//@template.6/@parameter.0/@variableDeclaration/@variable.0"/>
              <index xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.1"/>
            </index>
          </scope>
          <identifier identifier="//@globalDeclarations/@declaration.11/@typeDefinition/@declaration.1/@variable.0">
            <index xsi:type="expressions:LiteralExpression" text="0"/>
          </identifier>
        </secondExpr>
      </update>
      <update xsi:type="expressions:AssignmentExpression" operator="+=">
        <firstExpr xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.85/@variable.0">
          <index xsi:type="expressions:IdentifierExpression" identifier="//@template.6/@parameter.0/@variableDeclaration/@variable.0"/>
        </firstExpr>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1"/>
      </update>
      <update xsi:type="expressions:FunctionCallExpression" function="//@globalDeclarations/@declaration.69/@function">
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@template.6/@parameter.0/@variableDeclaration/@variable.0"/>
        <argument xsi:type="expressions:IdentifierExpression" identifier="//@globalDeclarations/@declaration.27/@variable.1"/>
      </update>
      <synchronization>
        <channelExpression identifier="//@globalDeclarations/@declaration.0/@variable.0"/>
      </synchronization>
    </edge>
    <edge source="//@template.6/@location.3" target="//@template.6/@location.0"/>
    <edge source="//@template.6/@location.4" target="//@template.6/@location.2"/>
    <edge source="//@template.6/@location.5" target="//@template.6/@location.1"/>
    <edge source="//@template.6/@location.6" target="//@template.6/@location.1"/>
    <edge source="//@template.6/@location.7" target="//@template.6/@location.2"/>
  </template>
  <template name="UrgencyProvider" init="//@template.7/@location.0">
    <location name="idle"/>
    <edge source="//@template.7/@location.0" target="//@template.7/@location.0">
      <synchronization kind="!">
        <channelExpression identifier="//@globalDeclarations/@declaration.0/@variable.0"/>
      </synchronization>
    </edge>
  </template>
  <systemDeclarations>
    <declaration xsi:type="system:TemplateDeclaration">
      <declaredTemplate name="overtaker_Role_0" referredTemplate="//@template.1"/>
      <argument xsi:type="expressions:LiteralExpression" text="0"/>
    </declaration>
    <declaration xsi:type="system:TemplateDeclaration">
      <declaredTemplate name="overtaker_overtaking_0" referredTemplate="//@template.2"/>
      <argument xsi:type="expressions:LiteralExpression" text="0"/>
    </declaration>
    <declaration xsi:type="system:TemplateDeclaration">
      <declaredTemplate name="overtaker_noOvertaking_0" referredTemplate="//@template.3"/>
      <argument xsi:type="expressions:LiteralExpression" text="0"/>
    </declaration>
    <declaration xsi:type="system:TemplateDeclaration">
      <declaredTemplate name="overtakee_Role_1" referredTemplate="//@template.4"/>
      <argument xsi:type="expressions:LiteralExpression" text="1"/>
    </declaration>
    <declaration xsi:type="system:TemplateDeclaration">
      <declaredTemplate name="overtakee_noAcceleration_1" referredTemplate="//@template.5"/>
      <argument xsi:type="expressions:LiteralExpression" text="1"/>
    </declaration>
    <declaration xsi:type="system:TemplateDeclaration">
      <declaredTemplate name="overtakee_noOvertaking_1" referredTemplate="//@template.6"/>
      <argument xsi:type="expressions:LiteralExpression" text="1"/>
    </declaration>
    <declaration xsi:type="system:TemplateDeclaration">
      <declaredTemplate name="Connector_0_1" referredTemplate="//@template.0"/>
      <argument xsi:type="expressions:LiteralExpression" text="0"/>
      <argument xsi:type="expressions:LiteralExpression" text="1"/>
      <argument xsi:type="expressions:ArithmeticExpression" operator="*">
        <firstExpr xsi:type="expressions:LiteralExpression" text="1"/>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1000"/>
      </argument>
      <argument xsi:type="expressions:ArithmeticExpression" operator="*">
        <firstExpr xsi:type="expressions:LiteralExpression" text="1"/>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1000"/>
      </argument>
      <argument xsi:type="expressions:LiteralExpression" text="false"/>
    </declaration>
    <declaration xsi:type="system:TemplateDeclaration">
      <declaredTemplate name="Connector_1_0" referredTemplate="//@template.0"/>
      <argument xsi:type="expressions:LiteralExpression" text="1"/>
      <argument xsi:type="expressions:LiteralExpression" text="0"/>
      <argument xsi:type="expressions:ArithmeticExpression" operator="*">
        <firstExpr xsi:type="expressions:LiteralExpression" text="1"/>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1000"/>
      </argument>
      <argument xsi:type="expressions:ArithmeticExpression" operator="*">
        <firstExpr xsi:type="expressions:LiteralExpression" text="1"/>
        <secondExpr xsi:type="expressions:LiteralExpression" text="1000"/>
      </argument>
      <argument xsi:type="expressions:LiteralExpression" text="false"/>
    </declaration>
    <system>
      <instantiationList template="//@systemDeclarations/@declaration.6/@declaredTemplate //@systemDeclarations/@declaration.7/@declaredTemplate //@systemDeclarations/@declaration.3/@declaredTemplate //@systemDeclarations/@declaration.4/@declaredTemplate //@systemDeclarations/@declaration.5/@declaredTemplate //@systemDeclarations/@declaration.0/@declaredTemplate //@systemDeclarations/@declaration.2/@declaredTemplate //@systemDeclarations/@declaration.1/@declaredTemplate //@template.7"/>
    </system>
  </systemDeclarations>
  <int name="int"/>
  <bool name="bool" type="bool"/>
  <clock name="clock" type="clock"/>
  <chan name="chan" type="chan"/>
  <void name="void" type="void"/>
</uppaal:NTA>
