/*
 * generated by Xtext
 */
package org.muml.pim.actionlanguage.xtext;

import org.eclipse.xtext.scoping.IScopeProvider;
import org.muml.pim.actionlanguage.xtext.naming.CustomNameProvider;
import org.muml.pim.actionlanguage.xtext.scoping.ActionLanguageScopeProvider;
import org.muml.pim.actionlanguage.xtext.scoping.ActionLanguageScopeProviderFactory;
import org.muml.pim.actionlanguage.xtext.scoping.IActionLanguageScopeProvider;

import com.google.inject.Binder;
import com.google.inject.Provider;



/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
public class ActionLanguageRuntimeModule extends org.muml.pim.actionlanguage.xtext.AbstractActionLanguageRuntimeModule {
	
	public Provider<IScopeProvider> provideIScopeProvider() {
		return new ActionLanguageScopeProviderFactory();
	}
	
	public Class<? extends org.eclipse.xtext.scoping.IScopeProvider> bindIScopeProvider() {
		return null;
	}
	
	@Override
	public Class<? extends org.eclipse.xtext.naming.IQualifiedNameProvider> bindIQualifiedNameProvider() {
		return CustomNameProvider.class;
	}
	
	public Class<? extends IActionLanguageScopeProvider> bindIActionLanguageScopeProvider() {
		return ActionLanguageScopeProvider.class;
	}
	
	@Override
	public void configure(Binder binder) {
		super.configure(binder);
		binder.requestStaticInjection(ActionLanguageScopeProviderFactory.class);
	}

}
