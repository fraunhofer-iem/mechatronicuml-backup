import normalisations;
modeltype ecore uses 'http://www.eclipse.org/emf/2002/Ecore';
modeltype rtsc2 uses pim::realtimestatechart('http://www.muml.org/pim/1.0.0');
modeltype common uses core::expressions::common('http://www.muml.org/core/1.0.0');
modeltype expressions uses core::expressions('http://www.muml.org/core/1.0.0');
modeltype behavior uses pim::behavior('http://www.muml.org/pim/1.0.0');
modeltype actionLanguage uses 'http://www.muml.org/pim/actionlanguage/1.0.0';
modeltype valuetype uses pim::valuetype('http://www.muml.org/pim/1.0.0');
modeltype protocol uses pim::protocol('http://www.muml.org/pim/1.0.0');
modeltype storydriven uses 'http://www.muml.org/core/1.0.0';
modeltype modelinstance uses modelinstance('http://www.muml.org/core/modelinstance/1.0.0');
modeltype schemata uses pim::realtimestatechart::one_to_n_schemata('http://www.muml.org/pim/1.0.0');
modeltype types uses pim::types('http://www.muml.org/pim/1.0.0');


transformation NormalizationTest(inout input : modelinstance);

main() {
	var root : RootNode := input.rootObjects()[RootNode]->any(true);
	var rtscCategory : ModelElementCategory := root.categories-> select(c : ModelElementCategory | c.key = 'org.muml.realtimestatechart.category')-> any(true);
	var current : RealtimeStatechart :=  	rtscCategory.modelElements->at(1).oclAsType(RealtimeStatechart);

	normalize(current);
	
}
