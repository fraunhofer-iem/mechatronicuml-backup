import PostReconcileLibrary;
modeltype GMFGEN uses gmfgen('http://www.eclipse.org/gmf/2009/GenModel');


transformation settings(inout gmfgen : GMFGEN);
	-- extends transformation common...

-- TODO: call /de.uni_paderborn.fujaba.common/transformations/settings.qvto

main() {
	gmfgen.rootObjects()![GenEditorGenerator]->map settings();
}

mapping inout GenEditorGenerator::settings() {
	self->map general("realtimestatechart_diagram","Realtime Statechart Diagram Editor");
	self->map editorSpecific();
}


mapping inout GenEditorGenerator::editorSpecific() {
	-- put settings here, that are often lost to apply them permanently
	self.diagram.compartments->select(c | c.editPartClassName = 'RegionRegionContentsCompartmentEditPart')->map listLayout(true);
	self.diagram.childNodes[GenChildSideAffixedNode]->select(n | n.editPartClassName = 'EntryPointEditPart' or n.editPartClassName = 'ExitPointEditPart')->map connectionPoint();

	var nodes := self.diagram.childNodes[GenNode]->union(self.diagram.topLevelNodes);
	nodes->forEach(node) {
		if (node.modelFacet.metaClass.ecoreClass.name = 'State') then {
			node->map behavior('de.uni_paderborn.fujaba.muml.common.edit.policies.EditPolicyRoles.STATE_COLOR_ROLE', 'de.uni_paderborn.fujaba.muml.realtimestatechart.diagram.edit.policies.statechart.StateColorEditPolicy');
			node->map behavior('de.uni_paderborn.fujaba.muml.common.edit.policies.EditPolicyRoles.STATE_VISUALIZATION_ROLE', 'de.uni_paderborn.fujaba.muml.common.edit.policies.statechart.StateEditPolicy');
		} endif;
	};

}

mapping inout GenNode::behavior(key : String, value : String) {
	if (behaviour[CustomBehaviour]->select(cb | cb.key = key)->isEmpty()) then {
		behaviour += new CustomBehaviour(key, value);
	} endif;
}


constructor CustomBehaviour::CustomBehaviour(k : String, editPolicy : String) {
	key := k;
	editPolicyQualifiedClassName := editPolicy;
}

mapping inout GenCompartment::listLayout(value : Boolean) {
	self.listLayout := value;
}


mapping inout GenChildSideAffixedNode::connectionPoint() {
	-- self.behaviour[CustomBehaviour]->reject(b | b.key = 'de.uni_paderborn.fujaba.muml.common.edit.policies.ports.ConnectionPointEditPolicy.CONNECTION_POINT_VISUALIZATION_ROLE');
	-- self.behaviour += new CustomBehaviour('de.uni_paderborn.fujaba.muml.common.edit.policies.ports.ConnectionPointEditPolicy.CONNECTION_POINT_VISUALIZATION_ROLE', 'de.uni_paderborn.fujaba.muml.common.edit.policies.ports.ConnectionPointEditPolicy');
}

--constructor CustomBehaviour::CustomBehaviour(_key : String, editPolicy : String) {
--	key := _key;
--	editPolicyQualifiedClassName := editPolicy;
--}