import normalisations;
modeltype ecore uses 'http://www.eclipse.org/emf/2002/Ecore';
modeltype rtsc2 uses muml::realtimestatechart('http://www.fujaba.de/muml/0.4.0');
modeltype common uses core::expressions::common('http://www.storydriven.org/core/0.3.1');
modeltype expressions uses core::expressions('http://www.storydriven.org/core/0.3.1');
modeltype behavior uses muml::behavior('http://www.fujaba.de/muml/0.4.0');
modeltype actionLanguage uses 'http://www.fujaba.de/muml/actionlanguage/0.4.0';
modeltype valuetype uses muml::valuetype('http://www.fujaba.de/muml/0.4.0');
modeltype protocol uses muml::protocol('http://www.fujaba.de/muml/0.4.0');
modeltype storydriven uses 'http://www.storydriven.org/core/0.3.1';
modeltype modelinstance uses modelinstance('http://www.fujaba.de/modelinstance/0.4.0');
modeltype schemata uses muml::realtimestatechart::one_to_n_schemata('http://www.fujaba.de/muml/0.4.0');
modeltype types uses muml::types('http://www.fujaba.de/muml/0.4.0');


transformation NormalizationTest(inout input : modelinstance);

main() {
	var root : RootNode := input.rootObjects()[RootNode]->any(true);
	var rtscCategory : ModelElementCategory := root.categories-> select(c : ModelElementCategory | c.key = 'de.uni_paderborn.fujaba.muml.realtimestatechart.category')-> any(true);
	var current : RealtimeStatechart :=  	rtscCategory.modelElements->at(1).oclAsType(RealtimeStatechart);

	normalizeTransformationThatUseTwoSchemata(current);
	
}
