import PostReconcileLibrary;
modeltype GMFGEN uses gmfgen('http://www.eclipse.org/gmf/2009/GenModel');

transformation settings(inout gmfgen : GMFGEN);
	-- extends transformation common...

-- TODO: call /de.uni_paderborn.fujaba.common/transformations/settings.qvto

main() {
	gmfgen.rootObjects()![GenEditorGenerator]->map settings();
}

mapping inout GenEditorGenerator::settings() {
	self->map general("component_diagram","Component Diagram Editor");
	self->map editorSpecific();
}



mapping inout GenEditorGenerator::editorSpecific() {
	var key = 'de.uni_paderborn.fujaba.muml.common.edit.policies.EditPolicyRoles.COMPONENT_COLOR_ROLE';
	var nodes := self.diagram.childNodes[GenNode]->union(self.diagram.topLevelNodes);
	nodes->forEach(node) {
		if (node.modelFacet.metaClass.ecoreClass.name = 'ComponentPart' or
		    	node.modelFacet.metaClass.ecoreClass.name = 'StaticStructuredComponent' or
		    	node.modelFacet.metaClass.ecoreClass.name = 'StaticAtomicComponent') then {
			if (node.behaviour[CustomBehaviour]->select(cb | cb.key = key)->isEmpty()) then {
				node.behaviour += new CustomBehaviour(key, 'de.uni_paderborn.fujaba.muml.common.edit.policies.component.ComponentColorEditPolicy');
			} endif;
		} endif;
	};
}

constructor CustomBehaviour::CustomBehaviour(k : String, editPolicy : String) {
	key := k;
	editPolicyQualifiedClassName := editPolicy;
}