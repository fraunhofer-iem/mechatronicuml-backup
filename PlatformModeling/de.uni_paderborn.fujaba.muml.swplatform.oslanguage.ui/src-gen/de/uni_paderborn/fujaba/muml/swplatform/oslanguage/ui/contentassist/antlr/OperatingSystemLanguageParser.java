/*
* generated by Xtext
*/
package de.uni_paderborn.fujaba.muml.swplatform.oslanguage.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.uni_paderborn.fujaba.muml.swplatform.oslanguage.services.OperatingSystemLanguageGrammarAccess;

public class OperatingSystemLanguageParser extends AbstractContentAssistParser {
	
	@Inject
	private OperatingSystemLanguageGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.uni_paderborn.fujaba.muml.swplatform.oslanguage.ui.contentassist.antlr.internal.InternalOperatingSystemLanguageParser createParser() {
		de.uni_paderborn.fujaba.muml.swplatform.oslanguage.ui.contentassist.antlr.internal.InternalOperatingSystemLanguageParser result = new de.uni_paderborn.fujaba.muml.swplatform.oslanguage.ui.contentassist.antlr.internal.InternalOperatingSystemLanguageParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getOperatingSystemAccess().getAlternatives_4(), "rule__OperatingSystem__Alternatives_4");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getTimeUnitExprAccess().getAlternatives(), "rule__TimeUnitExpr__Alternatives");
					put(grammarAccess.getOperatingSystemAccess().getGroup(), "rule__OperatingSystem__Group__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getAPIRepositoryAccess().getGroup(), "rule__APIRepository__Group__0");
					put(grammarAccess.getEnumerationDataTypeAccess().getGroup(), "rule__EnumerationDataType__Group__0");
					put(grammarAccess.getEnumerationDataTypeAccess().getGroup_3(), "rule__EnumerationDataType__Group_3__0");
					put(grammarAccess.getEnumerationDataTypeAccess().getGroup_3_1(), "rule__EnumerationDataType__Group_3_1__0");
					put(grammarAccess.getAPICommandAccess().getGroup(), "rule__APICommand__Group__0");
					put(grammarAccess.getAPICommandAccess().getGroup_3(), "rule__APICommand__Group_3__0");
					put(grammarAccess.getAPICommandAccess().getGroup_3_1(), "rule__APICommand__Group_3_1__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getTimeConstraintAccess().getGroup(), "rule__TimeConstraint__Group__0");
					put(grammarAccess.getTimeValueAccess().getGroup(), "rule__TimeValue__Group__0");
					put(grammarAccess.getOperatingSystemAccess().getImportsAssignment_0(), "rule__OperatingSystem__ImportsAssignment_0");
					put(grammarAccess.getOperatingSystemAccess().getNameAssignment_2(), "rule__OperatingSystem__NameAssignment_2");
					put(grammarAccess.getOperatingSystemAccess().getApirepositoriesAssignment_4_0(), "rule__OperatingSystem__ApirepositoriesAssignment_4_0");
					put(grammarAccess.getOperatingSystemAccess().getEnumerationDataTypesAssignment_4_1(), "rule__OperatingSystem__EnumerationDataTypesAssignment_4_1");
					put(grammarAccess.getImportAccess().getImportURIAssignment_1(), "rule__Import__ImportURIAssignment_1");
					put(grammarAccess.getAPIRepositoryAccess().getNameAssignment_1(), "rule__APIRepository__NameAssignment_1");
					put(grammarAccess.getAPIRepositoryAccess().getApiCommandsAssignment_3(), "rule__APIRepository__ApiCommandsAssignment_3");
					put(grammarAccess.getEnumerationDataTypeAccess().getNameAssignment_1(), "rule__EnumerationDataType__NameAssignment_1");
					put(grammarAccess.getEnumerationDataTypeAccess().getEnumerationValuesAssignment_3_0(), "rule__EnumerationDataType__EnumerationValuesAssignment_3_0");
					put(grammarAccess.getEnumerationDataTypeAccess().getEnumerationValuesAssignment_3_1_1(), "rule__EnumerationDataType__EnumerationValuesAssignment_3_1_1");
					put(grammarAccess.getAPICommandAccess().getReturnDataTypeAssignment_0(), "rule__APICommand__ReturnDataTypeAssignment_0");
					put(grammarAccess.getAPICommandAccess().getNameAssignment_1(), "rule__APICommand__NameAssignment_1");
					put(grammarAccess.getAPICommandAccess().getParametersAssignment_3_0(), "rule__APICommand__ParametersAssignment_3_0");
					put(grammarAccess.getAPICommandAccess().getParametersAssignment_3_1_1(), "rule__APICommand__ParametersAssignment_3_1_1");
					put(grammarAccess.getAPICommandAccess().getConstraintsAssignment_5(), "rule__APICommand__ConstraintsAssignment_5");
					put(grammarAccess.getParameterAccess().getDataTypeAssignment_0(), "rule__Parameter__DataTypeAssignment_0");
					put(grammarAccess.getParameterAccess().getNameAssignment_1(), "rule__Parameter__NameAssignment_1");
					put(grammarAccess.getEnumerationValueAccess().getValueAssignment(), "rule__EnumerationValue__ValueAssignment");
					put(grammarAccess.getTimeConstraintAccess().getSamplingTimeAssignment_1(), "rule__TimeConstraint__SamplingTimeAssignment_1");
					put(grammarAccess.getTimeValueAccess().getValueAssignment_0(), "rule__TimeValue__ValueAssignment_0");
					put(grammarAccess.getTimeValueAccess().getUnitAssignment_1(), "rule__TimeValue__UnitAssignment_1");
					put(grammarAccess.getINTExpressionAccess().getValueAssignment(), "rule__INTExpression__ValueAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.uni_paderborn.fujaba.muml.swplatform.oslanguage.ui.contentassist.antlr.internal.InternalOperatingSystemLanguageParser typedParser = (de.uni_paderborn.fujaba.muml.swplatform.oslanguage.ui.contentassist.antlr.internal.InternalOperatingSystemLanguageParser) parser;
			typedParser.entryRuleOperatingSystem();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public OperatingSystemLanguageGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(OperatingSystemLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
