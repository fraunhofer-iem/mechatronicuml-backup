testSpecificationName {
	import 'http://www.muml.org/psm/allocation/algorithm/ilp/tests/extension/1.0.0'
	
	constraint resource test {
		lhs memNeeded;
		rhs memProvided;
		descriptors (first, second);
		ocl let componentSet : Set(pim::instance::ComponentInstance) = self.componentInstanceConfiguration.componentInstances->select(extensions->exists(oclIsKindOf(extension::MemoryExtension)))
		in
		let e1 : hardware::hwresourceinstance::ResourceInstance = self.hardwarePlatformInstanceConfiguration.resources->any(name='e1')
		in
		Set{Tuple{
				memNeeded=componentSet->collect(c |
						Tuple{first=c, second=e1, memNeeded : Real = c.extensions->any(oclIsKindOf(extension::MemoryExtension)).oclAsType(extension::MemoryExtension).amountNeeded}
					)->asSet(),
					memProvided : Real = 128 -- too lazy to retrieve it from e1 (just hardcoded an arbitrary value)
			}
		}->asSet();
	}
}
