«REM» Error toFirstUpper can be ignored «ENDREM»
«IMPORT properties»
«EXTENSION Metamodel»

«DEFINE Section FOR PropertyEditor»
public class «property.genFeature.genClass.ecoreClass.name»«property.genFeature.ecoreFeature.name.toString().toFirstUpper()»Section extends «EXPAND superClass» {
	«EXPAND classBody»
}
«ENDDEFINE»

«DEFINE classBody FOR PropertyEditor»
	@Override
	public org.eclipse.emf.ecore.EStructuralFeature getFeature() {
		return «property.genFeature.genClass.genPackage.fullyQualifiedName()».«property.genFeature.genClass.genPackage.ecorePackage.name.toString().toFirstUpper()»Package.eINSTANCE.get«property.genFeature.genClass.ecoreClass.name.toString().toFirstUpper()»_«property.genFeature.ecoreFeature.name.toString().toFirstUpper()»();
	}

	@Override
	protected String getLabelText() {
		return "«property.genFeature.ecoreFeature.name.toString().toFirstUpper()»";
	}

	«EXPAND additionalMethods»
«ENDDEFINE»

«DEFINE additionalMethods FOR PropertyEditor»
«ENDDEFINE»

«REM»
«DEFINE additionalMethods FOR ObjectPropertyEditor»
	public «property.genFeature.genClass.ecoreClass.name»«property.genFeature.ecoreFeature.name.toFirstUpper()»Section() {
		«FOREACH referencedProperties.reject(p | p.active == false).property.section.reject(p | p == null) AS this»
		addSection(new «property.clazz.package.generator.genModel.modelPluginID».properties.«property.genFeature.genClass.genPackage.ecorePackage.name».section.«property.genFeature.genClass.ecoreClass.name»«property.genFeature.ecoreFeature.name.toFirstUpper()»Section());
		«ENDFOREACH»
	}
«ENDDEFINE»
«ENDREM»
«DEFINE additionalMethods FOR TextPropertyEditor»
	@Override
	protected boolean isMultiLine() {
		return «IF multiLine»true«ELSE»false«ENDIF»;
	}
«ENDDEFINE»

«DEFINE additionalMethods FOR ComboBoxPropertyEditor»
	@Override
	protected java.util.List<Object> getItems() {
		return new java.util.ArrayList<Object>();
	}
«ENDDEFINE»
«DEFINE additionalMethods FOR ListPropertyEditor»
	@Override
	protected java.util.List<Object> getItems() {
		java.util.List<Object> nodes = new java.util.ArrayList<Object>();
		nodes.add(null);

		org.eclipse.emf.common.util.TreeIterator<Object> it = org.eclipse.emf.ecore.util.EcoreUtil.getAllContents(getEditingDomain().getResourceSet(), true);
		while (it.hasNext()) {
			Object element = (Object) it.next();
			if (element instanceof «property.propertyType()») {
				nodes.add(element);
			}
		}

		return nodes;
	}
	
«ENDDEFINE»
«DEFINE additionalMethods FOR RadioPropertyEditor»
	@Override
	protected java.util.List<«property.propertyType()»> getValues() {
		return «property.propertyType()».VALUES;
	}
	
	@Override
	public void refresh() {
		super.refresh();
		checkEnabled();
	}

	protected boolean isEnabled(«property.propertyType()» state) {
//		if (getElement() instanceof ObjectVariable) {
//			ObjectVariable variable = (ObjectVariable) getElement();
//			BindingSemantics semantics = variable.getBindingSemantics();
//			BindingOperator operator = variable.getBindingOperator();
//
//			return ValidationUtil.isValid(state, semantics, operator);
//		}

		return true;
	}
«ENDDEFINE»

«DEFINE superClass FOR PropertyEditor»«this.metaType»«ENDDEFINE»

«DEFINE superClass FOR TextPropertyEditor»de.upb.swt.core.ui.properties.sections.AbstractTextSection«ENDDEFINE»
«DEFINE superClass FOR ObjectPropertyEditor»de.upb.swt.core.ui.properties.sections.AbstractGroupSection«ENDDEFINE»
«DEFINE superClass FOR CheckboxPropertyEditor»de.upb.swt.core.ui.properties.sections.AbstractCheckboxSection«ENDDEFINE»
«DEFINE superClass FOR ComboBoxPropertyEditor»de.upb.swt.core.ui.properties.sections.AbstractComboSection<Object>«ENDDEFINE»
«DEFINE superClass FOR ListPropertyEditor»de.upb.swt.core.ui.properties.sections.AbstractComboSection<Object>«ENDDEFINE»
«DEFINE superClass FOR RadioPropertyEditor»de.upb.swt.core.ui.properties.sections.AbstractRadioGroupSection<«property.propertyType()»>«ENDDEFINE»
