/*
* generated by Xtext
*/
grammar InternalUppaalXML;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package de.uni_paderborn.uppaal.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.uni_paderborn.uppaal.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.uni_paderborn.uppaal.services.UppaalXMLGrammarAccess;

}

@parser::members {
 
 	private UppaalXMLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(UppaalXMLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleNTA
entryRuleNTA 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getNTARule()); }
	 ruleNTA
{ after(grammarAccess.getNTARule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NTA
ruleNTA
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNTAAccess().getGroup()); }
(rule__NTA__Group__0)
{ after(grammarAccess.getNTAAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleTemplate
entryRuleTemplate 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getTemplateRule()); }
	 ruleTemplate
{ after(grammarAccess.getTemplateRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Template
ruleTemplate
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemplateAccess().getGroup()); }
(rule__Template__Group__0)
{ after(grammarAccess.getTemplateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleLocation
entryRuleLocation 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getLocationRule()); }
	 ruleLocation
{ after(grammarAccess.getLocationRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Location
ruleLocation
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocationAccess().getGroup()); }
(rule__Location__Group__0)
{ after(grammarAccess.getLocationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleEdge
entryRuleEdge 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getEdgeRule()); }
	 ruleEdge
{ after(grammarAccess.getEdgeRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Edge
ruleEdge
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEdgeAccess().getGroup()); }
(rule__Edge__Group__0)
{ after(grammarAccess.getEdgeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleCommentLabel
entryRuleCommentLabel 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getCommentLabelRule()); }
	 ruleCommentLabel
{ after(grammarAccess.getCommentLabelRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CommentLabel
ruleCommentLabel
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentLabelAccess().getANY_TOKEN_BUT_XML_CLOSEParserRuleCall()); }
(	ruleANY_TOKEN_BUT_XML_CLOSE)*
{ after(grammarAccess.getCommentLabelAccess().getANY_TOKEN_BUT_XML_CLOSEParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleSynchronizationLabel
entryRuleSynchronizationLabel 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");
}
:
{ before(grammarAccess.getSynchronizationLabelRule()); }
	 ruleSynchronizationLabel
{ after(grammarAccess.getSynchronizationLabelRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SynchronizationLabel
ruleSynchronizationLabel
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSynchronizationLabelAccess().getGroup()); }
(rule__SynchronizationLabel__Group__0)
{ after(grammarAccess.getSynchronizationLabelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRulePoint
entryRulePoint 
:
{ before(grammarAccess.getPointRule()); }
	 rulePoint
{ after(grammarAccess.getPointRule()); } 
	 EOF 
;

// Rule Point
rulePoint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPointAccess().getGroup()); }
(rule__Point__Group__0)
{ after(grammarAccess.getPointAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelection
entryRuleSelection 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");
}
:
{ before(grammarAccess.getSelectionRule()); }
	 ruleSelection
{ after(grammarAccess.getSelectionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Selection
ruleSelection
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectionAccess().getGroup()); }
(rule__Selection__Group__0)
{ after(grammarAccess.getSelectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleGlobalDeclarations
entryRuleGlobalDeclarations 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");
}
:
{ before(grammarAccess.getGlobalDeclarationsRule()); }
	 ruleGlobalDeclarations
{ after(grammarAccess.getGlobalDeclarationsRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule GlobalDeclarations
ruleGlobalDeclarations
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGlobalDeclarationsAccess().getGroup()); }
(rule__GlobalDeclarations__Group__0)
{ after(grammarAccess.getGlobalDeclarationsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleLocalDeclarations
entryRuleLocalDeclarations 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");
}
:
{ before(grammarAccess.getLocalDeclarationsRule()); }
	 ruleLocalDeclarations
{ after(grammarAccess.getLocalDeclarationsRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule LocalDeclarations
ruleLocalDeclarations
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalDeclarationsAccess().getGroup()); }
(rule__LocalDeclarations__Group__0)
{ after(grammarAccess.getLocalDeclarationsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleSystemDeclarations
entryRuleSystemDeclarations 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");
}
:
{ before(grammarAccess.getSystemDeclarationsRule()); }
	 ruleSystemDeclarations
{ after(grammarAccess.getSystemDeclarationsRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SystemDeclarations
ruleSystemDeclarations
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSystemDeclarationsAccess().getGroup()); }
(rule__SystemDeclarations__Group__0)
{ after(grammarAccess.getSystemDeclarationsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleProgressMeasure
entryRuleProgressMeasure 
:
{ before(grammarAccess.getProgressMeasureRule()); }
	 ruleProgressMeasure
{ after(grammarAccess.getProgressMeasureRule()); } 
	 EOF 
;

// Rule ProgressMeasure
ruleProgressMeasure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgressMeasureAccess().getGroup()); }
(rule__ProgressMeasure__Group__0)
{ after(grammarAccess.getProgressMeasureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemplateDeclaration
entryRuleTemplateDeclaration 
:
{ before(grammarAccess.getTemplateDeclarationRule()); }
	 ruleTemplateDeclaration
{ after(grammarAccess.getTemplateDeclarationRule()); } 
	 EOF 
;

// Rule TemplateDeclaration
ruleTemplateDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemplateDeclarationAccess().getGroup()); }
(rule__TemplateDeclaration__Group__0)
{ after(grammarAccess.getTemplateDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRedefinedTemplate
entryRuleRedefinedTemplate 
:
{ before(grammarAccess.getRedefinedTemplateRule()); }
	 ruleRedefinedTemplate
{ after(grammarAccess.getRedefinedTemplateRule()); } 
	 EOF 
;

// Rule RedefinedTemplate
ruleRedefinedTemplate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRedefinedTemplateAccess().getGroup()); }
(rule__RedefinedTemplate__Group__0)
{ after(grammarAccess.getRedefinedTemplateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSystem
entryRuleSystem 
:
{ before(grammarAccess.getSystemRule()); }
	 ruleSystem
{ after(grammarAccess.getSystemRule()); } 
	 EOF 
;

// Rule System
ruleSystem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSystemAccess().getGroup()); }
(rule__System__Group__0)
{ after(grammarAccess.getSystemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstantiationList
entryRuleInstantiationList 
:
{ before(grammarAccess.getInstantiationListRule()); }
	 ruleInstantiationList
{ after(grammarAccess.getInstantiationListRule()); } 
	 EOF 
;

// Rule InstantiationList
ruleInstantiationList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstantiationListAccess().getGroup()); }
(rule__InstantiationList__Group__0)
{ after(grammarAccess.getInstantiationListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypedDeclaration
entryRuleTypedDeclaration 
:
{ before(grammarAccess.getTypedDeclarationRule()); }
	 ruleTypedDeclaration
{ after(grammarAccess.getTypedDeclarationRule()); } 
	 EOF 
;

// Rule TypedDeclaration
ruleTypedDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedDeclarationAccess().getGroup()); }
(rule__TypedDeclaration__Group__0)
{ after(grammarAccess.getTypedDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypedElement
entryRuleTypedElement 
:
{ before(grammarAccess.getTypedElementRule()); }
	 ruleTypedElement
{ after(grammarAccess.getTypedElementRule()); } 
	 EOF 
;

// Rule TypedElement
ruleTypedElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedElementAccess().getGroup()); }
(rule__TypedElement__Group__0)
{ after(grammarAccess.getTypedElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableNameOnly
entryRuleVariableNameOnly 
:
{ before(grammarAccess.getVariableNameOnlyRule()); }
	 ruleVariableNameOnly
{ after(grammarAccess.getVariableNameOnlyRule()); } 
	 EOF 
;

// Rule VariableNameOnly
ruleVariableNameOnly
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableNameOnlyAccess().getNameAssignment()); }
(rule__VariableNameOnly__NameAssignment)
{ after(grammarAccess.getVariableNameOnlyAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getGroup()); }
(rule__Variable__Group__0)
{ after(grammarAccess.getVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitializer
entryRuleInitializer 
:
{ before(grammarAccess.getInitializerRule()); }
	 ruleInitializer
{ after(grammarAccess.getInitializerRule()); } 
	 EOF 
;

// Rule Initializer
ruleInitializer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitializerAccess().getAlternatives()); }
(rule__Initializer__Alternatives)
{ after(grammarAccess.getInitializerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionInitializer
entryRuleExpressionInitializer 
:
{ before(grammarAccess.getExpressionInitializerRule()); }
	 ruleExpressionInitializer
{ after(grammarAccess.getExpressionInitializerRule()); } 
	 EOF 
;

// Rule ExpressionInitializer
ruleExpressionInitializer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionInitializerAccess().getExpressionAssignment()); }
(rule__ExpressionInitializer__ExpressionAssignment)
{ after(grammarAccess.getExpressionInitializerAccess().getExpressionAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayInitializer
entryRuleArrayInitializer 
:
{ before(grammarAccess.getArrayInitializerRule()); }
	 ruleArrayInitializer
{ after(grammarAccess.getArrayInitializerRule()); } 
	 EOF 
;

// Rule ArrayInitializer
ruleArrayInitializer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayInitializerAccess().getGroup()); }
(rule__ArrayInitializer__Group__0)
{ after(grammarAccess.getArrayInitializerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeExpression
entryRuleTypeExpression 
:
{ before(grammarAccess.getTypeExpressionRule()); }
	 ruleTypeExpression
{ after(grammarAccess.getTypeExpressionRule()); } 
	 EOF 
;

// Rule TypeExpression
ruleTypeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeExpressionAccess().getAlternatives()); }
(rule__TypeExpression__Alternatives)
{ after(grammarAccess.getTypeExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChannelPrefixExpression
entryRuleChannelPrefixExpression 
:
{ before(grammarAccess.getChannelPrefixExpressionRule()); }
	 ruleChannelPrefixExpression
{ after(grammarAccess.getChannelPrefixExpressionRule()); } 
	 EOF 
;

// Rule ChannelPrefixExpression
ruleChannelPrefixExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChannelPrefixExpressionAccess().getGroup()); }
(rule__ChannelPrefixExpression__Group__0)
{ after(grammarAccess.getChannelPrefixExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCHAN_KEYWORD
entryRuleCHAN_KEYWORD 
:
{ before(grammarAccess.getCHAN_KEYWORDRule()); }
	 ruleCHAN_KEYWORD
{ after(grammarAccess.getCHAN_KEYWORDRule()); } 
	 EOF 
;

// Rule CHAN_KEYWORD
ruleCHAN_KEYWORD
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCHAN_KEYWORDAccess().getChanKeyword()); }

	'chan' 

{ after(grammarAccess.getCHAN_KEYWORDAccess().getChanKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChannelPrefixExpression_Urgent
entryRuleChannelPrefixExpression_Urgent 
:
{ before(grammarAccess.getChannelPrefixExpression_UrgentRule()); }
	 ruleChannelPrefixExpression_Urgent
{ after(grammarAccess.getChannelPrefixExpression_UrgentRule()); } 
	 EOF 
;

// Rule ChannelPrefixExpression_Urgent
ruleChannelPrefixExpression_Urgent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChannelPrefixExpression_UrgentAccess().getUrgentKeyword()); }

	'urgent' 

{ after(grammarAccess.getChannelPrefixExpression_UrgentAccess().getUrgentKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChannelPrefixExpression_Broadcast
entryRuleChannelPrefixExpression_Broadcast 
:
{ before(grammarAccess.getChannelPrefixExpression_BroadcastRule()); }
	 ruleChannelPrefixExpression_Broadcast
{ after(grammarAccess.getChannelPrefixExpression_BroadcastRule()); } 
	 EOF 
;

// Rule ChannelPrefixExpression_Broadcast
ruleChannelPrefixExpression_Broadcast
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChannelPrefixExpression_BroadcastAccess().getBroadcastKeyword()); }

	'broadcast' 

{ after(grammarAccess.getChannelPrefixExpression_BroadcastAccess().getBroadcastKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataPrefixExpression
entryRuleDataPrefixExpression 
:
{ before(grammarAccess.getDataPrefixExpressionRule()); }
	 ruleDataPrefixExpression
{ after(grammarAccess.getDataPrefixExpressionRule()); } 
	 EOF 
;

// Rule DataPrefixExpression
ruleDataPrefixExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataPrefixExpressionAccess().getGroup()); }
(rule__DataPrefixExpression__Group__0)
{ after(grammarAccess.getDataPrefixExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRangeTypeSpecification
entryRuleRangeTypeSpecification 
:
{ before(grammarAccess.getRangeTypeSpecificationRule()); }
	 ruleRangeTypeSpecification
{ after(grammarAccess.getRangeTypeSpecificationRule()); } 
	 EOF 
;

// Rule RangeTypeSpecification
ruleRangeTypeSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRangeTypeSpecificationAccess().getGroup()); }
(rule__RangeTypeSpecification__Group__0)
{ after(grammarAccess.getRangeTypeSpecificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerBounds
entryRuleIntegerBounds 
:
{ before(grammarAccess.getIntegerBoundsRule()); }
	 ruleIntegerBounds
{ after(grammarAccess.getIntegerBoundsRule()); } 
	 EOF 
;

// Rule IntegerBounds
ruleIntegerBounds
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerBoundsAccess().getGroup()); }
(rule__IntegerBounds__Group__0)
{ after(grammarAccess.getIntegerBoundsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructTypeSpecification
entryRuleStructTypeSpecification 
:
{ before(grammarAccess.getStructTypeSpecificationRule()); }
	 ruleStructTypeSpecification
{ after(grammarAccess.getStructTypeSpecificationRule()); } 
	 EOF 
;

// Rule StructTypeSpecification
ruleStructTypeSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructTypeSpecificationAccess().getGroup()); }
(rule__StructTypeSpecification__Group__0)
{ after(grammarAccess.getStructTypeSpecificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScalarTypeSpecification
entryRuleScalarTypeSpecification 
:
{ before(grammarAccess.getScalarTypeSpecificationRule()); }
	 ruleScalarTypeSpecification
{ after(grammarAccess.getScalarTypeSpecificationRule()); } 
	 EOF 
;

// Rule ScalarTypeSpecification
ruleScalarTypeSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScalarTypeSpecificationAccess().getGroup()); }
(rule__ScalarTypeSpecification__Group__0)
{ after(grammarAccess.getScalarTypeSpecificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeDeclaration
entryRuleTypeDeclaration 
:
{ before(grammarAccess.getTypeDeclarationRule()); }
	 ruleTypeDeclaration
{ after(grammarAccess.getTypeDeclarationRule()); } 
	 EOF 
;

// Rule TypeDeclaration
ruleTypeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeDeclarationAccess().getGroup()); }
(rule__TypeDeclaration__Group__0)
{ after(grammarAccess.getTypeDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaredType
entryRuleDeclaredType 
:
{ before(grammarAccess.getDeclaredTypeRule()); }
	 ruleDeclaredType
{ after(grammarAccess.getDeclaredTypeRule()); } 
	 EOF 
;

// Rule DeclaredType
ruleDeclaredType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclaredTypeAccess().getGroup()); }
(rule__DeclaredType__Group__0)
{ after(grammarAccess.getDeclaredTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChannelPriorityDeclaration
entryRuleChannelPriorityDeclaration 
:
{ before(grammarAccess.getChannelPriorityDeclarationRule()); }
	 ruleChannelPriorityDeclaration
{ after(grammarAccess.getChannelPriorityDeclarationRule()); } 
	 EOF 
;

// Rule ChannelPriorityDeclaration
ruleChannelPriorityDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChannelPriorityDeclarationAccess().getGroup()); }
(rule__ChannelPriorityDeclaration__Group__0)
{ after(grammarAccess.getChannelPriorityDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChannelPriorityGroup
entryRuleChannelPriorityGroup 
:
{ before(grammarAccess.getChannelPriorityGroupRule()); }
	 ruleChannelPriorityGroup
{ after(grammarAccess.getChannelPriorityGroupRule()); } 
	 EOF 
;

// Rule ChannelPriorityGroup
ruleChannelPriorityGroup
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChannelPriorityGroupAccess().getGroup()); }
(rule__ChannelPriorityGroup__Group__0)
{ after(grammarAccess.getChannelPriorityGroupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePriorityItem
entryRulePriorityItem 
:
{ before(grammarAccess.getPriorityItemRule()); }
	 rulePriorityItem
{ after(grammarAccess.getPriorityItemRule()); } 
	 EOF 
;

// Rule PriorityItem
rulePriorityItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPriorityItemAccess().getAlternatives()); }
(rule__PriorityItem__Alternatives)
{ after(grammarAccess.getPriorityItemAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefaultItem
entryRuleDefaultItem 
:
{ before(grammarAccess.getDefaultItemRule()); }
	 ruleDefaultItem
{ after(grammarAccess.getDefaultItemRule()); } 
	 EOF 
;

// Rule DefaultItem
ruleDefaultItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefaultItemAccess().getGroup()); }
(rule__DefaultItem__Group__0)
{ after(grammarAccess.getDefaultItemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChannelItem
entryRuleChannelItem 
:
{ before(grammarAccess.getChannelItemRule()); }
	 ruleChannelItem
{ after(grammarAccess.getChannelItemRule()); } 
	 EOF 
;

// Rule ChannelItem
ruleChannelItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChannelItemAccess().getChannelExpressionAssignment()); }
(rule__ChannelItem__ChannelExpressionAssignment)
{ after(grammarAccess.getChannelItemAccess().getChannelExpressionAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterContainer
entryRuleParameterContainer 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");
}
:
{ before(grammarAccess.getParameterContainerRule()); }
	 ruleParameterContainer
{ after(grammarAccess.getParameterContainerRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ParameterContainer
ruleParameterContainer
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterContainerAccess().getGroup()); }
(rule__ParameterContainer__Group__0)
{ after(grammarAccess.getParameterContainerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlock
entryRuleBlock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlockDeclarations
entryRuleBlockDeclarations 
:
{ before(grammarAccess.getBlockDeclarationsRule()); }
	 ruleBlockDeclarations
{ after(grammarAccess.getBlockDeclarationsRule()); } 
	 EOF 
;

// Rule BlockDeclarations
ruleBlockDeclarations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockDeclarationsAccess().getGroup()); }
(rule__BlockDeclarations__Group__0)
{ after(grammarAccess.getBlockDeclarationsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlockTypedDeclaration
entryRuleBlockTypedDeclaration 
:
{ before(grammarAccess.getBlockTypedDeclarationRule()); }
	 ruleBlockTypedDeclaration
{ after(grammarAccess.getBlockTypedDeclarationRule()); } 
	 EOF 
;

// Rule BlockTypedDeclaration
ruleBlockTypedDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockTypedDeclarationAccess().getGroup()); }
(rule__BlockTypedDeclaration__Group__0)
{ after(grammarAccess.getBlockTypedDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmptyStatement
entryRuleEmptyStatement 
:
{ before(grammarAccess.getEmptyStatementRule()); }
	 ruleEmptyStatement
{ after(grammarAccess.getEmptyStatementRule()); } 
	 EOF 
;

// Rule EmptyStatement
ruleEmptyStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmptyStatementAccess().getGroup()); }
(rule__EmptyStatement__Group__0)
{ after(grammarAccess.getEmptyStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionStatement
entryRuleExpressionStatement 
:
{ before(grammarAccess.getExpressionStatementRule()); }
	 ruleExpressionStatement
{ after(grammarAccess.getExpressionStatementRule()); } 
	 EOF 
;

// Rule ExpressionStatement
ruleExpressionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionStatementAccess().getGroup()); }
(rule__ExpressionStatement__Group__0)
{ after(grammarAccess.getExpressionStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForLoop
entryRuleForLoop 
:
{ before(grammarAccess.getForLoopRule()); }
	 ruleForLoop
{ after(grammarAccess.getForLoopRule()); } 
	 EOF 
;

// Rule ForLoop
ruleForLoop
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForLoopAccess().getGroup()); }
(rule__ForLoop__Group__0)
{ after(grammarAccess.getForLoopAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIteration
entryRuleIteration 
:
{ before(grammarAccess.getIterationRule()); }
	 ruleIteration
{ after(grammarAccess.getIterationRule()); } 
	 EOF 
;

// Rule Iteration
ruleIteration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIterationAccess().getGroup()); }
(rule__Iteration__Group__0)
{ after(grammarAccess.getIterationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhileLoop
entryRuleWhileLoop 
:
{ before(grammarAccess.getWhileLoopRule()); }
	 ruleWhileLoop
{ after(grammarAccess.getWhileLoopRule()); } 
	 EOF 
;

// Rule WhileLoop
ruleWhileLoop
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileLoopAccess().getGroup()); }
(rule__WhileLoop__Group__0)
{ after(grammarAccess.getWhileLoopAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoWhileLoop
entryRuleDoWhileLoop 
:
{ before(grammarAccess.getDoWhileLoopRule()); }
	 ruleDoWhileLoop
{ after(grammarAccess.getDoWhileLoopRule()); } 
	 EOF 
;

// Rule DoWhileLoop
ruleDoWhileLoop
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoWhileLoopAccess().getGroup()); }
(rule__DoWhileLoop__Group__0)
{ after(grammarAccess.getDoWhileLoopAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfStatement
entryRuleIfStatement 
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfStatementAccess().getGroup()); }
(rule__IfStatement__Group__0)
{ after(grammarAccess.getIfStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnStatement
entryRuleReturnStatement 
:
{ before(grammarAccess.getReturnStatementRule()); }
	 ruleReturnStatement
{ after(grammarAccess.getReturnStatementRule()); } 
	 EOF 
;

// Rule ReturnStatement
ruleReturnStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnStatementAccess().getGroup()); }
(rule__ReturnStatement__Group__0)
{ after(grammarAccess.getReturnStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");
}
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Expression
ruleExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getQuantificationExpressionParserRuleCall()); }
	ruleQuantificationExpression
{ after(grammarAccess.getExpressionAccess().getQuantificationExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleQuantificationExpression
entryRuleQuantificationExpression 
:
{ before(grammarAccess.getQuantificationExpressionRule()); }
	 ruleQuantificationExpression
{ after(grammarAccess.getQuantificationExpressionRule()); } 
	 EOF 
;

// Rule QuantificationExpression
ruleQuantificationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuantificationExpressionAccess().getAlternatives()); }
(rule__QuantificationExpression__Alternatives)
{ after(grammarAccess.getQuantificationExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogicalExpression_OrImply
entryRuleLogicalExpression_OrImply 
:
{ before(grammarAccess.getLogicalExpression_OrImplyRule()); }
	 ruleLogicalExpression_OrImply
{ after(grammarAccess.getLogicalExpression_OrImplyRule()); } 
	 EOF 
;

// Rule LogicalExpression_OrImply
ruleLogicalExpression_OrImply
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicalExpression_OrImplyAccess().getGroup()); }
(rule__LogicalExpression_OrImply__Group__0)
{ after(grammarAccess.getLogicalExpression_OrImplyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogicalExpression_And
entryRuleLogicalExpression_And 
:
{ before(grammarAccess.getLogicalExpression_AndRule()); }
	 ruleLogicalExpression_And
{ after(grammarAccess.getLogicalExpression_AndRule()); } 
	 EOF 
;

// Rule LogicalExpression_And
ruleLogicalExpression_And
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicalExpression_AndAccess().getGroup()); }
(rule__LogicalExpression_And__Group__0)
{ after(grammarAccess.getLogicalExpression_AndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNegationExpression
entryRuleNegationExpression 
:
{ before(grammarAccess.getNegationExpressionRule()); }
	 ruleNegationExpression
{ after(grammarAccess.getNegationExpressionRule()); } 
	 EOF 
;

// Rule NegationExpression
ruleNegationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNegationExpressionAccess().getAlternatives()); }
(rule__NegationExpression__Alternatives)
{ after(grammarAccess.getNegationExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignmentExpression
entryRuleAssignmentExpression 
:
{ before(grammarAccess.getAssignmentExpressionRule()); }
	 ruleAssignmentExpression
{ after(grammarAccess.getAssignmentExpressionRule()); } 
	 EOF 
;

// Rule AssignmentExpression
ruleAssignmentExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getGroup()); }
(rule__AssignmentExpression__Group__0)
{ after(grammarAccess.getAssignmentExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionExpression
entryRuleConditionExpression 
:
{ before(grammarAccess.getConditionExpressionRule()); }
	 ruleConditionExpression
{ after(grammarAccess.getConditionExpressionRule()); } 
	 EOF 
;

// Rule ConditionExpression
ruleConditionExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionExpressionAccess().getGroup()); }
(rule__ConditionExpression__Group__0)
{ after(grammarAccess.getConditionExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogicalExpression_OrAlternative
entryRuleLogicalExpression_OrAlternative 
:
{ before(grammarAccess.getLogicalExpression_OrAlternativeRule()); }
	 ruleLogicalExpression_OrAlternative
{ after(grammarAccess.getLogicalExpression_OrAlternativeRule()); } 
	 EOF 
;

// Rule LogicalExpression_OrAlternative
ruleLogicalExpression_OrAlternative
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicalExpression_OrAlternativeAccess().getGroup()); }
(rule__LogicalExpression_OrAlternative__Group__0)
{ after(grammarAccess.getLogicalExpression_OrAlternativeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogicalExpression_AndAlternative
entryRuleLogicalExpression_AndAlternative 
:
{ before(grammarAccess.getLogicalExpression_AndAlternativeRule()); }
	 ruleLogicalExpression_AndAlternative
{ after(grammarAccess.getLogicalExpression_AndAlternativeRule()); } 
	 EOF 
;

// Rule LogicalExpression_AndAlternative
ruleLogicalExpression_AndAlternative
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicalExpression_AndAlternativeAccess().getGroup()); }
(rule__LogicalExpression_AndAlternative__Group__0)
{ after(grammarAccess.getLogicalExpression_AndAlternativeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitwiseExpression_Or
entryRuleBitwiseExpression_Or 
:
{ before(grammarAccess.getBitwiseExpression_OrRule()); }
	 ruleBitwiseExpression_Or
{ after(grammarAccess.getBitwiseExpression_OrRule()); } 
	 EOF 
;

// Rule BitwiseExpression_Or
ruleBitwiseExpression_Or
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitwiseExpression_OrAccess().getGroup()); }
(rule__BitwiseExpression_Or__Group__0)
{ after(grammarAccess.getBitwiseExpression_OrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitwiseExpression_Xor
entryRuleBitwiseExpression_Xor 
:
{ before(grammarAccess.getBitwiseExpression_XorRule()); }
	 ruleBitwiseExpression_Xor
{ after(grammarAccess.getBitwiseExpression_XorRule()); } 
	 EOF 
;

// Rule BitwiseExpression_Xor
ruleBitwiseExpression_Xor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitwiseExpression_XorAccess().getGroup()); }
(rule__BitwiseExpression_Xor__Group__0)
{ after(grammarAccess.getBitwiseExpression_XorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitwiseExpression_And
entryRuleBitwiseExpression_And 
:
{ before(grammarAccess.getBitwiseExpression_AndRule()); }
	 ruleBitwiseExpression_And
{ after(grammarAccess.getBitwiseExpression_AndRule()); } 
	 EOF 
;

// Rule BitwiseExpression_And
ruleBitwiseExpression_And
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitwiseExpression_AndAccess().getGroup()); }
(rule__BitwiseExpression_And__Group__0)
{ after(grammarAccess.getBitwiseExpression_AndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompareExpression_EqualUnequal
entryRuleCompareExpression_EqualUnequal 
:
{ before(grammarAccess.getCompareExpression_EqualUnequalRule()); }
	 ruleCompareExpression_EqualUnequal
{ after(grammarAccess.getCompareExpression_EqualUnequalRule()); } 
	 EOF 
;

// Rule CompareExpression_EqualUnequal
ruleCompareExpression_EqualUnequal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareExpression_EqualUnequalAccess().getGroup()); }
(rule__CompareExpression_EqualUnequal__Group__0)
{ after(grammarAccess.getCompareExpression_EqualUnequalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompareExpression_Other
entryRuleCompareExpression_Other 
:
{ before(grammarAccess.getCompareExpression_OtherRule()); }
	 ruleCompareExpression_Other
{ after(grammarAccess.getCompareExpression_OtherRule()); } 
	 EOF 
;

// Rule CompareExpression_Other
ruleCompareExpression_Other
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareExpression_OtherAccess().getGroup()); }
(rule__CompareExpression_Other__Group__0)
{ after(grammarAccess.getCompareExpression_OtherAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMinMaxExpression
entryRuleMinMaxExpression 
:
{ before(grammarAccess.getMinMaxExpressionRule()); }
	 ruleMinMaxExpression
{ after(grammarAccess.getMinMaxExpressionRule()); } 
	 EOF 
;

// Rule MinMaxExpression
ruleMinMaxExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMinMaxExpressionAccess().getGroup()); }
(rule__MinMaxExpression__Group__0)
{ after(grammarAccess.getMinMaxExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitShiftExpression
entryRuleBitShiftExpression 
:
{ before(grammarAccess.getBitShiftExpressionRule()); }
	 ruleBitShiftExpression
{ after(grammarAccess.getBitShiftExpressionRule()); } 
	 EOF 
;

// Rule BitShiftExpression
ruleBitShiftExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitShiftExpressionAccess().getGroup()); }
(rule__BitShiftExpression__Group__0)
{ after(grammarAccess.getBitShiftExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArithmeticExpression_PlusMinus
entryRuleArithmeticExpression_PlusMinus 
:
{ before(grammarAccess.getArithmeticExpression_PlusMinusRule()); }
	 ruleArithmeticExpression_PlusMinus
{ after(grammarAccess.getArithmeticExpression_PlusMinusRule()); } 
	 EOF 
;

// Rule ArithmeticExpression_PlusMinus
ruleArithmeticExpression_PlusMinus
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArithmeticExpression_PlusMinusAccess().getGroup()); }
(rule__ArithmeticExpression_PlusMinus__Group__0)
{ after(grammarAccess.getArithmeticExpression_PlusMinusAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArithmeticExpression_Other
entryRuleArithmeticExpression_Other 
:
{ before(grammarAccess.getArithmeticExpression_OtherRule()); }
	 ruleArithmeticExpression_Other
{ after(grammarAccess.getArithmeticExpression_OtherRule()); } 
	 EOF 
;

// Rule ArithmeticExpression_Other
ruleArithmeticExpression_Other
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArithmeticExpression_OtherAccess().getGroup()); }
(rule__ArithmeticExpression_Other__Group__0)
{ after(grammarAccess.getArithmeticExpression_OtherAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNegationExpression_Alternative
entryRuleNegationExpression_Alternative 
:
{ before(grammarAccess.getNegationExpression_AlternativeRule()); }
	 ruleNegationExpression_Alternative
{ after(grammarAccess.getNegationExpression_AlternativeRule()); } 
	 EOF 
;

// Rule NegationExpression_Alternative
ruleNegationExpression_Alternative
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNegationExpression_AlternativeAccess().getAlternatives()); }
(rule__NegationExpression_Alternative__Alternatives)
{ after(grammarAccess.getNegationExpression_AlternativeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIncrementDecrementExpression
entryRuleIncrementDecrementExpression 
:
{ before(grammarAccess.getIncrementDecrementExpressionRule()); }
	 ruleIncrementDecrementExpression
{ after(grammarAccess.getIncrementDecrementExpressionRule()); } 
	 EOF 
;

// Rule IncrementDecrementExpression
ruleIncrementDecrementExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIncrementDecrementExpressionAccess().getPreIncrementDecrementExpressionParserRuleCall()); }
	rulePreIncrementDecrementExpression
{ after(grammarAccess.getIncrementDecrementExpressionAccess().getPreIncrementDecrementExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePreIncrementDecrementExpression
entryRulePreIncrementDecrementExpression 
:
{ before(grammarAccess.getPreIncrementDecrementExpressionRule()); }
	 rulePreIncrementDecrementExpression
{ after(grammarAccess.getPreIncrementDecrementExpressionRule()); } 
	 EOF 
;

// Rule PreIncrementDecrementExpression
rulePreIncrementDecrementExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPreIncrementDecrementExpressionAccess().getAlternatives()); }
(rule__PreIncrementDecrementExpression__Alternatives)
{ after(grammarAccess.getPreIncrementDecrementExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostIncrementDecrementExpression
entryRulePostIncrementDecrementExpression 
:
{ before(grammarAccess.getPostIncrementDecrementExpressionRule()); }
	 rulePostIncrementDecrementExpression
{ after(grammarAccess.getPostIncrementDecrementExpressionRule()); } 
	 EOF 
;

// Rule PostIncrementDecrementExpression
rulePostIncrementDecrementExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostIncrementDecrementExpressionAccess().getGroup()); }
(rule__PostIncrementDecrementExpression__Group__0)
{ after(grammarAccess.getPostIncrementDecrementExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScopedIdentifierExpression
entryRuleScopedIdentifierExpression 
:
{ before(grammarAccess.getScopedIdentifierExpressionRule()); }
	 ruleScopedIdentifierExpression
{ after(grammarAccess.getScopedIdentifierExpressionRule()); } 
	 EOF 
;

// Rule ScopedIdentifierExpression
ruleScopedIdentifierExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScopedIdentifierExpressionAccess().getGroup()); }
(rule__ScopedIdentifierExpression__Group__0)
{ after(grammarAccess.getScopedIdentifierExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerminatingExpressions
entryRuleTerminatingExpressions 
:
{ before(grammarAccess.getTerminatingExpressionsRule()); }
	 ruleTerminatingExpressions
{ after(grammarAccess.getTerminatingExpressionsRule()); } 
	 EOF 
;

// Rule TerminatingExpressions
ruleTerminatingExpressions
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminatingExpressionsAccess().getAlternatives()); }
(rule__TerminatingExpressions__Alternatives)
{ after(grammarAccess.getTerminatingExpressionsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralExpression
entryRuleLiteralExpression 
:
{ before(grammarAccess.getLiteralExpressionRule()); }
	 ruleLiteralExpression
{ after(grammarAccess.getLiteralExpressionRule()); } 
	 EOF 
;

// Rule LiteralExpression
ruleLiteralExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralExpressionAccess().getTextAssignment()); }
(rule__LiteralExpression__TextAssignment)
{ after(grammarAccess.getLiteralExpressionAccess().getTextAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralExpressionText
entryRuleLiteralExpressionText 
:
{ before(grammarAccess.getLiteralExpressionTextRule()); }
	 ruleLiteralExpressionText
{ after(grammarAccess.getLiteralExpressionTextRule()); } 
	 EOF 
;

// Rule LiteralExpressionText
ruleLiteralExpressionText
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralExpressionTextAccess().getAlternatives()); }
(rule__LiteralExpressionText__Alternatives)
{ after(grammarAccess.getLiteralExpressionTextAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionCallExpression
entryRuleFunctionCallExpression 
:
{ before(grammarAccess.getFunctionCallExpressionRule()); }
	 ruleFunctionCallExpression
{ after(grammarAccess.getFunctionCallExpressionRule()); } 
	 EOF 
;

// Rule FunctionCallExpression
ruleFunctionCallExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getGroup()); }
(rule__FunctionCallExpression__Group__0)
{ after(grammarAccess.getFunctionCallExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdentifierExpression
entryRuleIdentifierExpression 
:
{ before(grammarAccess.getIdentifierExpressionRule()); }
	 ruleIdentifierExpression
{ after(grammarAccess.getIdentifierExpressionRule()); } 
	 EOF 
;

// Rule IdentifierExpression
ruleIdentifierExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentifierExpressionAccess().getGroup()); }
(rule__IdentifierExpression__Group__0)
{ after(grammarAccess.getIdentifierExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleIdentifierExpression
entryRuleSimpleIdentifierExpression 
:
{ before(grammarAccess.getSimpleIdentifierExpressionRule()); }
	 ruleSimpleIdentifierExpression
{ after(grammarAccess.getSimpleIdentifierExpressionRule()); } 
	 EOF 
;

// Rule SimpleIdentifierExpression
ruleSimpleIdentifierExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleIdentifierExpressionAccess().getIdentifierAssignment()); }
(rule__SimpleIdentifierExpression__IdentifierAssignment)
{ after(grammarAccess.getSimpleIdentifierExpressionAccess().getIdentifierAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUPPAAL_TYPE_OR_IDENTIFIER
entryRuleUPPAAL_TYPE_OR_IDENTIFIER 
:
{ before(grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERRule()); }
	 ruleUPPAAL_TYPE_OR_IDENTIFIER
{ after(grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERRule()); } 
	 EOF 
;

// Rule UPPAAL_TYPE_OR_IDENTIFIER
ruleUPPAAL_TYPE_OR_IDENTIFIER
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getAlternatives()); }
(rule__UPPAAL_TYPE_OR_IDENTIFIER__Alternatives)
{ after(grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUPPAAL_IDENTIFIER
entryRuleUPPAAL_IDENTIFIER 
:
{ before(grammarAccess.getUPPAAL_IDENTIFIERRule()); }
	 ruleUPPAAL_IDENTIFIER
{ after(grammarAccess.getUPPAAL_IDENTIFIERRule()); } 
	 EOF 
;

// Rule UPPAAL_IDENTIFIER
ruleUPPAAL_IDENTIFIER
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUPPAAL_IDENTIFIERAccess().getAlternatives()); }
(rule__UPPAAL_IDENTIFIER__Alternatives)
{ after(grammarAccess.getUPPAAL_IDENTIFIERAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUPPAAL_KEYWORDS
entryRuleUPPAAL_KEYWORDS 
:
{ before(grammarAccess.getUPPAAL_KEYWORDSRule()); }
	 ruleUPPAAL_KEYWORDS
{ after(grammarAccess.getUPPAAL_KEYWORDSRule()); } 
	 EOF 
;

// Rule UPPAAL_KEYWORDS
ruleUPPAAL_KEYWORDS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getAlternatives()); }
(rule__UPPAAL_KEYWORDS__Alternatives)
{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUPPAAL_STRUCTURE_KEYWORDS
entryRuleUPPAAL_STRUCTURE_KEYWORDS 
:
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSRule()); }
	 ruleUPPAAL_STRUCTURE_KEYWORDS
{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSRule()); } 
	 EOF 
;

// Rule UPPAAL_STRUCTURE_KEYWORDS
ruleUPPAAL_STRUCTURE_KEYWORDS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAlternatives()); }
(rule__UPPAAL_STRUCTURE_KEYWORDS__Alternatives)
{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQUOTED_INT
entryRuleQUOTED_INT 
:
{ before(grammarAccess.getQUOTED_INTRule()); }
	 ruleQUOTED_INT
{ after(grammarAccess.getQUOTED_INTRule()); } 
	 EOF 
;

// Rule QUOTED_INT
ruleQUOTED_INT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQUOTED_INTAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getQUOTED_INTAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleANY_TOKEN_BUT_XML_CLOSE
entryRuleANY_TOKEN_BUT_XML_CLOSE 
:
{ before(grammarAccess.getANY_TOKEN_BUT_XML_CLOSERule()); }
	 ruleANY_TOKEN_BUT_XML_CLOSE
{ after(grammarAccess.getANY_TOKEN_BUT_XML_CLOSERule()); } 
	 EOF 
;

// Rule ANY_TOKEN_BUT_XML_CLOSE
ruleANY_TOKEN_BUT_XML_CLOSE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getAlternatives()); }
(rule__ANY_TOKEN_BUT_XML_CLOSE__Alternatives)
{ after(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXML_STRUCTURE_KEYWORDS
entryRuleXML_STRUCTURE_KEYWORDS 
:
{ before(grammarAccess.getXML_STRUCTURE_KEYWORDSRule()); }
	 ruleXML_STRUCTURE_KEYWORDS
{ after(grammarAccess.getXML_STRUCTURE_KEYWORDSRule()); } 
	 EOF 
;

// Rule XML_STRUCTURE_KEYWORDS
ruleXML_STRUCTURE_KEYWORDS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getAlternatives()); }
(rule__XML_STRUCTURE_KEYWORDS__Alternatives)
{ after(grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleXML_KEYWORDS
entryRuleXML_KEYWORDS 
:
{ before(grammarAccess.getXML_KEYWORDSRule()); }
	 ruleXML_KEYWORDS
{ after(grammarAccess.getXML_KEYWORDSRule()); } 
	 EOF 
;

// Rule XML_KEYWORDS
ruleXML_KEYWORDS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXML_KEYWORDSAccess().getAlternatives()); }
(rule__XML_KEYWORDS__Alternatives)
{ after(grammarAccess.getXML_KEYWORDSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXML_ATTRIBUTE_KEYWORDS
entryRuleXML_ATTRIBUTE_KEYWORDS 
:
{ before(grammarAccess.getXML_ATTRIBUTE_KEYWORDSRule()); }
	 ruleXML_ATTRIBUTE_KEYWORDS
{ after(grammarAccess.getXML_ATTRIBUTE_KEYWORDSRule()); } 
	 EOF 
;

// Rule XML_ATTRIBUTE_KEYWORDS
ruleXML_ATTRIBUTE_KEYWORDS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXML_ATTRIBUTE_KEYWORDSAccess().getAlternatives()); }
(rule__XML_ATTRIBUTE_KEYWORDS__Alternatives)
{ after(grammarAccess.getXML_ATTRIBUTE_KEYWORDSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule LocationKind
ruleLocationKind
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationKindAccess().getAlternatives()); }
(rule__LocationKind__Alternatives)
{ after(grammarAccess.getLocationKindAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule SynchronizationKind
ruleSynchronizationKind
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizationKindAccess().getAlternatives()); }
(rule__SynchronizationKind__Alternatives)
{ after(grammarAccess.getSynchronizationKindAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule DataVariablePrefix
ruleDataVariablePrefix
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataVariablePrefixAccess().getAlternatives()); }
(rule__DataVariablePrefix__Alternatives)
{ after(grammarAccess.getDataVariablePrefixAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CallType
ruleCallType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallTypeAccess().getCALL_BY_REFERENCEEnumLiteralDeclaration()); }
(	'&amp;' 
)
{ after(grammarAccess.getCallTypeAccess().getCALL_BY_REFERENCEEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Quantifier
ruleQuantifier
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantifierAccess().getAlternatives()); }
(rule__Quantifier__Alternatives)
{ after(grammarAccess.getQuantifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule LogicalOperator_OrImply
ruleLogicalOperator_OrImply
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOperator_OrImplyAccess().getAlternatives()); }
(rule__LogicalOperator_OrImply__Alternatives)
{ after(grammarAccess.getLogicalOperator_OrImplyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule LogicalOperator_And
ruleLogicalOperator_And
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOperator_AndAccess().getANDEnumLiteralDeclaration()); }
(	'and' 
)
{ after(grammarAccess.getLogicalOperator_AndAccess().getANDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AssignmentOperator
ruleAssignmentOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); }
(rule__AssignmentOperator__Alternatives)
{ after(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule LogicalOperator_OrAlternative
ruleLogicalOperator_OrAlternative
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOperator_OrAlternativeAccess().getOREnumLiteralDeclaration()); }
(	'||' 
)
{ after(grammarAccess.getLogicalOperator_OrAlternativeAccess().getOREnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule LogicalOperator_AndAlternative
ruleLogicalOperator_AndAlternative
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOperator_AndAlternativeAccess().getANDEnumLiteralDeclaration()); }
(	'&amp;&amp;' 
)
{ after(grammarAccess.getLogicalOperator_AndAlternativeAccess().getANDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule BitwiseOperator_Or
ruleBitwiseOperator_Or
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOperator_OrAccess().getOREnumLiteralDeclaration()); }
(	'|' 
)
{ after(grammarAccess.getBitwiseOperator_OrAccess().getOREnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule BitwiseOperator_Xor
ruleBitwiseOperator_Xor
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOperator_XorAccess().getXOREnumLiteralDeclaration()); }
(	'^' 
)
{ after(grammarAccess.getBitwiseOperator_XorAccess().getXOREnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule BitwiseOperator_And
ruleBitwiseOperator_And
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOperator_AndAccess().getANDEnumLiteralDeclaration()); }
(	'&amp;' 
)
{ after(grammarAccess.getBitwiseOperator_AndAccess().getANDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CompareOperator_EqualUnequal
ruleCompareOperator_EqualUnequal
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperator_EqualUnequalAccess().getAlternatives()); }
(rule__CompareOperator_EqualUnequal__Alternatives)
{ after(grammarAccess.getCompareOperator_EqualUnequalAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CompareOperator_Other
ruleCompareOperator_Other
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperator_OtherAccess().getAlternatives()); }
(rule__CompareOperator_Other__Alternatives)
{ after(grammarAccess.getCompareOperator_OtherAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule MinMaxOperator
ruleMinMaxOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinMaxOperatorAccess().getAlternatives()); }
(rule__MinMaxOperator__Alternatives)
{ after(grammarAccess.getMinMaxOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule BitShiftOperator
ruleBitShiftOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitShiftOperatorAccess().getAlternatives()); }
(rule__BitShiftOperator__Alternatives)
{ after(grammarAccess.getBitShiftOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ArithmeticOperator_PlusMinus
ruleArithmeticOperator_PlusMinus
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticOperator_PlusMinusAccess().getAlternatives()); }
(rule__ArithmeticOperator_PlusMinus__Alternatives)
{ after(grammarAccess.getArithmeticOperator_PlusMinusAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ArithmeticOperator_Other
ruleArithmeticOperator_Other
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticOperator_OtherAccess().getAlternatives()); }
(rule__ArithmeticOperator_Other__Alternatives)
{ after(grammarAccess.getArithmeticOperator_OtherAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PreIncrementPosition
rulePreIncrementPosition
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementPositionAccess().getPREEnumLiteralDeclaration()); }
(	'+' 
)
{ after(grammarAccess.getPreIncrementPositionAccess().getPREEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PreDecrementPosition
rulePreDecrementPosition
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreDecrementPositionAccess().getPREEnumLiteralDeclaration()); }
(	'-' 
)
{ after(grammarAccess.getPreDecrementPositionAccess().getPREEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PostIncrementPosition
rulePostIncrementPosition
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementPositionAccess().getPOSTEnumLiteralDeclaration()); }
(	'+' 
)
{ after(grammarAccess.getPostIncrementPositionAccess().getPOSTEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PostDecrementPosition
rulePostDecrementPosition
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostDecrementPositionAccess().getPOSTEnumLiteralDeclaration()); }
(	'-' 
)
{ after(grammarAccess.getPostDecrementPositionAccess().getPOSTEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule IncrementOperator
ruleIncrementOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncrementOperatorAccess().getINCREMENTEnumLiteralDeclaration()); }
(	'+' 
)
{ after(grammarAccess.getIncrementOperatorAccess().getINCREMENTEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule DecrementOperator
ruleDecrementOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecrementOperatorAccess().getDECREMENTEnumLiteralDeclaration()); }
(	'-' 
)
{ after(grammarAccess.getDecrementOperatorAccess().getDECREMENTEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__NTA__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getXmlVersion10EncodingUtf8Keyword_0_0()); }

	'<?xml version="1.0" encoding="utf-8"?>' 

{ after(grammarAccess.getNTAAccess().getXmlVersion10EncodingUtf8Keyword_0_0()); }
)

    |(
{ before(grammarAccess.getNTAAccess().getXmlVersion10EncodingUtf8Keyword_0_1()); }

	'<?xml version=\'1.0\' encoding=\'utf-8\'?>' 

{ after(grammarAccess.getNTAAccess().getXmlVersion10EncodingUtf8Keyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getSolidusGreaterThanSignKeyword_3_0()); }

	'/>' 

{ after(grammarAccess.getLocationAccess().getSolidusGreaterThanSignKeyword_3_0()); }
)

    |(
{ before(grammarAccess.getLocationAccess().getGroup_3_1()); }
(rule__Location__Group_3_1__0)
{ after(grammarAccess.getLocationAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__TypeDefinitionAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getTypeDefinitionRangeTypeSpecificationParserRuleCall_2_0_0()); }
	ruleRangeTypeSpecification
{ after(grammarAccess.getSelectionAccess().getTypeDefinitionRangeTypeSpecificationParserRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getSelectionAccess().getTypeDefinitionScalarTypeSpecificationParserRuleCall_2_0_1()); }
	ruleScalarTypeSpecification
{ after(grammarAccess.getSelectionAccess().getTypeDefinitionScalarTypeSpecificationParserRuleCall_2_0_1()); }
)

    |(
{ before(grammarAccess.getSelectionAccess().getTypeDefinitionSimpleIdentifierExpressionParserRuleCall_2_0_2()); }
	ruleSimpleIdentifierExpression
{ after(grammarAccess.getSelectionAccess().getTypeDefinitionSimpleIdentifierExpressionParserRuleCall_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclarations__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDeclarationsAccess().getDeclarationAssignment_1_0()); }
(rule__GlobalDeclarations__DeclarationAssignment_1_0)
{ after(grammarAccess.getGlobalDeclarationsAccess().getDeclarationAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getGlobalDeclarationsAccess().getChannelPriorityAssignment_1_1()); }
(rule__GlobalDeclarations__ChannelPriorityAssignment_1_1)
{ after(grammarAccess.getGlobalDeclarationsAccess().getChannelPriorityAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclarations__DeclarationAlternatives_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDeclarationsAccess().getDeclarationTypedDeclarationParserRuleCall_1_0_0_0()); }
	ruleTypedDeclaration
{ after(grammarAccess.getGlobalDeclarationsAccess().getDeclarationTypedDeclarationParserRuleCall_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getGlobalDeclarationsAccess().getDeclarationTypeDeclarationParserRuleCall_1_0_0_1()); }
	ruleTypeDeclaration
{ after(grammarAccess.getGlobalDeclarationsAccess().getDeclarationTypeDeclarationParserRuleCall_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalDeclarations__DeclarationAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalDeclarationsAccess().getDeclarationTypedDeclarationParserRuleCall_1_0_0()); }
	ruleTypedDeclaration
{ after(grammarAccess.getLocalDeclarationsAccess().getDeclarationTypedDeclarationParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getLocalDeclarationsAccess().getDeclarationTypeDeclarationParserRuleCall_1_0_1()); }
	ruleTypeDeclaration
{ after(grammarAccess.getLocalDeclarationsAccess().getDeclarationTypeDeclarationParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclarations__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationsAccess().getDeclarationAssignment_1_0()); }
(rule__SystemDeclarations__DeclarationAssignment_1_0)
{ after(grammarAccess.getSystemDeclarationsAccess().getDeclarationAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getSystemDeclarationsAccess().getSystemAssignment_1_1()); }
(rule__SystemDeclarations__SystemAssignment_1_1)
{ after(grammarAccess.getSystemDeclarationsAccess().getSystemAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getSystemDeclarationsAccess().getProgressMeasureAssignment_1_2()); }
(rule__SystemDeclarations__ProgressMeasureAssignment_1_2)
{ after(grammarAccess.getSystemDeclarationsAccess().getProgressMeasureAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclarations__DeclarationAlternatives_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationsAccess().getDeclarationTypedDeclarationParserRuleCall_1_0_0_0()); }
	ruleTypedDeclaration
{ after(grammarAccess.getSystemDeclarationsAccess().getDeclarationTypedDeclarationParserRuleCall_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getSystemDeclarationsAccess().getDeclarationTypeDeclarationParserRuleCall_1_0_0_1()); }
	ruleTypeDeclaration
{ after(grammarAccess.getSystemDeclarationsAccess().getDeclarationTypeDeclarationParserRuleCall_1_0_0_1()); }
)

    |(
{ before(grammarAccess.getSystemDeclarationsAccess().getDeclarationTemplateDeclarationParserRuleCall_1_0_0_2()); }
	ruleTemplateDeclaration
{ after(grammarAccess.getSystemDeclarationsAccess().getDeclarationTemplateDeclarationParserRuleCall_1_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedDeclarationAccess().getElementsAssignment_1_0()); }
(rule__TypedDeclaration__ElementsAssignment_1_0)
{ after(grammarAccess.getTypedDeclarationAccess().getElementsAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getTypedDeclarationAccess().getGroup_1_1()); }
(rule__TypedDeclaration__Group_1_1__0)
{ after(grammarAccess.getTypedDeclarationAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__IndexAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getIndexExpressionParserRuleCall_1_1_0_0()); }
	ruleExpression
{ after(grammarAccess.getVariableAccess().getIndexExpressionParserRuleCall_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getIndexScalarTypeSpecificationParserRuleCall_1_1_0_1()); }
	ruleScalarTypeSpecification
{ after(grammarAccess.getVariableAccess().getIndexScalarTypeSpecificationParserRuleCall_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitializerAccess().getArrayInitializerParserRuleCall_0()); }
	ruleArrayInitializer
{ after(grammarAccess.getInitializerAccess().getArrayInitializerParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInitializerAccess().getExpressionInitializerParserRuleCall_1()); }
	ruleExpressionInitializer
{ after(grammarAccess.getInitializerAccess().getExpressionInitializerParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeExpressionAccess().getRangeTypeSpecificationParserRuleCall_0()); }
	ruleRangeTypeSpecification
{ after(grammarAccess.getTypeExpressionAccess().getRangeTypeSpecificationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeExpressionAccess().getScalarTypeSpecificationParserRuleCall_1()); }
	ruleScalarTypeSpecification
{ after(grammarAccess.getTypeExpressionAccess().getScalarTypeSpecificationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeExpressionAccess().getStructTypeSpecificationParserRuleCall_2()); }
	ruleStructTypeSpecification
{ after(grammarAccess.getTypeExpressionAccess().getStructTypeSpecificationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTypeExpressionAccess().getSimpleIdentifierExpressionParserRuleCall_3()); }
	ruleSimpleIdentifierExpression
{ after(grammarAccess.getTypeExpressionAccess().getSimpleIdentifierExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTypeExpressionAccess().getChannelPrefixExpressionParserRuleCall_4()); }
	ruleChannelPrefixExpression
{ after(grammarAccess.getTypeExpressionAccess().getChannelPrefixExpressionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getTypeExpressionAccess().getDataPrefixExpressionParserRuleCall_5()); }
	ruleDataPrefixExpression
{ after(grammarAccess.getTypeExpressionAccess().getDataPrefixExpressionParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPrefixExpression__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPrefixExpressionAccess().getGroup_0_0()); }
(rule__ChannelPrefixExpression__Group_0_0__0)
{ after(grammarAccess.getChannelPrefixExpressionAccess().getGroup_0_0()); }
)

    |(
{ before(grammarAccess.getChannelPrefixExpressionAccess().getGroup_0_1()); }
(rule__ChannelPrefixExpression__Group_0_1__0)
{ after(grammarAccess.getChannelPrefixExpressionAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataPrefixExpression__DataTypeExpressionAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataPrefixExpressionAccess().getDataTypeExpressionRangeTypeSpecificationParserRuleCall_1_0_0()); }
	ruleRangeTypeSpecification
{ after(grammarAccess.getDataPrefixExpressionAccess().getDataTypeExpressionRangeTypeSpecificationParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getDataPrefixExpressionAccess().getDataTypeExpressionScalarTypeSpecificationParserRuleCall_1_0_1()); }
	ruleScalarTypeSpecification
{ after(grammarAccess.getDataPrefixExpressionAccess().getDataTypeExpressionScalarTypeSpecificationParserRuleCall_1_0_1()); }
)

    |(
{ before(grammarAccess.getDataPrefixExpressionAccess().getDataTypeExpressionStructTypeSpecificationParserRuleCall_1_0_2()); }
	ruleStructTypeSpecification
{ after(grammarAccess.getDataPrefixExpressionAccess().getDataTypeExpressionStructTypeSpecificationParserRuleCall_1_0_2()); }
)

    |(
{ before(grammarAccess.getDataPrefixExpressionAccess().getDataTypeExpressionSimpleIdentifierExpressionParserRuleCall_1_0_3()); }
	ruleSimpleIdentifierExpression
{ after(grammarAccess.getDataPrefixExpressionAccess().getDataTypeExpressionSimpleIdentifierExpressionParserRuleCall_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityItem__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPriorityItemAccess().getDefaultItemParserRuleCall_0()); }
	ruleDefaultItem
{ after(grammarAccess.getPriorityItemAccess().getDefaultItemParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPriorityItemAccess().getChannelItemParserRuleCall_1()); }
	ruleChannelItem
{ after(grammarAccess.getPriorityItemAccess().getChannelItemParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getBlockParserRuleCall_0()); }
	ruleBlock
{ after(grammarAccess.getStatementAccess().getBlockParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getEmptyStatementParserRuleCall_1()); }
	ruleEmptyStatement
{ after(grammarAccess.getStatementAccess().getEmptyStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getExpressionStatementParserRuleCall_2()); }
	ruleExpressionStatement
{ after(grammarAccess.getStatementAccess().getExpressionStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getForLoopParserRuleCall_3()); }
	ruleForLoop
{ after(grammarAccess.getStatementAccess().getForLoopParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getIterationParserRuleCall_4()); }
	ruleIteration
{ after(grammarAccess.getStatementAccess().getIterationParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getWhileLoopParserRuleCall_5()); }
	ruleWhileLoop
{ after(grammarAccess.getStatementAccess().getWhileLoopParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getDoWhileLoopParserRuleCall_6()); }
	ruleDoWhileLoop
{ after(grammarAccess.getStatementAccess().getDoWhileLoopParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_7()); }
	ruleIfStatement
{ after(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_8()); }
	ruleReturnStatement
{ after(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockDeclarations__DeclarationAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockDeclarationsAccess().getDeclarationBlockTypedDeclarationParserRuleCall_1_0_0()); }
	ruleBlockTypedDeclaration
{ after(grammarAccess.getBlockDeclarationsAccess().getDeclarationBlockTypedDeclarationParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getBlockDeclarationsAccess().getDeclarationTypeDeclarationParserRuleCall_1_0_1()); }
	ruleTypeDeclaration
{ after(grammarAccess.getBlockDeclarationsAccess().getDeclarationTypeDeclarationParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuantificationExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantificationExpressionAccess().getGroup_0()); }
(rule__QuantificationExpression__Group_0__0)
{ after(grammarAccess.getQuantificationExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getQuantificationExpressionAccess().getLogicalExpression_OrImplyParserRuleCall_1()); }
	ruleLogicalExpression_OrImply
{ after(grammarAccess.getQuantificationExpressionAccess().getLogicalExpression_OrImplyParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegationExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationExpressionAccess().getGroup_0()); }
(rule__NegationExpression__Group_0__0)
{ after(grammarAccess.getNegationExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNegationExpressionAccess().getAssignmentExpressionParserRuleCall_1()); }
	ruleAssignmentExpression
{ after(grammarAccess.getNegationExpressionAccess().getAssignmentExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegationExpression_Alternative__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationExpression_AlternativeAccess().getGroup_0()); }
(rule__NegationExpression_Alternative__Group_0__0)
{ after(grammarAccess.getNegationExpression_AlternativeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNegationExpression_AlternativeAccess().getIncrementDecrementExpressionParserRuleCall_1()); }
	ruleIncrementDecrementExpression
{ after(grammarAccess.getNegationExpression_AlternativeAccess().getIncrementDecrementExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementDecrementExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementDecrementExpressionAccess().getPostIncrementDecrementExpressionParserRuleCall_0()); }
	rulePostIncrementDecrementExpression
{ after(grammarAccess.getPreIncrementDecrementExpressionAccess().getPostIncrementDecrementExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPreIncrementDecrementExpressionAccess().getGroup_1()); }
(rule__PreIncrementDecrementExpression__Group_1__0)
{ after(grammarAccess.getPreIncrementDecrementExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementDecrementExpression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementDecrementExpressionAccess().getGroup_1_1_0()); }
(rule__PreIncrementDecrementExpression__Group_1_1_0__0)
{ after(grammarAccess.getPreIncrementDecrementExpressionAccess().getGroup_1_1_0()); }
)

    |(
{ before(grammarAccess.getPreIncrementDecrementExpressionAccess().getGroup_1_1_1()); }
(rule__PreIncrementDecrementExpression__Group_1_1_1__0)
{ after(grammarAccess.getPreIncrementDecrementExpressionAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementDecrementExpression__Alternatives_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementDecrementExpressionAccess().getGroup_1_0_1_0()); }
(rule__PostIncrementDecrementExpression__Group_1_0_1_0__0)
{ after(grammarAccess.getPostIncrementDecrementExpressionAccess().getGroup_1_0_1_0()); }
)

    |(
{ before(grammarAccess.getPostIncrementDecrementExpressionAccess().getGroup_1_0_1_1()); }
(rule__PostIncrementDecrementExpression__Group_1_0_1_1__0)
{ after(grammarAccess.getPostIncrementDecrementExpressionAccess().getGroup_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatingExpressions__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminatingExpressionsAccess().getIdentifierExpressionParserRuleCall_0()); }
	ruleIdentifierExpression
{ after(grammarAccess.getTerminatingExpressionsAccess().getIdentifierExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTerminatingExpressionsAccess().getFunctionCallExpressionParserRuleCall_1()); }
	ruleFunctionCallExpression
{ after(grammarAccess.getTerminatingExpressionsAccess().getFunctionCallExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTerminatingExpressionsAccess().getLiteralExpressionParserRuleCall_2()); }
	ruleLiteralExpression
{ after(grammarAccess.getTerminatingExpressionsAccess().getLiteralExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTerminatingExpressionsAccess().getGroup_3()); }
(rule__TerminatingExpressions__Group_3__0)
{ after(grammarAccess.getTerminatingExpressionsAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpressionText__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionTextAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getLiteralExpressionTextAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getLiteralExpressionTextAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getLiteralExpressionTextAccess().getFalseKeyword_1()); }
)

    |(
{ before(grammarAccess.getLiteralExpressionTextAccess().getGroup_2()); }
(rule__LiteralExpressionText__Group_2__0)
{ after(grammarAccess.getLiteralExpressionTextAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UPPAAL_TYPE_OR_IDENTIFIER__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getUPPAAL_IDENTIFIERParserRuleCall_0()); }
	ruleUPPAAL_IDENTIFIER
{ after(grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getUPPAAL_IDENTIFIERParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getIntKeyword_1()); }

	'int' 

{ after(grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getIntKeyword_1()); }
)

    |(
{ before(grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getBoolKeyword_2()); }

	'bool' 

{ after(grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getBoolKeyword_2()); }
)

    |(
{ before(grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getVoidKeyword_3()); }

	'void' 

{ after(grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getVoidKeyword_3()); }
)

    |(
{ before(grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getChanKeyword_4()); }

	'chan' 

{ after(grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getChanKeyword_4()); }
)

    |(
{ before(grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getClockKeyword_5()); }

	'clock' 

{ after(grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getClockKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UPPAAL_IDENTIFIER__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUPPAAL_IDENTIFIERAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getUPPAAL_IDENTIFIERAccess().getIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUPPAAL_IDENTIFIERAccess().getXML_KEYWORDSParserRuleCall_1()); }
	ruleXML_KEYWORDS
{ after(grammarAccess.getUPPAAL_IDENTIFIERAccess().getXML_KEYWORDSParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UPPAAL_KEYWORDS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getChanKeyword_0()); }

	'chan' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getChanKeyword_0()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getClockKeyword_1()); }

	'clock' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getClockKeyword_1()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getBoolKeyword_2()); }

	'bool' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getBoolKeyword_2()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getIntKeyword_3()); }

	'int' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getIntKeyword_3()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getCommitKeyword_4()); }

	'commit' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getCommitKeyword_4()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getConstKeyword_5()); }

	'const' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getConstKeyword_5()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getUrgentKeyword_6()); }

	'urgent' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getUrgentKeyword_6()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getBroadcastKeyword_7()); }

	'broadcast' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getBroadcastKeyword_7()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getInitKeyword_8()); }

	'init' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getInitKeyword_8()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getProcessKeyword_9()); }

	'process' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getProcessKeyword_9()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getStateKeyword_10()); }

	'state' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getStateKeyword_10()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getGuardKeyword_11()); }

	'guard' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getGuardKeyword_11()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getSyncKeyword_12()); }

	'sync' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getSyncKeyword_12()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getAssignKeyword_13()); }

	'assign' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getAssignKeyword_13()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getSystemKeyword_14()); }

	'system' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getSystemKeyword_14()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getTransKeyword_15()); }

	'trans' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getTransKeyword_15()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getDeadlockKeyword_16()); }

	'deadlock' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getDeadlockKeyword_16()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getAndKeyword_17()); }

	'and' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getAndKeyword_17()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getOrKeyword_18()); }

	'or' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getOrKeyword_18()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getNotKeyword_19()); }

	'not' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getNotKeyword_19()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getImplyKeyword_20()); }

	'imply' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getImplyKeyword_20()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getTrueKeyword_21()); }

	'true' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getTrueKeyword_21()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getFalseKeyword_22()); }

	'false' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getFalseKeyword_22()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getForKeyword_23()); }

	'for' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getForKeyword_23()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getForallKeyword_24()); }

	'forall' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getForallKeyword_24()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getExistsKeyword_25()); }

	'exists' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getExistsKeyword_25()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getWhileKeyword_26()); }

	'while' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getWhileKeyword_26()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getDoKeyword_27()); }

	'do' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getDoKeyword_27()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getIfKeyword_28()); }

	'if' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getIfKeyword_28()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getElseKeyword_29()); }

	'else' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getElseKeyword_29()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getReturnKeyword_30()); }

	'return' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getReturnKeyword_30()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getTypedefKeyword_31()); }

	'typedef' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getTypedefKeyword_31()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getStructKeyword_32()); }

	'struct' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getStructKeyword_32()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getRateKeyword_33()); }

	'rate' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getRateKeyword_33()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getBefore_updateKeyword_34()); }

	'before_update' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getBefore_updateKeyword_34()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getAfter_updateKeyword_35()); }

	'after_update' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getAfter_updateKeyword_35()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getMetaKeyword_36()); }

	'meta' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getMetaKeyword_36()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getPriorityKeyword_37()); }

	'priority' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getPriorityKeyword_37()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getProgressKeyword_38()); }

	'progress' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getProgressKeyword_38()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getScalarKeyword_39()); }

	'scalar' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getScalarKeyword_39()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getSelectKeyword_40()); }

	'select' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getSelectKeyword_40()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getVoidKeyword_41()); }

	'void' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getVoidKeyword_41()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getSwitchKeyword_42()); }

	'switch' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getSwitchKeyword_42()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getCaseKeyword_43()); }

	'case' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getCaseKeyword_43()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getContinueKeyword_44()); }

	'continue' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getContinueKeyword_44()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getBreakKeyword_45()); }

	'break' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getBreakKeyword_45()); }
)

    |(
{ before(grammarAccess.getUPPAAL_KEYWORDSAccess().getDefaultKeyword_46()); }

	'default' 

{ after(grammarAccess.getUPPAAL_KEYWORDSAccess().getDefaultKeyword_46()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UPPAAL_STRUCTURE_KEYWORDS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLeftSquareBracketKeyword_0()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getRightSquareBracketKeyword_1()); }

	']' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getRightSquareBracketKeyword_1()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLtKeyword_2()); }

	'&lt;' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLtKeyword_2()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getGtKeyword_3()); }

	'&gt' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getGtKeyword_3()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getSemicolonKeyword_4()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getCommaKeyword_5()); }

	',' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getCommaKeyword_5()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLeftCurlyBracketKeyword_6()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getRightCurlyBracketKeyword_7()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLeftParenthesisKeyword_8()); }

	'(' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLeftParenthesisKeyword_8()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getRightParenthesisKeyword_9()); }

	')' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getRightParenthesisKeyword_9()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getQuestionMarkKeyword_10()); }

	'?' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getQuestionMarkKeyword_10()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getExclamationMarkKeyword_11()); }

	'!' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getExclamationMarkKeyword_11()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAsteriskKeyword_12()); }

	'*' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAsteriskKeyword_12()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getPercentSignKeyword_13()); }

	'%' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getPercentSignKeyword_13()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getSolidusKeyword_14()); }

	'/' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getSolidusKeyword_14()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getPlusSignKeyword_15()); }

	'+' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getPlusSignKeyword_15()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getHyphenMinusKeyword_16()); }

	'-' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getHyphenMinusKeyword_16()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLtLtKeyword_17()); }

	'&lt;&lt;' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLtLtKeyword_17()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getGtGtKeyword_18()); }

	'&gt;&gt' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getGtGtKeyword_18()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLtKeyword_19()); }

	'&lt;?' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLtKeyword_19()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getGtKeyword_20()); }

	'&gt;?' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getGtKeyword_20()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLtKeyword_21()); }

	'&lt;=' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLtKeyword_21()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getGtKeyword_22()); }

	'&gt;=' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getGtKeyword_22()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getEqualsSignEqualsSignKeyword_23()); }

	'==' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getEqualsSignEqualsSignKeyword_23()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getExclamationMarkEqualsSignKeyword_24()); }

	'!=' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getExclamationMarkEqualsSignKeyword_24()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAmpersandKeyword_25()); }

	'&' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAmpersandKeyword_25()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAmpKeyword_26()); }

	'&amp;' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAmpKeyword_26()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getCircumflexAccentKeyword_27()); }

	'^' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getCircumflexAccentKeyword_27()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getVerticalLineKeyword_28()); }

	'|' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getVerticalLineKeyword_28()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAmpersandAmpersandKeyword_29()); }

	'&&' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAmpersandAmpersandKeyword_29()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAmpAmpKeyword_30()); }

	'&amp;&amp;' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAmpAmpKeyword_30()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getVerticalLineVerticalLineKeyword_31()); }

	'||' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getVerticalLineVerticalLineKeyword_31()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getEqualsSignKeyword_32()); }

	'=' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getEqualsSignKeyword_32()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getPlusSignEqualsSignKeyword_33()); }

	'+=' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getPlusSignEqualsSignKeyword_33()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getHyphenMinusEqualsSignKeyword_34()); }

	'-=' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getHyphenMinusEqualsSignKeyword_34()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAsteriskEqualsSignKeyword_35()); }

	'*=' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAsteriskEqualsSignKeyword_35()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getSolidusEqualsSignKeyword_36()); }

	'/=' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getSolidusEqualsSignKeyword_36()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getPercentSignEqualsSignKeyword_37()); }

	'%=' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getPercentSignEqualsSignKeyword_37()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getVerticalLineEqualsSignKeyword_38()); }

	'|=' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getVerticalLineEqualsSignKeyword_38()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAmpersandEqualsSignKeyword_39()); }

	'&=' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAmpersandEqualsSignKeyword_39()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getCircumflexAccentEqualsSignKeyword_40()); }

	'^=' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getCircumflexAccentEqualsSignKeyword_40()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLtLtKeyword_41()); }

	'&lt;&lt;=' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLtLtKeyword_41()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getGtGtKeyword_42()); }

	'&gt;&gt;=' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getGtGtKeyword_42()); }
)

    |(
{ before(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getColonKeyword_43()); }

	':' 

{ after(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getColonKeyword_43()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ANY_TOKEN_BUT_XML_CLOSE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getXML_KEYWORDSParserRuleCall_0()); }
	ruleXML_KEYWORDS
{ after(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getXML_KEYWORDSParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getXML_ATTRIBUTE_KEYWORDSParserRuleCall_1()); }
	ruleXML_ATTRIBUTE_KEYWORDS
{ after(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getXML_ATTRIBUTE_KEYWORDSParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getXML_STRUCTURE_KEYWORDSParserRuleCall_2()); }
	ruleXML_STRUCTURE_KEYWORDS
{ after(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getXML_STRUCTURE_KEYWORDSParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getUPPAAL_KEYWORDSParserRuleCall_3()); }
	ruleUPPAAL_KEYWORDS
{ after(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getUPPAAL_KEYWORDSParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getUPPAAL_STRUCTURE_KEYWORDSParserRuleCall_4()); }
	ruleUPPAAL_STRUCTURE_KEYWORDS
{ after(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getUPPAAL_STRUCTURE_KEYWORDSParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getSTRINGTerminalRuleCall_5()); }
	RULE_STRING
{ after(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getSTRINGTerminalRuleCall_5()); }
)

    |(
{ before(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getIDTerminalRuleCall_6()); }
	RULE_ID
{ after(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getIDTerminalRuleCall_6()); }
)

    |(
{ before(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getWSTerminalRuleCall_7()); }
	RULE_WS
{ after(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getWSTerminalRuleCall_7()); }
)

    |(
{ before(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getANY_OTHERTerminalRuleCall_8()); }
	RULE_ANY_OTHER
{ after(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getANY_OTHERTerminalRuleCall_8()); }
)

    |(
{ before(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getINTTerminalRuleCall_9()); }
	RULE_INT
{ after(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getINTTerminalRuleCall_9()); }
)

    |(
{ before(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getSINGLE_LINE_COMMENTTerminalRuleCall_10()); }
	RULE_SINGLE_LINE_COMMENT
{ after(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getSINGLE_LINE_COMMENTTerminalRuleCall_10()); }
)

    |(
{ before(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getMULTI_LINE_COMMENTTerminalRuleCall_11()); }
	RULE_MULTI_LINE_COMMENT
{ after(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getMULTI_LINE_COMMENTTerminalRuleCall_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XML_STRUCTURE_KEYWORDS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getLessThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getGreaterThanSignKeyword_1()); }

	'>' 

{ after(grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getGreaterThanSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getSolidusGreaterThanSignKeyword_2()); }

	'/>' 

{ after(grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getSolidusGreaterThanSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getXmlVersion10EncodingUtf8Keyword_3()); }

	'<?xml version="1.0" encoding="utf-8"?>' 

{ after(grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getXmlVersion10EncodingUtf8Keyword_3()); }
)

    |(
{ before(grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getXmlVersion10EncodingUtf8Keyword_4()); }

	'<?xml version=\'1.0\' encoding=\'utf-8\'?>' 

{ after(grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getXmlVersion10EncodingUtf8Keyword_4()); }
)

    |(
{ before(grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getDOCTYPENtaPUBLICUppaalTeamDTDFlatSystem11ENHttpWwwItUuSeResearchGroupDartsUppaalFlat1_1DtdKeyword_5()); }

	'<!DOCTYPE nta PUBLIC \'-//Uppaal Team//DTD Flat System 1.1//EN\' \'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd\'>' 

{ after(grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getDOCTYPENtaPUBLICUppaalTeamDTDFlatSystem11ENHttpWwwItUuSeResearchGroupDartsUppaalFlat1_1DtdKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XML_KEYWORDS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXML_KEYWORDSAccess().getImportsKeyword_0()); }

	'imports' 

{ after(grammarAccess.getXML_KEYWORDSAccess().getImportsKeyword_0()); }
)

    |(
{ before(grammarAccess.getXML_KEYWORDSAccess().getNtaKeyword_1()); }

	'nta' 

{ after(grammarAccess.getXML_KEYWORDSAccess().getNtaKeyword_1()); }
)

    |(
{ before(grammarAccess.getXML_KEYWORDSAccess().getTemplateKeyword_2()); }

	'template' 

{ after(grammarAccess.getXML_KEYWORDSAccess().getTemplateKeyword_2()); }
)

    |(
{ before(grammarAccess.getXML_KEYWORDSAccess().getNameKeyword_3()); }

	'name' 

{ after(grammarAccess.getXML_KEYWORDSAccess().getNameKeyword_3()); }
)

    |(
{ before(grammarAccess.getXML_KEYWORDSAccess().getRefKeyword_4()); }

	'ref' 

{ after(grammarAccess.getXML_KEYWORDSAccess().getRefKeyword_4()); }
)

    |(
{ before(grammarAccess.getXML_KEYWORDSAccess().getLocationKeyword_5()); }

	'location' 

{ after(grammarAccess.getXML_KEYWORDSAccess().getLocationKeyword_5()); }
)

    |(
{ before(grammarAccess.getXML_KEYWORDSAccess().getIdKeyword_6()); }

	'id' 

{ after(grammarAccess.getXML_KEYWORDSAccess().getIdKeyword_6()); }
)

    |(
{ before(grammarAccess.getXML_KEYWORDSAccess().getColorKeyword_7()); }

	'color' 

{ after(grammarAccess.getXML_KEYWORDSAccess().getColorKeyword_7()); }
)

    |(
{ before(grammarAccess.getXML_KEYWORDSAccess().getTransitionKeyword_8()); }

	'transition' 

{ after(grammarAccess.getXML_KEYWORDSAccess().getTransitionKeyword_8()); }
)

    |(
{ before(grammarAccess.getXML_KEYWORDSAccess().getSourceKeyword_9()); }

	'source' 

{ after(grammarAccess.getXML_KEYWORDSAccess().getSourceKeyword_9()); }
)

    |(
{ before(grammarAccess.getXML_KEYWORDSAccess().getTargetKeyword_10()); }

	'target' 

{ after(grammarAccess.getXML_KEYWORDSAccess().getTargetKeyword_10()); }
)

    |(
{ before(grammarAccess.getXML_KEYWORDSAccess().getNailKeyword_11()); }

	'nail' 

{ after(grammarAccess.getXML_KEYWORDSAccess().getNailKeyword_11()); }
)

    |(
{ before(grammarAccess.getXML_KEYWORDSAccess().getLabelKeyword_12()); }

	'label' 

{ after(grammarAccess.getXML_KEYWORDSAccess().getLabelKeyword_12()); }
)

    |(
{ before(grammarAccess.getXML_KEYWORDSAccess().getKindKeyword_13()); }

	'kind' 

{ after(grammarAccess.getXML_KEYWORDSAccess().getKindKeyword_13()); }
)

    |(
{ before(grammarAccess.getXML_KEYWORDSAccess().getDeclarationKeyword_14()); }

	'declaration' 

{ after(grammarAccess.getXML_KEYWORDSAccess().getDeclarationKeyword_14()); }
)

    |(
{ before(grammarAccess.getXML_KEYWORDSAccess().getInstantiationKeyword_15()); }

	'instantiation' 

{ after(grammarAccess.getXML_KEYWORDSAccess().getInstantiationKeyword_15()); }
)

    |(
{ before(grammarAccess.getXML_KEYWORDSAccess().getParameterKeyword_16()); }

	'parameter' 

{ after(grammarAccess.getXML_KEYWORDSAccess().getParameterKeyword_16()); }
)

    |(
{ before(grammarAccess.getXML_KEYWORDSAccess().getCommittedKeyword_17()); }

	'committed' 

{ after(grammarAccess.getXML_KEYWORDSAccess().getCommittedKeyword_17()); }
)

    |(
{ before(grammarAccess.getXML_KEYWORDSAccess().getXKeyword_18()); }

	'x' 

{ after(grammarAccess.getXML_KEYWORDSAccess().getXKeyword_18()); }
)

    |(
{ before(grammarAccess.getXML_KEYWORDSAccess().getYKeyword_19()); }

	'y' 

{ after(grammarAccess.getXML_KEYWORDSAccess().getYKeyword_19()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XML_ATTRIBUTE_KEYWORDS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXML_ATTRIBUTE_KEYWORDSAccess().getSynchronisationKeyword_0()); }

	'"synchronisation"' 

{ after(grammarAccess.getXML_ATTRIBUTE_KEYWORDSAccess().getSynchronisationKeyword_0()); }
)

    |(
{ before(grammarAccess.getXML_ATTRIBUTE_KEYWORDSAccess().getGuardKeyword_1()); }

	'"guard"' 

{ after(grammarAccess.getXML_ATTRIBUTE_KEYWORDSAccess().getGuardKeyword_1()); }
)

    |(
{ before(grammarAccess.getXML_ATTRIBUTE_KEYWORDSAccess().getAssignmentKeyword_2()); }

	'"assignment"' 

{ after(grammarAccess.getXML_ATTRIBUTE_KEYWORDSAccess().getAssignmentKeyword_2()); }
)

    |(
{ before(grammarAccess.getXML_ATTRIBUTE_KEYWORDSAccess().getInvariantKeyword_3()); }

	'"invariant"' 

{ after(grammarAccess.getXML_ATTRIBUTE_KEYWORDSAccess().getInvariantKeyword_3()); }
)

    |(
{ before(grammarAccess.getXML_ATTRIBUTE_KEYWORDSAccess().getCommentsKeyword_4()); }

	'"comments"' 

{ after(grammarAccess.getXML_ATTRIBUTE_KEYWORDSAccess().getCommentsKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocationKind__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationKindAccess().getURGENTEnumLiteralDeclaration_0()); }
(	'<urgent/>' 
)
{ after(grammarAccess.getLocationKindAccess().getURGENTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getLocationKindAccess().getCOMMITEDEnumLiteralDeclaration_1()); }
(	'<committed/>' 
)
{ after(grammarAccess.getLocationKindAccess().getCOMMITEDEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizationKind__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizationKindAccess().getSENDEnumLiteralDeclaration_0()); }
(	'!' 
)
{ after(grammarAccess.getSynchronizationKindAccess().getSENDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getSynchronizationKindAccess().getRECEIVEEnumLiteralDeclaration_1()); }
(	'?' 
)
{ after(grammarAccess.getSynchronizationKindAccess().getRECEIVEEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataVariablePrefix__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataVariablePrefixAccess().getCONSTEnumLiteralDeclaration_0()); }
(	'const' 
)
{ after(grammarAccess.getDataVariablePrefixAccess().getCONSTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getDataVariablePrefixAccess().getMETAEnumLiteralDeclaration_1()); }
(	'meta' 
)
{ after(grammarAccess.getDataVariablePrefixAccess().getMETAEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Quantifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantifierAccess().getUNIVERSALEnumLiteralDeclaration_0()); }
(	'forall' 
)
{ after(grammarAccess.getQuantifierAccess().getUNIVERSALEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getQuantifierAccess().getEXISTENTIALEnumLiteralDeclaration_1()); }
(	'exists' 
)
{ after(grammarAccess.getQuantifierAccess().getEXISTENTIALEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperator_OrImply__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOperator_OrImplyAccess().getOREnumLiteralDeclaration_0()); }
(	'or' 
)
{ after(grammarAccess.getLogicalOperator_OrImplyAccess().getOREnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getLogicalOperator_OrImplyAccess().getIMPLYEnumLiteralDeclaration_1()); }
(	'imply' 
)
{ after(grammarAccess.getLogicalOperator_OrImplyAccess().getIMPLYEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
(	'=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getEQUALEnumLiteralDeclaration_1()); }
(	':=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getEQUALEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getPLUS_EQUALEnumLiteralDeclaration_2()); }
(	'+=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getPLUS_EQUALEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getMINUS_EQUALEnumLiteralDeclaration_3()); }
(	'-=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getMINUS_EQUALEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getTIMES_EQUALEnumLiteralDeclaration_4()); }
(	'*=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getTIMES_EQUALEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getDIVIDE_EQUALEnumLiteralDeclaration_5()); }
(	'/=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getDIVIDE_EQUALEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getMODULO_EQUALEnumLiteralDeclaration_6()); }
(	'%=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getMODULO_EQUALEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getBIT_OR_EQUALEnumLiteralDeclaration_7()); }
(	'|=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getBIT_OR_EQUALEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getBIT_AND_EQUALEnumLiteralDeclaration_8()); }
(	'&=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getBIT_AND_EQUALEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getBIT_XOR_EQUALEnumLiteralDeclaration_9()); }
(	'^=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getBIT_XOR_EQUALEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getBIT_LEFT_EQUALEnumLiteralDeclaration_10()); }
(	'&lt;&lt;=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getBIT_LEFT_EQUALEnumLiteralDeclaration_10()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getBIT_RIGHT_EQUALEnumLiteralDeclaration_11()); }
(	'&gt;&gt;=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getBIT_RIGHT_EQUALEnumLiteralDeclaration_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperator_EqualUnequal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperator_EqualUnequalAccess().getEQUALEnumLiteralDeclaration_0()); }
(	'==' 
)
{ after(grammarAccess.getCompareOperator_EqualUnequalAccess().getEQUALEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCompareOperator_EqualUnequalAccess().getUNEQUALEnumLiteralDeclaration_1()); }
(	'!=' 
)
{ after(grammarAccess.getCompareOperator_EqualUnequalAccess().getUNEQUALEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperator_Other__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperator_OtherAccess().getGREATEREnumLiteralDeclaration_0()); }
(	'&gt;' 
)
{ after(grammarAccess.getCompareOperator_OtherAccess().getGREATEREnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCompareOperator_OtherAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_1()); }
(	'&gt;=' 
)
{ after(grammarAccess.getCompareOperator_OtherAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getCompareOperator_OtherAccess().getLESSEnumLiteralDeclaration_2()); }
(	'&lt;' 
)
{ after(grammarAccess.getCompareOperator_OtherAccess().getLESSEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getCompareOperator_OtherAccess().getLESS_OR_EQUALEnumLiteralDeclaration_3()); }
(	'&lt;=' 
)
{ after(grammarAccess.getCompareOperator_OtherAccess().getLESS_OR_EQUALEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinMaxOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinMaxOperatorAccess().getMINEnumLiteralDeclaration_0()); }
(	'&lt;?' 
)
{ after(grammarAccess.getMinMaxOperatorAccess().getMINEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getMinMaxOperatorAccess().getMAXEnumLiteralDeclaration_1()); }
(	'&gt;?' 
)
{ after(grammarAccess.getMinMaxOperatorAccess().getMAXEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitShiftOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitShiftOperatorAccess().getLEFTEnumLiteralDeclaration_0()); }
(	'&lt;&lt;' 
)
{ after(grammarAccess.getBitShiftOperatorAccess().getLEFTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBitShiftOperatorAccess().getRIGHTEnumLiteralDeclaration_1()); }
(	'&gt;&gt' 
)
{ after(grammarAccess.getBitShiftOperatorAccess().getRIGHTEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperator_PlusMinus__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticOperator_PlusMinusAccess().getADDEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getArithmeticOperator_PlusMinusAccess().getADDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getArithmeticOperator_PlusMinusAccess().getSUBTRACTEnumLiteralDeclaration_1()); }
(	'-' 
)
{ after(grammarAccess.getArithmeticOperator_PlusMinusAccess().getSUBTRACTEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperator_Other__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticOperator_OtherAccess().getMULTIPLICATEEnumLiteralDeclaration_0()); }
(	'*' 
)
{ after(grammarAccess.getArithmeticOperator_OtherAccess().getMULTIPLICATEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getArithmeticOperator_OtherAccess().getDIVIDEEnumLiteralDeclaration_1()); }
(	'/' 
)
{ after(grammarAccess.getArithmeticOperator_OtherAccess().getDIVIDEEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getArithmeticOperator_OtherAccess().getMODULOEnumLiteralDeclaration_2()); }
(	'%' 
)
{ after(grammarAccess.getArithmeticOperator_OtherAccess().getMODULOEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__NTA__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group__0__Impl
	rule__NTA__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getAlternatives_0()); }
(rule__NTA__Alternatives_0)
{ after(grammarAccess.getNTAAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group__1__Impl
	rule__NTA__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getDOCTYPENtaPUBLICUppaalTeamDTDFlatSystem11ENHttpWwwItUuSeResearchGroupDartsUppaalFlat1_1DtdKeyword_1()); }

	'<!DOCTYPE nta PUBLIC \'-//Uppaal Team//DTD Flat System 1.1//EN\' \'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd\'>' 

{ after(grammarAccess.getNTAAccess().getDOCTYPENtaPUBLICUppaalTeamDTDFlatSystem11ENHttpWwwItUuSeResearchGroupDartsUppaalFlat1_1DtdKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group__2__Impl
	rule__NTA__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getLessThanSignKeyword_2()); }

	'<' 

{ after(grammarAccess.getNTAAccess().getLessThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group__3__Impl
	rule__NTA__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getNtaKeyword_3()); }

	'nta' 

{ after(grammarAccess.getNTAAccess().getNtaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group__4__Impl
	rule__NTA__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_4()); }

	'>' 

{ after(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group__5__Impl
	rule__NTA__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getGroup_5()); }
(rule__NTA__Group_5__0)*
{ after(grammarAccess.getNTAAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group__6__Impl
	rule__NTA__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getGroup_6()); }
(rule__NTA__Group_6__0)?
{ after(grammarAccess.getNTAAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group__7__Impl
	rule__NTA__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getNTAAccess().getGroup_7()); }
(rule__NTA__Group_7__0)
{ after(grammarAccess.getNTAAccess().getGroup_7()); }
)
(
{ before(grammarAccess.getNTAAccess().getGroup_7()); }
(rule__NTA__Group_7__0)*
{ after(grammarAccess.getNTAAccess().getGroup_7()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group__8__Impl
	rule__NTA__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getGroup_8()); }
(rule__NTA__Group_8__0)?
{ after(grammarAccess.getNTAAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group__9__Impl
	rule__NTA__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getLessThanSignKeyword_9()); }

	'<' 

{ after(grammarAccess.getNTAAccess().getLessThanSignKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group__10__Impl
	rule__NTA__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getSystemKeyword_10()); }

	'system' 

{ after(grammarAccess.getNTAAccess().getSystemKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group__11__Impl
	rule__NTA__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_11()); }

	'>' 

{ after(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group__12__Impl
	rule__NTA__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getSystemDeclarationsAssignment_12()); }
(rule__NTA__SystemDeclarationsAssignment_12)
{ after(grammarAccess.getNTAAccess().getSystemDeclarationsAssignment_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group__13__Impl
	rule__NTA__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getLessThanSignSolidusKeyword_13()); }

	'</' 

{ after(grammarAccess.getNTAAccess().getLessThanSignSolidusKeyword_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group__14__Impl
	rule__NTA__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getSystemKeyword_14()); }

	'system' 

{ after(grammarAccess.getNTAAccess().getSystemKeyword_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group__15__Impl
	rule__NTA__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_15()); }

	'>' 

{ after(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group__16
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group__16__Impl
	rule__NTA__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group__16__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getLessThanSignSolidusKeyword_16()); }

	'</' 

{ after(grammarAccess.getNTAAccess().getLessThanSignSolidusKeyword_16()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group__17
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group__17__Impl
	rule__NTA__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group__17__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getNtaKeyword_17()); }

	'nta' 

{ after(grammarAccess.getNTAAccess().getNtaKeyword_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group__18
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group__18__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group__18__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_18()); }

	'>' 

{ after(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_18()); }
)

;
finally {
	restoreStackSize(stackSize);
}








































rule__NTA__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_5__0__Impl
	rule__NTA__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getLessThanSignKeyword_5_0()); }

	'<' 

{ after(grammarAccess.getNTAAccess().getLessThanSignKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_5__1__Impl
	rule__NTA__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getImportsKeyword_5_1()); }

	'imports' 

{ after(grammarAccess.getNTAAccess().getImportsKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_5__2__Impl
	rule__NTA__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_5_2()); }

	'>' 

{ after(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_5__3__Impl
	rule__NTA__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getANY_TOKEN_BUT_XML_CLOSEParserRuleCall_5_3()); }
(	ruleANY_TOKEN_BUT_XML_CLOSE)*
{ after(grammarAccess.getNTAAccess().getANY_TOKEN_BUT_XML_CLOSEParserRuleCall_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_5__4__Impl
	rule__NTA__Group_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getLessThanSignSolidusKeyword_5_4()); }

	'</' 

{ after(grammarAccess.getNTAAccess().getLessThanSignSolidusKeyword_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_5__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_5__5__Impl
	rule__NTA__Group_5__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_5__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getImportsKeyword_5_5()); }

	'imports' 

{ after(grammarAccess.getNTAAccess().getImportsKeyword_5_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_5__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_5__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_5__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_5_6()); }

	'>' 

{ after(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_5_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__NTA__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_6__0__Impl
	rule__NTA__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getLessThanSignKeyword_6_0()); }

	'<' 

{ after(grammarAccess.getNTAAccess().getLessThanSignKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_6__1__Impl
	rule__NTA__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getDeclarationKeyword_6_1()); }

	'declaration' 

{ after(grammarAccess.getNTAAccess().getDeclarationKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_6__2__Impl
	rule__NTA__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_6_2()); }

	'>' 

{ after(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_6__3__Impl
	rule__NTA__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getGlobalDeclarationsAssignment_6_3()); }
(rule__NTA__GlobalDeclarationsAssignment_6_3)
{ after(grammarAccess.getNTAAccess().getGlobalDeclarationsAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_6__4__Impl
	rule__NTA__Group_6__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getLessThanSignSolidusKeyword_6_4()); }

	'</' 

{ after(grammarAccess.getNTAAccess().getLessThanSignSolidusKeyword_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_6__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_6__5__Impl
	rule__NTA__Group_6__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_6__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getDeclarationKeyword_6_5()); }

	'declaration' 

{ after(grammarAccess.getNTAAccess().getDeclarationKeyword_6_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_6__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_6__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_6__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_6_6()); }

	'>' 

{ after(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_6_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__NTA__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_7__0__Impl
	rule__NTA__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getLessThanSignKeyword_7_0()); }

	'<' 

{ after(grammarAccess.getNTAAccess().getLessThanSignKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_7__1__Impl
	rule__NTA__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getTemplateKeyword_7_1()); }

	'template' 

{ after(grammarAccess.getNTAAccess().getTemplateKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_7__2__Impl
	rule__NTA__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_7_2()); }

	'>' 

{ after(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_7__3__Impl
	rule__NTA__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getTemplateAssignment_7_3()); }
(rule__NTA__TemplateAssignment_7_3)
{ after(grammarAccess.getNTAAccess().getTemplateAssignment_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_7__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_7__4__Impl
	rule__NTA__Group_7__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_7__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getLessThanSignSolidusKeyword_7_4()); }

	'</' 

{ after(grammarAccess.getNTAAccess().getLessThanSignSolidusKeyword_7_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_7__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_7__5__Impl
	rule__NTA__Group_7__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_7__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getTemplateKeyword_7_5()); }

	'template' 

{ after(grammarAccess.getNTAAccess().getTemplateKeyword_7_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_7__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_7__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_7__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_7_6()); }

	'>' 

{ after(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_7_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__NTA__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_8__0__Impl
	rule__NTA__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getLessThanSignKeyword_8_0()); }

	'<' 

{ after(grammarAccess.getNTAAccess().getLessThanSignKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_8__1__Impl
	rule__NTA__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getInstantiationKeyword_8_1()); }

	'instantiation' 

{ after(grammarAccess.getNTAAccess().getInstantiationKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_8__2__Impl
	rule__NTA__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_8_2()); }

	'>' 

{ after(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_8__3__Impl
	rule__NTA__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getANY_TOKEN_BUT_XML_CLOSEParserRuleCall_8_3()); }
(	ruleANY_TOKEN_BUT_XML_CLOSE)*
{ after(grammarAccess.getNTAAccess().getANY_TOKEN_BUT_XML_CLOSEParserRuleCall_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_8__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_8__4__Impl
	rule__NTA__Group_8__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_8__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getLessThanSignSolidusKeyword_8_4()); }

	'</' 

{ after(grammarAccess.getNTAAccess().getLessThanSignSolidusKeyword_8_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_8__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_8__5__Impl
	rule__NTA__Group_8__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_8__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getInstantiationKeyword_8_5()); }

	'instantiation' 

{ after(grammarAccess.getNTAAccess().getInstantiationKeyword_8_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NTA__Group_8__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NTA__Group_8__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__Group_8__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_8_6()); }

	'>' 

{ after(grammarAccess.getNTAAccess().getGreaterThanSignKeyword_8_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Template__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__0__Impl
	rule__Template__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getTemplateAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__1__Impl
	rule__Template__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getNameKeyword_1()); }

	'name' 

{ after(grammarAccess.getTemplateAccess().getNameKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__2__Impl
	rule__Template__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getUnorderedGroup_2()); }
(rule__Template__UnorderedGroup_2)
{ after(grammarAccess.getTemplateAccess().getUnorderedGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__3__Impl
	rule__Template__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getTemplateAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__4__Impl
	rule__Template__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getNameAssignment_4()); }
(rule__Template__NameAssignment_4)
{ after(grammarAccess.getTemplateAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__5__Impl
	rule__Template__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getLessThanSignSolidusKeyword_5()); }

	'</' 

{ after(grammarAccess.getTemplateAccess().getLessThanSignSolidusKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__6__Impl
	rule__Template__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getNameKeyword_6()); }

	'name' 

{ after(grammarAccess.getTemplateAccess().getNameKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__7__Impl
	rule__Template__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getGreaterThanSignKeyword_7()); }

	'>' 

{ after(grammarAccess.getTemplateAccess().getGreaterThanSignKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__8__Impl
	rule__Template__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getGroup_8()); }
(rule__Template__Group_8__0)?
{ after(grammarAccess.getTemplateAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__9__Impl
	rule__Template__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getGroup_9()); }
(rule__Template__Group_9__0)?
{ after(grammarAccess.getTemplateAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__10__Impl
	rule__Template__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTemplateAccess().getLocationAssignment_10()); }
(rule__Template__LocationAssignment_10)
{ after(grammarAccess.getTemplateAccess().getLocationAssignment_10()); }
)
(
{ before(grammarAccess.getTemplateAccess().getLocationAssignment_10()); }
(rule__Template__LocationAssignment_10)*
{ after(grammarAccess.getTemplateAccess().getLocationAssignment_10()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__11__Impl
	rule__Template__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getLessThanSignKeyword_11()); }

	'<' 

{ after(grammarAccess.getTemplateAccess().getLessThanSignKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__12__Impl
	rule__Template__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getInitKeyword_12()); }

	'init' 

{ after(grammarAccess.getTemplateAccess().getInitKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__13__Impl
	rule__Template__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getRefKeyword_13()); }

	'ref' 

{ after(grammarAccess.getTemplateAccess().getRefKeyword_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__14__Impl
	rule__Template__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getEqualsSignKeyword_14()); }

	'=' 

{ after(grammarAccess.getTemplateAccess().getEqualsSignKeyword_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__15__Impl
	rule__Template__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getInitAssignment_15()); }
(rule__Template__InitAssignment_15)
{ after(grammarAccess.getTemplateAccess().getInitAssignment_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__16
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__16__Impl
	rule__Template__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__16__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getSolidusGreaterThanSignKeyword_16()); }

	'/>' 

{ after(grammarAccess.getTemplateAccess().getSolidusGreaterThanSignKeyword_16()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__17
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__17__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__17__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getEdgeAssignment_17()); }
(rule__Template__EdgeAssignment_17)*
{ after(grammarAccess.getTemplateAccess().getEdgeAssignment_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}






































rule__Template__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_2_0__0__Impl
	rule__Template__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getXKeyword_2_0_0()); }

	'x' 

{ after(grammarAccess.getTemplateAccess().getXKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_2_0__1__Impl
	rule__Template__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getEqualsSignKeyword_2_0_1()); }

	'=' 

{ after(grammarAccess.getTemplateAccess().getEqualsSignKeyword_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getSTRINGTerminalRuleCall_2_0_2()); }
	RULE_STRING
{ after(grammarAccess.getTemplateAccess().getSTRINGTerminalRuleCall_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Template__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_2_1__0__Impl
	rule__Template__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getYKeyword_2_1_0()); }

	'y' 

{ after(grammarAccess.getTemplateAccess().getYKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_2_1__1__Impl
	rule__Template__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getEqualsSignKeyword_2_1_1()); }

	'=' 

{ after(grammarAccess.getTemplateAccess().getEqualsSignKeyword_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getSTRINGTerminalRuleCall_2_1_2()); }
	RULE_STRING
{ after(grammarAccess.getTemplateAccess().getSTRINGTerminalRuleCall_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Template__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_8__0__Impl
	rule__Template__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getLessThanSignKeyword_8_0()); }

	'<' 

{ after(grammarAccess.getTemplateAccess().getLessThanSignKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_8__1__Impl
	rule__Template__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getParameterKeyword_8_1()); }

	'parameter' 

{ after(grammarAccess.getTemplateAccess().getParameterKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_8__2__Impl
	rule__Template__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getGreaterThanSignKeyword_8_2()); }

	'>' 

{ after(grammarAccess.getTemplateAccess().getGreaterThanSignKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_8__3__Impl
	rule__Template__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getGroup_8_3()); }
(rule__Template__Group_8_3__0)?
{ after(grammarAccess.getTemplateAccess().getGroup_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_8__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_8__4__Impl
	rule__Template__Group_8__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_8__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getLessThanSignSolidusKeyword_8_4()); }

	'</' 

{ after(grammarAccess.getTemplateAccess().getLessThanSignSolidusKeyword_8_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_8__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_8__5__Impl
	rule__Template__Group_8__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_8__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getParameterKeyword_8_5()); }

	'parameter' 

{ after(grammarAccess.getTemplateAccess().getParameterKeyword_8_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_8__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_8__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_8__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getGreaterThanSignKeyword_8_6()); }

	'>' 

{ after(grammarAccess.getTemplateAccess().getGreaterThanSignKeyword_8_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Template__Group_8_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_8_3__0__Impl
	rule__Template__Group_8_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_8_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getParameterAssignment_8_3_0()); }
(rule__Template__ParameterAssignment_8_3_0)
{ after(grammarAccess.getTemplateAccess().getParameterAssignment_8_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_8_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_8_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_8_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getGroup_8_3_1()); }
(rule__Template__Group_8_3_1__0)*
{ after(grammarAccess.getTemplateAccess().getGroup_8_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Template__Group_8_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_8_3_1__0__Impl
	rule__Template__Group_8_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_8_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getCommaKeyword_8_3_1_0()); }

	',' 

{ after(grammarAccess.getTemplateAccess().getCommaKeyword_8_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_8_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_8_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_8_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getParameterAssignment_8_3_1_1()); }
(rule__Template__ParameterAssignment_8_3_1_1)
{ after(grammarAccess.getTemplateAccess().getParameterAssignment_8_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Template__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_9__0__Impl
	rule__Template__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getLessThanSignKeyword_9_0()); }

	'<' 

{ after(grammarAccess.getTemplateAccess().getLessThanSignKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_9__1__Impl
	rule__Template__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getDeclarationKeyword_9_1()); }

	'declaration' 

{ after(grammarAccess.getTemplateAccess().getDeclarationKeyword_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_9__2__Impl
	rule__Template__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getGreaterThanSignKeyword_9_2()); }

	'>' 

{ after(grammarAccess.getTemplateAccess().getGreaterThanSignKeyword_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_9__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_9__3__Impl
	rule__Template__Group_9__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_9__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getDeclarationsAssignment_9_3()); }
(rule__Template__DeclarationsAssignment_9_3)
{ after(grammarAccess.getTemplateAccess().getDeclarationsAssignment_9_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_9__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_9__4__Impl
	rule__Template__Group_9__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_9__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getLessThanSignSolidusKeyword_9_4()); }

	'</' 

{ after(grammarAccess.getTemplateAccess().getLessThanSignSolidusKeyword_9_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_9__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_9__5__Impl
	rule__Template__Group_9__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_9__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getDeclarationKeyword_9_5()); }

	'declaration' 

{ after(grammarAccess.getTemplateAccess().getDeclarationKeyword_9_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_9__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_9__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_9__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getGreaterThanSignKeyword_9_6()); }

	'>' 

{ after(grammarAccess.getTemplateAccess().getGreaterThanSignKeyword_9_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Location__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group__0__Impl
	rule__Location__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getLocationAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group__1__Impl
	rule__Location__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLocationKeyword_1()); }

	'location' 

{ after(grammarAccess.getLocationAccess().getLocationKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group__2__Impl
	rule__Location__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getUnorderedGroup_2()); }
(rule__Location__UnorderedGroup_2)
{ after(grammarAccess.getLocationAccess().getUnorderedGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getAlternatives_3()); }
(rule__Location__Alternatives_3)
{ after(grammarAccess.getLocationAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Location__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_2_0__0__Impl
	rule__Location__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getIdKeyword_2_0_0()); }

	'id' 

{ after(grammarAccess.getLocationAccess().getIdKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_2_0__1__Impl
	rule__Location__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getEqualsSignKeyword_2_0_1()); }

	'=' 

{ after(grammarAccess.getLocationAccess().getEqualsSignKeyword_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getIdAssignment_2_0_2()); }
(rule__Location__IdAssignment_2_0_2)
{ after(grammarAccess.getLocationAccess().getIdAssignment_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Location__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_2_2__0__Impl
	rule__Location__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getColorKeyword_2_2_0()); }

	'color' 

{ after(grammarAccess.getLocationAccess().getColorKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_2_2__1__Impl
	rule__Location__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getEqualsSignKeyword_2_2_1()); }

	'=' 

{ after(grammarAccess.getLocationAccess().getEqualsSignKeyword_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_2_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_2_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_2_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getColorCodeAssignment_2_2_2()); }
(rule__Location__ColorCodeAssignment_2_2_2)
{ after(grammarAccess.getLocationAccess().getColorCodeAssignment_2_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Location__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1__0__Impl
	rule__Location__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_0()); }

	'>' 

{ after(grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1__1__Impl
	rule__Location__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getGroup_3_1_1()); }
(rule__Location__Group_3_1_1__0)?
{ after(grammarAccess.getLocationAccess().getGroup_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1__2__Impl
	rule__Location__Group_3_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2()); }
(rule__Location__UnorderedGroup_3_1_2)
{ after(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1__3__Impl
	rule__Location__Group_3_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLocationTimeKindAssignment_3_1_3()); }
(rule__Location__LocationTimeKindAssignment_3_1_3)?
{ after(grammarAccess.getLocationAccess().getLocationTimeKindAssignment_3_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1__4__Impl
	rule__Location__Group_3_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLessThanSignSolidusKeyword_3_1_4()); }

	'</' 

{ after(grammarAccess.getLocationAccess().getLessThanSignSolidusKeyword_3_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1__5__Impl
	rule__Location__Group_3_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLocationKeyword_3_1_5()); }

	'location' 

{ after(grammarAccess.getLocationAccess().getLocationKeyword_3_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_6()); }

	'>' 

{ after(grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Location__Group_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_1__0__Impl
	rule__Location__Group_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLessThanSignKeyword_3_1_1_0()); }

	'<' 

{ after(grammarAccess.getLocationAccess().getLessThanSignKeyword_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_1__1__Impl
	rule__Location__Group_3_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getNameKeyword_3_1_1_1()); }

	'name' 

{ after(grammarAccess.getLocationAccess().getNameKeyword_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_1__2__Impl
	rule__Location__Group_3_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2()); }
(rule__Location__UnorderedGroup_3_1_1_2)
{ after(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_1__3__Impl
	rule__Location__Group_3_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_1_3()); }

	'>' 

{ after(grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_1__4__Impl
	rule__Location__Group_3_1_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getNameAssignment_3_1_1_4()); }
(rule__Location__NameAssignment_3_1_1_4)
{ after(grammarAccess.getLocationAccess().getNameAssignment_3_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_1__5__Impl
	rule__Location__Group_3_1_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLessThanSignSolidusKeyword_3_1_1_5()); }

	'</' 

{ after(grammarAccess.getLocationAccess().getLessThanSignSolidusKeyword_3_1_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_1__6__Impl
	rule__Location__Group_3_1_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getNameKeyword_3_1_1_6()); }

	'name' 

{ after(grammarAccess.getLocationAccess().getNameKeyword_3_1_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_1__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_1_7()); }

	'>' 

{ after(grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Location__Group_3_1_1_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_1_2_0__0__Impl
	rule__Location__Group_3_1_1_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_1_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getXKeyword_3_1_1_2_0_0()); }

	'x' 

{ after(grammarAccess.getLocationAccess().getXKeyword_3_1_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_1_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_1_2_0__1__Impl
	rule__Location__Group_3_1_1_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_1_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_1_2_0_1()); }

	'=' 

{ after(grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_1_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_1_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_1_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_1_2_0_2()); }
	RULE_STRING
{ after(grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_1_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Location__Group_3_1_1_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_1_2_1__0__Impl
	rule__Location__Group_3_1_1_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_1_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getYKeyword_3_1_1_2_1_0()); }

	'y' 

{ after(grammarAccess.getLocationAccess().getYKeyword_3_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_1_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_1_2_1__1__Impl
	rule__Location__Group_3_1_1_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_1_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_1_2_1_1()); }

	'=' 

{ after(grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_1_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_1_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_1_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_1_2_1_2()); }
	RULE_STRING
{ after(grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_1_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Location__Group_3_1_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_0__0__Impl
	rule__Location__Group_3_1_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLessThanSignKeyword_3_1_2_0_0()); }

	'<' 

{ after(grammarAccess.getLocationAccess().getLessThanSignKeyword_3_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_0__1__Impl
	rule__Location__Group_3_1_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLabelKeyword_3_1_2_0_1()); }

	'label' 

{ after(grammarAccess.getLocationAccess().getLabelKeyword_3_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_0__2__Impl
	rule__Location__Group_3_1_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getKindKeyword_3_1_2_0_2()); }

	'kind' 

{ after(grammarAccess.getLocationAccess().getKindKeyword_3_1_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_0__3__Impl
	rule__Location__Group_3_1_2_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_0_3()); }

	'=' 

{ after(grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_0__4__Impl
	rule__Location__Group_3_1_2_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getCommentsKeyword_3_1_2_0_4()); }

	'"comments"' 

{ after(grammarAccess.getLocationAccess().getCommentsKeyword_3_1_2_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_0__5__Impl
	rule__Location__Group_3_1_2_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5()); }
(rule__Location__UnorderedGroup_3_1_2_0_5)
{ after(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_0__6__Impl
	rule__Location__Group_3_1_2_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_2_0_6()); }

	'>' 

{ after(grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_2_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_0__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_0__7__Impl
	rule__Location__Group_3_1_2_0__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_0__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getCommentAssignment_3_1_2_0_7()); }
(rule__Location__CommentAssignment_3_1_2_0_7)
{ after(grammarAccess.getLocationAccess().getCommentAssignment_3_1_2_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_0__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_0__8__Impl
	rule__Location__Group_3_1_2_0__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_0__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLessThanSignSolidusKeyword_3_1_2_0_8()); }

	'</' 

{ after(grammarAccess.getLocationAccess().getLessThanSignSolidusKeyword_3_1_2_0_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_0__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_0__9__Impl
	rule__Location__Group_3_1_2_0__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_0__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLabelKeyword_3_1_2_0_9()); }

	'label' 

{ after(grammarAccess.getLocationAccess().getLabelKeyword_3_1_2_0_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_0__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_0__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_0__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_2_0_10()); }

	'>' 

{ after(grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_2_0_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Location__Group_3_1_2_0_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_0_5_0__0__Impl
	rule__Location__Group_3_1_2_0_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_0_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getXKeyword_3_1_2_0_5_0_0()); }

	'x' 

{ after(grammarAccess.getLocationAccess().getXKeyword_3_1_2_0_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_0_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_0_5_0__1__Impl
	rule__Location__Group_3_1_2_0_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_0_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_0_5_0_1()); }

	'=' 

{ after(grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_0_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_0_5_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_0_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_0_5_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_2_0_5_0_2()); }
	RULE_STRING
{ after(grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_2_0_5_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Location__Group_3_1_2_0_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_0_5_1__0__Impl
	rule__Location__Group_3_1_2_0_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_0_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getYKeyword_3_1_2_0_5_1_0()); }

	'y' 

{ after(grammarAccess.getLocationAccess().getYKeyword_3_1_2_0_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_0_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_0_5_1__1__Impl
	rule__Location__Group_3_1_2_0_5_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_0_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_0_5_1_1()); }

	'=' 

{ after(grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_0_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_0_5_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_0_5_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_0_5_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_2_0_5_1_2()); }
	RULE_STRING
{ after(grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_2_0_5_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Location__Group_3_1_2_0_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_0_5_2__0__Impl
	rule__Location__Group_3_1_2_0_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_0_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getColorKeyword_3_1_2_0_5_2_0()); }

	'color' 

{ after(grammarAccess.getLocationAccess().getColorKeyword_3_1_2_0_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_0_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_0_5_2__1__Impl
	rule__Location__Group_3_1_2_0_5_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_0_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_0_5_2_1()); }

	'=' 

{ after(grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_0_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_0_5_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_0_5_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_0_5_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_2_0_5_2_2()); }
	RULE_STRING
{ after(grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_2_0_5_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Location__Group_3_1_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_1__0__Impl
	rule__Location__Group_3_1_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLessThanSignKeyword_3_1_2_1_0()); }

	'<' 

{ after(grammarAccess.getLocationAccess().getLessThanSignKeyword_3_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_1__1__Impl
	rule__Location__Group_3_1_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLabelKeyword_3_1_2_1_1()); }

	'label' 

{ after(grammarAccess.getLocationAccess().getLabelKeyword_3_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_1__2__Impl
	rule__Location__Group_3_1_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getKindKeyword_3_1_2_1_2()); }

	'kind' 

{ after(grammarAccess.getLocationAccess().getKindKeyword_3_1_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_1__3__Impl
	rule__Location__Group_3_1_2_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_1_3()); }

	'=' 

{ after(grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_1__4__Impl
	rule__Location__Group_3_1_2_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getInvariantKeyword_3_1_2_1_4()); }

	'"invariant"' 

{ after(grammarAccess.getLocationAccess().getInvariantKeyword_3_1_2_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_1__5__Impl
	rule__Location__Group_3_1_2_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5()); }
(rule__Location__UnorderedGroup_3_1_2_1_5)
{ after(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_1__6__Impl
	rule__Location__Group_3_1_2_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_2_1_6()); }

	'>' 

{ after(grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_2_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_1__7__Impl
	rule__Location__Group_3_1_2_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getInvariantAssignment_3_1_2_1_7()); }
(rule__Location__InvariantAssignment_3_1_2_1_7)
{ after(grammarAccess.getLocationAccess().getInvariantAssignment_3_1_2_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_1__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_1__8__Impl
	rule__Location__Group_3_1_2_1__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_1__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLessThanSignSolidusKeyword_3_1_2_1_8()); }

	'</' 

{ after(grammarAccess.getLocationAccess().getLessThanSignSolidusKeyword_3_1_2_1_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_1__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_1__9__Impl
	rule__Location__Group_3_1_2_1__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_1__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLabelKeyword_3_1_2_1_9()); }

	'label' 

{ after(grammarAccess.getLocationAccess().getLabelKeyword_3_1_2_1_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_1__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_1__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_1__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_2_1_10()); }

	'>' 

{ after(grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_2_1_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Location__Group_3_1_2_1_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_1_5_0__0__Impl
	rule__Location__Group_3_1_2_1_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_1_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getXKeyword_3_1_2_1_5_0_0()); }

	'x' 

{ after(grammarAccess.getLocationAccess().getXKeyword_3_1_2_1_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_1_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_1_5_0__1__Impl
	rule__Location__Group_3_1_2_1_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_1_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_1_5_0_1()); }

	'=' 

{ after(grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_1_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_1_5_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_1_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_1_5_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_2_1_5_0_2()); }
	RULE_STRING
{ after(grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_2_1_5_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Location__Group_3_1_2_1_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_1_5_1__0__Impl
	rule__Location__Group_3_1_2_1_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_1_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getYKeyword_3_1_2_1_5_1_0()); }

	'y' 

{ after(grammarAccess.getLocationAccess().getYKeyword_3_1_2_1_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_1_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_1_5_1__1__Impl
	rule__Location__Group_3_1_2_1_5_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_1_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_1_5_1_1()); }

	'=' 

{ after(grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_1_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_1_5_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_1_5_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_1_5_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_2_1_5_1_2()); }
	RULE_STRING
{ after(grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_2_1_5_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Location__Group_3_1_2_1_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_1_5_2__0__Impl
	rule__Location__Group_3_1_2_1_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_1_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getColorKeyword_3_1_2_1_5_2_0()); }

	'color' 

{ after(grammarAccess.getLocationAccess().getColorKeyword_3_1_2_1_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_1_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_1_5_2__1__Impl
	rule__Location__Group_3_1_2_1_5_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_1_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_1_5_2_1()); }

	'=' 

{ after(grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_1_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_3_1_2_1_5_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group_3_1_2_1_5_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_3_1_2_1_5_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_2_1_5_2_2()); }
	RULE_STRING
{ after(grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_2_1_5_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__0__Impl
	rule__Edge__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getEdgeAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__1__Impl
	rule__Edge__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getTransitionKeyword_1()); }

	'transition' 

{ after(grammarAccess.getEdgeAccess().getTransitionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__2__Impl
	rule__Edge__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getUnorderedGroup_2()); }
(rule__Edge__UnorderedGroup_2)
{ after(grammarAccess.getEdgeAccess().getUnorderedGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__3__Impl
	rule__Edge__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__4__Impl
	rule__Edge__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLessThanSignKeyword_4()); }

	'<' 

{ after(grammarAccess.getEdgeAccess().getLessThanSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__5__Impl
	rule__Edge__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSourceKeyword_5()); }

	'source' 

{ after(grammarAccess.getEdgeAccess().getSourceKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__6__Impl
	rule__Edge__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getRefKeyword_6()); }

	'ref' 

{ after(grammarAccess.getEdgeAccess().getRefKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__7__Impl
	rule__Edge__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_7()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__8__Impl
	rule__Edge__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSourceAssignment_8()); }
(rule__Edge__SourceAssignment_8)
{ after(grammarAccess.getEdgeAccess().getSourceAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__9__Impl
	rule__Edge__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSolidusGreaterThanSignKeyword_9()); }

	'/>' 

{ after(grammarAccess.getEdgeAccess().getSolidusGreaterThanSignKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__10__Impl
	rule__Edge__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLessThanSignKeyword_10()); }

	'<' 

{ after(grammarAccess.getEdgeAccess().getLessThanSignKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__11__Impl
	rule__Edge__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getTargetKeyword_11()); }

	'target' 

{ after(grammarAccess.getEdgeAccess().getTargetKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__12__Impl
	rule__Edge__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getRefKeyword_12()); }

	'ref' 

{ after(grammarAccess.getEdgeAccess().getRefKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__13__Impl
	rule__Edge__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_13()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__14__Impl
	rule__Edge__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getTargetAssignment_14()); }
(rule__Edge__TargetAssignment_14)
{ after(grammarAccess.getEdgeAccess().getTargetAssignment_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__15__Impl
	rule__Edge__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSolidusGreaterThanSignKeyword_15()); }

	'/>' 

{ after(grammarAccess.getEdgeAccess().getSolidusGreaterThanSignKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__16
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__16__Impl
	rule__Edge__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__16__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getUnorderedGroup_16()); }
(rule__Edge__UnorderedGroup_16)
{ after(grammarAccess.getEdgeAccess().getUnorderedGroup_16()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__17
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__17__Impl
	rule__Edge__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__17__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getGroup_17()); }
(rule__Edge__Group_17__0)*
{ after(grammarAccess.getEdgeAccess().getGroup_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__18
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__18__Impl
	rule__Edge__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__18__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLessThanSignSolidusKeyword_18()); }

	'</' 

{ after(grammarAccess.getEdgeAccess().getLessThanSignSolidusKeyword_18()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__19
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__19__Impl
	rule__Edge__Group__20
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__19__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getTransitionKeyword_19()); }

	'transition' 

{ after(grammarAccess.getEdgeAccess().getTransitionKeyword_19()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__20
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__20__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__20__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_20()); }

	'>' 

{ after(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_20()); }
)

;
finally {
	restoreStackSize(stackSize);
}












































rule__Edge__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_2_0__0__Impl
	rule__Edge__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getXKeyword_2_0_0()); }

	'x' 

{ after(grammarAccess.getEdgeAccess().getXKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_2_0__1__Impl
	rule__Edge__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_2_0_1()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_2_0_2()); }
	RULE_STRING
{ after(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_2_1__0__Impl
	rule__Edge__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getYKeyword_2_1_0()); }

	'y' 

{ after(grammarAccess.getEdgeAccess().getYKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_2_1__1__Impl
	rule__Edge__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_2_1_1()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_2_1_2()); }
	RULE_STRING
{ after(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_2_2__0__Impl
	rule__Edge__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getColorKeyword_2_2_0()); }

	'color' 

{ after(grammarAccess.getEdgeAccess().getColorKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_2_2__1__Impl
	rule__Edge__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_2_2_1()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_2_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_2_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_2_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getColorCodeAssignment_2_2_2()); }
(rule__Edge__ColorCodeAssignment_2_2_2)
{ after(grammarAccess.getEdgeAccess().getColorCodeAssignment_2_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__Group_16_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_0__0__Impl
	rule__Edge__Group_16_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLessThanSignKeyword_16_0_0()); }

	'<' 

{ after(grammarAccess.getEdgeAccess().getLessThanSignKeyword_16_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_0__1__Impl
	rule__Edge__Group_16_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLabelKeyword_16_0_1()); }

	'label' 

{ after(grammarAccess.getEdgeAccess().getLabelKeyword_16_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_0__2__Impl
	rule__Edge__Group_16_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getKindKeyword_16_0_2()); }

	'kind' 

{ after(grammarAccess.getEdgeAccess().getKindKeyword_16_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_0__3__Impl
	rule__Edge__Group_16_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_0_3()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_0__4__Impl
	rule__Edge__Group_16_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getCommentsKeyword_16_0_4()); }

	'"comments"' 

{ after(grammarAccess.getEdgeAccess().getCommentsKeyword_16_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_0__5__Impl
	rule__Edge__Group_16_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5()); }
(rule__Edge__UnorderedGroup_16_0_5)
{ after(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_0__6__Impl
	rule__Edge__Group_16_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_0_6()); }

	'>' 

{ after(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_0__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_0__7__Impl
	rule__Edge__Group_16_0__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_0__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getCommentAssignment_16_0_7()); }
(rule__Edge__CommentAssignment_16_0_7)
{ after(grammarAccess.getEdgeAccess().getCommentAssignment_16_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_0__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_0__8__Impl
	rule__Edge__Group_16_0__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_0__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLessThanSignSolidusKeyword_16_0_8()); }

	'</' 

{ after(grammarAccess.getEdgeAccess().getLessThanSignSolidusKeyword_16_0_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_0__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_0__9__Impl
	rule__Edge__Group_16_0__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_0__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLabelKeyword_16_0_9()); }

	'label' 

{ after(grammarAccess.getEdgeAccess().getLabelKeyword_16_0_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_0__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_0__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_0__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_0_10()); }

	'>' 

{ after(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_0_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Edge__Group_16_0_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_0_5_0__0__Impl
	rule__Edge__Group_16_0_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_0_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getXKeyword_16_0_5_0_0()); }

	'x' 

{ after(grammarAccess.getEdgeAccess().getXKeyword_16_0_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_0_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_0_5_0__1__Impl
	rule__Edge__Group_16_0_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_0_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_0_5_0_1()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_0_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_0_5_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_0_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_0_5_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_0_5_0_2()); }
	RULE_STRING
{ after(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_0_5_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__Group_16_0_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_0_5_1__0__Impl
	rule__Edge__Group_16_0_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_0_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getYKeyword_16_0_5_1_0()); }

	'y' 

{ after(grammarAccess.getEdgeAccess().getYKeyword_16_0_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_0_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_0_5_1__1__Impl
	rule__Edge__Group_16_0_5_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_0_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_0_5_1_1()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_0_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_0_5_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_0_5_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_0_5_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_0_5_1_2()); }
	RULE_STRING
{ after(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_0_5_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__Group_16_0_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_0_5_2__0__Impl
	rule__Edge__Group_16_0_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_0_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getColorKeyword_16_0_5_2_0()); }

	'color' 

{ after(grammarAccess.getEdgeAccess().getColorKeyword_16_0_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_0_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_0_5_2__1__Impl
	rule__Edge__Group_16_0_5_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_0_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_0_5_2_1()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_0_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_0_5_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_0_5_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_0_5_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_0_5_2_2()); }
	RULE_STRING
{ after(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_0_5_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__Group_16_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_1__0__Impl
	rule__Edge__Group_16_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLessThanSignKeyword_16_1_0()); }

	'<' 

{ after(grammarAccess.getEdgeAccess().getLessThanSignKeyword_16_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_1__1__Impl
	rule__Edge__Group_16_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLabelKeyword_16_1_1()); }

	'label' 

{ after(grammarAccess.getEdgeAccess().getLabelKeyword_16_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_1__2__Impl
	rule__Edge__Group_16_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getKindKeyword_16_1_2()); }

	'kind' 

{ after(grammarAccess.getEdgeAccess().getKindKeyword_16_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_1__3__Impl
	rule__Edge__Group_16_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_1_3()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_1__4__Impl
	rule__Edge__Group_16_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSynchronisationKeyword_16_1_4()); }

	'"synchronisation"' 

{ after(grammarAccess.getEdgeAccess().getSynchronisationKeyword_16_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_1__5__Impl
	rule__Edge__Group_16_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5()); }
(rule__Edge__UnorderedGroup_16_1_5)
{ after(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_1__6__Impl
	rule__Edge__Group_16_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_1_6()); }

	'>' 

{ after(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_1__7__Impl
	rule__Edge__Group_16_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSynchronizationAssignment_16_1_7()); }
(rule__Edge__SynchronizationAssignment_16_1_7)
{ after(grammarAccess.getEdgeAccess().getSynchronizationAssignment_16_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_1__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_1__8__Impl
	rule__Edge__Group_16_1__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_1__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLessThanSignSolidusKeyword_16_1_8()); }

	'</' 

{ after(grammarAccess.getEdgeAccess().getLessThanSignSolidusKeyword_16_1_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_1__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_1__9__Impl
	rule__Edge__Group_16_1__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_1__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLabelKeyword_16_1_9()); }

	'label' 

{ after(grammarAccess.getEdgeAccess().getLabelKeyword_16_1_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_1__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_1__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_1__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_1_10()); }

	'>' 

{ after(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_1_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Edge__Group_16_1_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_1_5_0__0__Impl
	rule__Edge__Group_16_1_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_1_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getXKeyword_16_1_5_0_0()); }

	'x' 

{ after(grammarAccess.getEdgeAccess().getXKeyword_16_1_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_1_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_1_5_0__1__Impl
	rule__Edge__Group_16_1_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_1_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_1_5_0_1()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_1_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_1_5_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_1_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_1_5_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_1_5_0_2()); }
	RULE_STRING
{ after(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_1_5_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__Group_16_1_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_1_5_1__0__Impl
	rule__Edge__Group_16_1_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_1_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getYKeyword_16_1_5_1_0()); }

	'y' 

{ after(grammarAccess.getEdgeAccess().getYKeyword_16_1_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_1_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_1_5_1__1__Impl
	rule__Edge__Group_16_1_5_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_1_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_1_5_1_1()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_1_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_1_5_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_1_5_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_1_5_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_1_5_1_2()); }
	RULE_STRING
{ after(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_1_5_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__Group_16_1_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_1_5_2__0__Impl
	rule__Edge__Group_16_1_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_1_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getColorKeyword_16_1_5_2_0()); }

	'color' 

{ after(grammarAccess.getEdgeAccess().getColorKeyword_16_1_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_1_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_1_5_2__1__Impl
	rule__Edge__Group_16_1_5_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_1_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_1_5_2_1()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_1_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_1_5_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_1_5_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_1_5_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_1_5_2_2()); }
	RULE_STRING
{ after(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_1_5_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__Group_16_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_2__0__Impl
	rule__Edge__Group_16_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLessThanSignKeyword_16_2_0()); }

	'<' 

{ after(grammarAccess.getEdgeAccess().getLessThanSignKeyword_16_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_2__1__Impl
	rule__Edge__Group_16_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLabelKeyword_16_2_1()); }

	'label' 

{ after(grammarAccess.getEdgeAccess().getLabelKeyword_16_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_2__2__Impl
	rule__Edge__Group_16_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getKindKeyword_16_2_2()); }

	'kind' 

{ after(grammarAccess.getEdgeAccess().getKindKeyword_16_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_2__3__Impl
	rule__Edge__Group_16_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_2_3()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_2__4__Impl
	rule__Edge__Group_16_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getGuardKeyword_16_2_4()); }

	'"guard"' 

{ after(grammarAccess.getEdgeAccess().getGuardKeyword_16_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_2__5__Impl
	rule__Edge__Group_16_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5()); }
(rule__Edge__UnorderedGroup_16_2_5)
{ after(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_2__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_2__6__Impl
	rule__Edge__Group_16_2__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_2__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_2_6()); }

	'>' 

{ after(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_2_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_2__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_2__7__Impl
	rule__Edge__Group_16_2__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_2__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getGuardAssignment_16_2_7()); }
(rule__Edge__GuardAssignment_16_2_7)
{ after(grammarAccess.getEdgeAccess().getGuardAssignment_16_2_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_2__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_2__8__Impl
	rule__Edge__Group_16_2__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_2__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLessThanSignSolidusKeyword_16_2_8()); }

	'</' 

{ after(grammarAccess.getEdgeAccess().getLessThanSignSolidusKeyword_16_2_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_2__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_2__9__Impl
	rule__Edge__Group_16_2__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_2__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLabelKeyword_16_2_9()); }

	'label' 

{ after(grammarAccess.getEdgeAccess().getLabelKeyword_16_2_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_2__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_2__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_2__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_2_10()); }

	'>' 

{ after(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_2_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Edge__Group_16_2_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_2_5_0__0__Impl
	rule__Edge__Group_16_2_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_2_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getXKeyword_16_2_5_0_0()); }

	'x' 

{ after(grammarAccess.getEdgeAccess().getXKeyword_16_2_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_2_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_2_5_0__1__Impl
	rule__Edge__Group_16_2_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_2_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_2_5_0_1()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_2_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_2_5_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_2_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_2_5_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_2_5_0_2()); }
	RULE_STRING
{ after(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_2_5_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__Group_16_2_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_2_5_1__0__Impl
	rule__Edge__Group_16_2_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_2_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getYKeyword_16_2_5_1_0()); }

	'y' 

{ after(grammarAccess.getEdgeAccess().getYKeyword_16_2_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_2_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_2_5_1__1__Impl
	rule__Edge__Group_16_2_5_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_2_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_2_5_1_1()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_2_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_2_5_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_2_5_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_2_5_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_2_5_1_2()); }
	RULE_STRING
{ after(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_2_5_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__Group_16_2_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_2_5_2__0__Impl
	rule__Edge__Group_16_2_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_2_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getColorKeyword_16_2_5_2_0()); }

	'color' 

{ after(grammarAccess.getEdgeAccess().getColorKeyword_16_2_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_2_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_2_5_2__1__Impl
	rule__Edge__Group_16_2_5_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_2_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_2_5_2_1()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_2_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_2_5_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_2_5_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_2_5_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_2_5_2_2()); }
	RULE_STRING
{ after(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_2_5_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__Group_16_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3__0__Impl
	rule__Edge__Group_16_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLessThanSignKeyword_16_3_0()); }

	'<' 

{ after(grammarAccess.getEdgeAccess().getLessThanSignKeyword_16_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3__1__Impl
	rule__Edge__Group_16_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLabelKeyword_16_3_1()); }

	'label' 

{ after(grammarAccess.getEdgeAccess().getLabelKeyword_16_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3__2__Impl
	rule__Edge__Group_16_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getKindKeyword_16_3_2()); }

	'kind' 

{ after(grammarAccess.getEdgeAccess().getKindKeyword_16_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3__3__Impl
	rule__Edge__Group_16_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_3_3()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3__4__Impl
	rule__Edge__Group_16_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getAssignmentKeyword_16_3_4()); }

	'"assignment"' 

{ after(grammarAccess.getEdgeAccess().getAssignmentKeyword_16_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3__5__Impl
	rule__Edge__Group_16_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5()); }
(rule__Edge__UnorderedGroup_16_3_5)
{ after(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_3__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3__6__Impl
	rule__Edge__Group_16_3__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_3_6()); }

	'>' 

{ after(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_3_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_3__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3__7__Impl
	rule__Edge__Group_16_3__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getUpdateAssignment_16_3_7()); }
(rule__Edge__UpdateAssignment_16_3_7)
{ after(grammarAccess.getEdgeAccess().getUpdateAssignment_16_3_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_3__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3__8__Impl
	rule__Edge__Group_16_3__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getGroup_16_3_8()); }
(rule__Edge__Group_16_3_8__0)*
{ after(grammarAccess.getEdgeAccess().getGroup_16_3_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_3__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3__9__Impl
	rule__Edge__Group_16_3__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLessThanSignSolidusKeyword_16_3_9()); }

	'</' 

{ after(grammarAccess.getEdgeAccess().getLessThanSignSolidusKeyword_16_3_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_3__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3__10__Impl
	rule__Edge__Group_16_3__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLabelKeyword_16_3_10()); }

	'label' 

{ after(grammarAccess.getEdgeAccess().getLabelKeyword_16_3_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_3__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_3_11()); }

	'>' 

{ after(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_3_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__Edge__Group_16_3_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3_5_0__0__Impl
	rule__Edge__Group_16_3_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getXKeyword_16_3_5_0_0()); }

	'x' 

{ after(grammarAccess.getEdgeAccess().getXKeyword_16_3_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_3_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3_5_0__1__Impl
	rule__Edge__Group_16_3_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_3_5_0_1()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_3_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_3_5_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3_5_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_3_5_0_2()); }
	RULE_STRING
{ after(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_3_5_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__Group_16_3_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3_5_1__0__Impl
	rule__Edge__Group_16_3_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getYKeyword_16_3_5_1_0()); }

	'y' 

{ after(grammarAccess.getEdgeAccess().getYKeyword_16_3_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_3_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3_5_1__1__Impl
	rule__Edge__Group_16_3_5_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_3_5_1_1()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_3_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_3_5_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3_5_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3_5_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_3_5_1_2()); }
	RULE_STRING
{ after(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_3_5_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__Group_16_3_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3_5_2__0__Impl
	rule__Edge__Group_16_3_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getColorKeyword_16_3_5_2_0()); }

	'color' 

{ after(grammarAccess.getEdgeAccess().getColorKeyword_16_3_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_3_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3_5_2__1__Impl
	rule__Edge__Group_16_3_5_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_3_5_2_1()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_3_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_3_5_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3_5_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3_5_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_3_5_2_2()); }
	RULE_STRING
{ after(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_3_5_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__Group_16_3_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3_8__0__Impl
	rule__Edge__Group_16_3_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getCommaKeyword_16_3_8_0()); }

	',' 

{ after(grammarAccess.getEdgeAccess().getCommaKeyword_16_3_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_3_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_3_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_3_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getUpdateAssignment_16_3_8_1()); }
(rule__Edge__UpdateAssignment_16_3_8_1)
{ after(grammarAccess.getEdgeAccess().getUpdateAssignment_16_3_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Edge__Group_16_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4__0__Impl
	rule__Edge__Group_16_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLessThanSignKeyword_16_4_0()); }

	'<' 

{ after(grammarAccess.getEdgeAccess().getLessThanSignKeyword_16_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4__1__Impl
	rule__Edge__Group_16_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLabelKeyword_16_4_1()); }

	'label' 

{ after(grammarAccess.getEdgeAccess().getLabelKeyword_16_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4__2__Impl
	rule__Edge__Group_16_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getKindKeyword_16_4_2()); }

	'kind' 

{ after(grammarAccess.getEdgeAccess().getKindKeyword_16_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4__3__Impl
	rule__Edge__Group_16_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_4_3()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4__4__Impl
	rule__Edge__Group_16_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSelectKeyword_16_4_4()); }

	'"select"' 

{ after(grammarAccess.getEdgeAccess().getSelectKeyword_16_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_4__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4__5__Impl
	rule__Edge__Group_16_4__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5()); }
(rule__Edge__UnorderedGroup_16_4_5)
{ after(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_4__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4__6__Impl
	rule__Edge__Group_16_4__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_4_6()); }

	'>' 

{ after(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_4_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_4__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4__7__Impl
	rule__Edge__Group_16_4__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSelectionAssignment_16_4_7()); }
(rule__Edge__SelectionAssignment_16_4_7)
{ after(grammarAccess.getEdgeAccess().getSelectionAssignment_16_4_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_4__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4__8__Impl
	rule__Edge__Group_16_4__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getGroup_16_4_8()); }
(rule__Edge__Group_16_4_8__0)*
{ after(grammarAccess.getEdgeAccess().getGroup_16_4_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_4__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4__9__Impl
	rule__Edge__Group_16_4__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLessThanSignSolidusKeyword_16_4_9()); }

	'</' 

{ after(grammarAccess.getEdgeAccess().getLessThanSignSolidusKeyword_16_4_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_4__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4__10__Impl
	rule__Edge__Group_16_4__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLabelKeyword_16_4_10()); }

	'label' 

{ after(grammarAccess.getEdgeAccess().getLabelKeyword_16_4_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_4__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_4_11()); }

	'>' 

{ after(grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_4_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__Edge__Group_16_4_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4_5_0__0__Impl
	rule__Edge__Group_16_4_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getXKeyword_16_4_5_0_0()); }

	'x' 

{ after(grammarAccess.getEdgeAccess().getXKeyword_16_4_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_4_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4_5_0__1__Impl
	rule__Edge__Group_16_4_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_4_5_0_1()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_4_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_4_5_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4_5_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_4_5_0_2()); }
	RULE_STRING
{ after(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_4_5_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__Group_16_4_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4_5_1__0__Impl
	rule__Edge__Group_16_4_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getYKeyword_16_4_5_1_0()); }

	'y' 

{ after(grammarAccess.getEdgeAccess().getYKeyword_16_4_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_4_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4_5_1__1__Impl
	rule__Edge__Group_16_4_5_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_4_5_1_1()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_4_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_4_5_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4_5_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4_5_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_4_5_1_2()); }
	RULE_STRING
{ after(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_4_5_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__Group_16_4_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4_5_2__0__Impl
	rule__Edge__Group_16_4_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getColorKeyword_16_4_5_2_0()); }

	'color' 

{ after(grammarAccess.getEdgeAccess().getColorKeyword_16_4_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_4_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4_5_2__1__Impl
	rule__Edge__Group_16_4_5_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_4_5_2_1()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_4_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_4_5_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4_5_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4_5_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_4_5_2_2()); }
	RULE_STRING
{ after(grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_4_5_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__Group_16_4_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4_8__0__Impl
	rule__Edge__Group_16_4_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getCommaKeyword_16_4_8_0()); }

	',' 

{ after(grammarAccess.getEdgeAccess().getCommaKeyword_16_4_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_16_4_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_16_4_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_16_4_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSelectionAssignment_16_4_8_1()); }
(rule__Edge__SelectionAssignment_16_4_8_1)
{ after(grammarAccess.getEdgeAccess().getSelectionAssignment_16_4_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Edge__Group_17__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_17__0__Impl
	rule__Edge__Group_17__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_17__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLessThanSignKeyword_17_0()); }

	'<' 

{ after(grammarAccess.getEdgeAccess().getLessThanSignKeyword_17_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_17__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_17__1__Impl
	rule__Edge__Group_17__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_17__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getNailKeyword_17_1()); }

	'nail' 

{ after(grammarAccess.getEdgeAccess().getNailKeyword_17_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_17__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_17__2__Impl
	rule__Edge__Group_17__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_17__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getBendPointAssignment_17_2()); }
(rule__Edge__BendPointAssignment_17_2)
{ after(grammarAccess.getEdgeAccess().getBendPointAssignment_17_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_17__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group_17__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_17__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSolidusGreaterThanSignKeyword_17_3()); }

	'/>' 

{ after(grammarAccess.getEdgeAccess().getSolidusGreaterThanSignKeyword_17_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SynchronizationLabel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SynchronizationLabel__Group__0__Impl
	rule__SynchronizationLabel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizationLabel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizationLabelAccess().getChannelExpressionAssignment_0()); }
(rule__SynchronizationLabel__ChannelExpressionAssignment_0)
{ after(grammarAccess.getSynchronizationLabelAccess().getChannelExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SynchronizationLabel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SynchronizationLabel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizationLabel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizationLabelAccess().getKindAssignment_1()); }
(rule__SynchronizationLabel__KindAssignment_1)
{ after(grammarAccess.getSynchronizationLabelAccess().getKindAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Point__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__Group__0__Impl
	rule__Point__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getPointAction_0()); }
(

)
{ after(grammarAccess.getPointAccess().getPointAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getUnorderedGroup_1()); }
(rule__Point__UnorderedGroup_1)
{ after(grammarAccess.getPointAccess().getUnorderedGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Point__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__Group_1_0__0__Impl
	rule__Point__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getXKeyword_1_0_0()); }

	'x' 

{ after(grammarAccess.getPointAccess().getXKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__Group_1_0__1__Impl
	rule__Point__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getEqualsSignKeyword_1_0_1()); }

	'=' 

{ after(grammarAccess.getPointAccess().getEqualsSignKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getXAssignment_1_0_2()); }
(rule__Point__XAssignment_1_0_2)
{ after(grammarAccess.getPointAccess().getXAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Point__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__Group_1_1__0__Impl
	rule__Point__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getYKeyword_1_1_0()); }

	'y' 

{ after(grammarAccess.getPointAccess().getYKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__Group_1_1__1__Impl
	rule__Point__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getEqualsSignKeyword_1_1_1()); }

	'=' 

{ after(grammarAccess.getPointAccess().getEqualsSignKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getYAssignment_1_1_2()); }
(rule__Point__YAssignment_1_1_2)
{ after(grammarAccess.getPointAccess().getYAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Selection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selection__Group__0__Impl
	rule__Selection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getElementsAssignment_0()); }
(rule__Selection__ElementsAssignment_0)
{ after(grammarAccess.getSelectionAccess().getElementsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selection__Group__1__Impl
	rule__Selection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getSelectionAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selection__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getTypeDefinitionAssignment_2()); }
(rule__Selection__TypeDefinitionAssignment_2)
{ after(grammarAccess.getSelectionAccess().getTypeDefinitionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GlobalDeclarations__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalDeclarations__Group__0__Impl
	rule__GlobalDeclarations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclarations__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDeclarationsAccess().getGlobalDeclarationsAction_0()); }
(

)
{ after(grammarAccess.getGlobalDeclarationsAccess().getGlobalDeclarationsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalDeclarations__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalDeclarations__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclarations__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDeclarationsAccess().getAlternatives_1()); }
(rule__GlobalDeclarations__Alternatives_1)*
{ after(grammarAccess.getGlobalDeclarationsAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalDeclarations__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalDeclarations__Group__0__Impl
	rule__LocalDeclarations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalDeclarations__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalDeclarationsAccess().getLocalDeclarationsAction_0()); }
(

)
{ after(grammarAccess.getLocalDeclarationsAccess().getLocalDeclarationsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalDeclarations__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalDeclarations__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalDeclarations__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalDeclarationsAccess().getDeclarationAssignment_1()); }
(rule__LocalDeclarations__DeclarationAssignment_1)*
{ after(grammarAccess.getLocalDeclarationsAccess().getDeclarationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SystemDeclarations__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SystemDeclarations__Group__0__Impl
	rule__SystemDeclarations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclarations__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationsAccess().getSystemDeclarationsAction_0()); }
(

)
{ after(grammarAccess.getSystemDeclarationsAccess().getSystemDeclarationsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SystemDeclarations__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SystemDeclarations__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclarations__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationsAccess().getAlternatives_1()); }
(rule__SystemDeclarations__Alternatives_1)*
{ after(grammarAccess.getSystemDeclarationsAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProgressMeasure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgressMeasure__Group__0__Impl
	rule__ProgressMeasure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgressMeasure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgressMeasureAccess().getProgressKeyword_0()); }

	'progress' 

{ after(grammarAccess.getProgressMeasureAccess().getProgressKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgressMeasure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgressMeasure__Group__1__Impl
	rule__ProgressMeasure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgressMeasure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgressMeasureAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getProgressMeasureAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgressMeasure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgressMeasure__Group__2__Impl
	rule__ProgressMeasure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgressMeasure__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getProgressMeasureAccess().getGroup_2()); }
(rule__ProgressMeasure__Group_2__0)
{ after(grammarAccess.getProgressMeasureAccess().getGroup_2()); }
)
(
{ before(grammarAccess.getProgressMeasureAccess().getGroup_2()); }
(rule__ProgressMeasure__Group_2__0)*
{ after(grammarAccess.getProgressMeasureAccess().getGroup_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgressMeasure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgressMeasure__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgressMeasure__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgressMeasureAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getProgressMeasureAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ProgressMeasure__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgressMeasure__Group_2__0__Impl
	rule__ProgressMeasure__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgressMeasure__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgressMeasureAccess().getExpressionAssignment_2_0()); }
(rule__ProgressMeasure__ExpressionAssignment_2_0)
{ after(grammarAccess.getProgressMeasureAccess().getExpressionAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgressMeasure__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgressMeasure__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgressMeasure__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgressMeasureAccess().getSemicolonKeyword_2_1()); }

	';' 

{ after(grammarAccess.getProgressMeasureAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TemplateDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateDeclaration__Group__0__Impl
	rule__TemplateDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateDeclarationAccess().getDeclaredTemplateAssignment_0()); }
(rule__TemplateDeclaration__DeclaredTemplateAssignment_0)
{ after(grammarAccess.getTemplateDeclarationAccess().getDeclaredTemplateAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateDeclaration__Group__1__Impl
	rule__TemplateDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateDeclarationAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getTemplateDeclarationAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateDeclaration__Group__2__Impl
	rule__TemplateDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateDeclarationAccess().getGroup_2()); }
(rule__TemplateDeclaration__Group_2__0)?
{ after(grammarAccess.getTemplateDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateDeclaration__Group__3__Impl
	rule__TemplateDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateDeclarationAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getTemplateDeclarationAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateDeclarationAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getTemplateDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TemplateDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateDeclaration__Group_2__0__Impl
	rule__TemplateDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateDeclarationAccess().getArgumentAssignment_2_0()); }
(rule__TemplateDeclaration__ArgumentAssignment_2_0)
{ after(grammarAccess.getTemplateDeclarationAccess().getArgumentAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateDeclarationAccess().getGroup_2_1()); }
(rule__TemplateDeclaration__Group_2_1__0)*
{ after(grammarAccess.getTemplateDeclarationAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TemplateDeclaration__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateDeclaration__Group_2_1__0__Impl
	rule__TemplateDeclaration__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateDeclaration__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateDeclarationAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getTemplateDeclarationAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateDeclaration__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateDeclaration__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateDeclaration__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateDeclarationAccess().getArgumentAssignment_2_1_1()); }
(rule__TemplateDeclaration__ArgumentAssignment_2_1_1)
{ after(grammarAccess.getTemplateDeclarationAccess().getArgumentAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RedefinedTemplate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RedefinedTemplate__Group__0__Impl
	rule__RedefinedTemplate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RedefinedTemplate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRedefinedTemplateAccess().getNameAssignment_0()); }
(rule__RedefinedTemplate__NameAssignment_0)
{ after(grammarAccess.getRedefinedTemplateAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RedefinedTemplate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RedefinedTemplate__Group__1__Impl
	rule__RedefinedTemplate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RedefinedTemplate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRedefinedTemplateAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getRedefinedTemplateAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RedefinedTemplate__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RedefinedTemplate__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RedefinedTemplate__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRedefinedTemplateAccess().getReferredTemplateAssignment_2()); }
(rule__RedefinedTemplate__ReferredTemplateAssignment_2)
{ after(grammarAccess.getRedefinedTemplateAccess().getReferredTemplateAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__System__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__0__Impl
	rule__System__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getSystemKeyword_0()); }

	'system' 

{ after(grammarAccess.getSystemAccess().getSystemKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__1__Impl
	rule__System__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getInstantiationListAssignment_1()); }
(rule__System__InstantiationListAssignment_1)
{ after(grammarAccess.getSystemAccess().getInstantiationListAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__2__Impl
	rule__System__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getGroup_2()); }
(rule__System__Group_2__0)*
{ after(grammarAccess.getSystemAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getSystemAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__System__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group_2__0__Impl
	rule__System__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getLtKeyword_2_0()); }

	'&lt;' 

{ after(grammarAccess.getSystemAccess().getLtKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getInstantiationListAssignment_2_1()); }
(rule__System__InstantiationListAssignment_2_1)
{ after(grammarAccess.getSystemAccess().getInstantiationListAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstantiationList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstantiationList__Group__0__Impl
	rule__InstantiationList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstantiationList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantiationListAccess().getTemplateAssignment_0()); }
(rule__InstantiationList__TemplateAssignment_0)
{ after(grammarAccess.getInstantiationListAccess().getTemplateAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstantiationList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstantiationList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstantiationList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantiationListAccess().getGroup_1()); }
(rule__InstantiationList__Group_1__0)*
{ after(grammarAccess.getInstantiationListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstantiationList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstantiationList__Group_1__0__Impl
	rule__InstantiationList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstantiationList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantiationListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getInstantiationListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstantiationList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstantiationList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstantiationList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantiationListAccess().getTemplateAssignment_1_1()); }
(rule__InstantiationList__TemplateAssignment_1_1)
{ after(grammarAccess.getInstantiationListAccess().getTemplateAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypedDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedDeclaration__Group__0__Impl
	rule__TypedDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedDeclarationAccess().getTypeDefinitionAssignment_0()); }
(rule__TypedDeclaration__TypeDefinitionAssignment_0)
{ after(grammarAccess.getTypedDeclarationAccess().getTypeDefinitionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedDeclarationAccess().getAlternatives_1()); }
(rule__TypedDeclaration__Alternatives_1)
{ after(grammarAccess.getTypedDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypedDeclaration__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedDeclaration__Group_1_1__0__Impl
	rule__TypedDeclaration__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedDeclaration__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedDeclarationAccess().getElementsAssignment_1_1_0()); }
(rule__TypedDeclaration__ElementsAssignment_1_1_0)
{ after(grammarAccess.getTypedDeclarationAccess().getElementsAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedDeclaration__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedDeclaration__Group_1_1__1__Impl
	rule__TypedDeclaration__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedDeclaration__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedDeclarationAccess().getGroup_1_1_1()); }
(rule__TypedDeclaration__Group_1_1_1__0)*
{ after(grammarAccess.getTypedDeclarationAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedDeclaration__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedDeclaration__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedDeclaration__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedDeclarationAccess().getSemicolonKeyword_1_1_2()); }

	';' 

{ after(grammarAccess.getTypedDeclarationAccess().getSemicolonKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypedDeclaration__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedDeclaration__Group_1_1_1__0__Impl
	rule__TypedDeclaration__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedDeclaration__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedDeclarationAccess().getCommaKeyword_1_1_1_0()); }

	',' 

{ after(grammarAccess.getTypedDeclarationAccess().getCommaKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedDeclaration__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedDeclaration__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedDeclaration__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedDeclarationAccess().getElementsAssignment_1_1_1_1()); }
(rule__TypedDeclaration__ElementsAssignment_1_1_1_1)
{ after(grammarAccess.getTypedDeclarationAccess().getElementsAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypedElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedElement__Group__0__Impl
	rule__TypedElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedElementAccess().getTypeDefinitionAssignment_0()); }
(rule__TypedElement__TypeDefinitionAssignment_0)
{ after(grammarAccess.getTypedElementAccess().getTypeDefinitionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedElement__Group__1__Impl
	rule__TypedElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedElementAccess().getElementsAssignment_1()); }
(rule__TypedElement__ElementsAssignment_1)
{ after(grammarAccess.getTypedElementAccess().getElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedElementAccess().getGroup_2()); }
(rule__TypedElement__Group_2__0)*
{ after(grammarAccess.getTypedElementAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypedElement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedElement__Group_2__0__Impl
	rule__TypedElement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedElement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedElementAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getTypedElementAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedElement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedElement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedElement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedElementAccess().getElementsAssignment_2_1()); }
(rule__TypedElement__ElementsAssignment_2_1)
{ after(grammarAccess.getTypedElementAccess().getElementsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment_0()); }
(rule__Variable__NameAssignment_0)
{ after(grammarAccess.getVariableAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getGroup_1()); }
(rule__Variable__Group_1__0)*
{ after(grammarAccess.getVariableAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getGroup_2()); }
(rule__Variable__Group_2__0)?
{ after(grammarAccess.getVariableAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Variable__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__0__Impl
	rule__Variable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getVariableAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__1__Impl
	rule__Variable__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getIndexAssignment_1_1()); }
(rule__Variable__IndexAssignment_1_1)
{ after(grammarAccess.getVariableAccess().getIndexAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getVariableAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Variable__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_2__0__Impl
	rule__Variable__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getVariableAccess().getEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getInitializerAssignment_2_1()); }
(rule__Variable__InitializerAssignment_2_1)
{ after(grammarAccess.getVariableAccess().getInitializerAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayInitializer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitializer__Group__0__Impl
	rule__ArrayInitializer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializerAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getArrayInitializerAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitializer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitializer__Group__1__Impl
	rule__ArrayInitializer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializerAccess().getInitializerAssignment_1()); }
(rule__ArrayInitializer__InitializerAssignment_1)
{ after(grammarAccess.getArrayInitializerAccess().getInitializerAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitializer__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitializer__Group__2__Impl
	rule__ArrayInitializer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializerAccess().getGroup_2()); }
(rule__ArrayInitializer__Group_2__0)*
{ after(grammarAccess.getArrayInitializerAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitializer__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitializer__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializerAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getArrayInitializerAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ArrayInitializer__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitializer__Group_2__0__Impl
	rule__ArrayInitializer__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializerAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getArrayInitializerAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitializer__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitializer__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializerAccess().getInitializerAssignment_2_1()); }
(rule__ArrayInitializer__InitializerAssignment_2_1)
{ after(grammarAccess.getArrayInitializerAccess().getInitializerAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ChannelPrefixExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelPrefixExpression__Group__0__Impl
	rule__ChannelPrefixExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPrefixExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPrefixExpressionAccess().getAlternatives_0()); }
(rule__ChannelPrefixExpression__Alternatives_0)
{ after(grammarAccess.getChannelPrefixExpressionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelPrefixExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelPrefixExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPrefixExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPrefixExpressionAccess().getChannelTypeAssignment_1()); }
(rule__ChannelPrefixExpression__ChannelTypeAssignment_1)
{ after(grammarAccess.getChannelPrefixExpressionAccess().getChannelTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ChannelPrefixExpression__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelPrefixExpression__Group_0_0__0__Impl
	rule__ChannelPrefixExpression__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPrefixExpression__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPrefixExpressionAccess().getUrgentAssignment_0_0_0()); }
(rule__ChannelPrefixExpression__UrgentAssignment_0_0_0)
{ after(grammarAccess.getChannelPrefixExpressionAccess().getUrgentAssignment_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelPrefixExpression__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelPrefixExpression__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPrefixExpression__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPrefixExpressionAccess().getBroadcastAssignment_0_0_1()); }
(rule__ChannelPrefixExpression__BroadcastAssignment_0_0_1)?
{ after(grammarAccess.getChannelPrefixExpressionAccess().getBroadcastAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ChannelPrefixExpression__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelPrefixExpression__Group_0_1__0__Impl
	rule__ChannelPrefixExpression__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPrefixExpression__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPrefixExpressionAccess().getBroadcastAssignment_0_1_0()); }
(rule__ChannelPrefixExpression__BroadcastAssignment_0_1_0)
{ after(grammarAccess.getChannelPrefixExpressionAccess().getBroadcastAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelPrefixExpression__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelPrefixExpression__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPrefixExpression__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPrefixExpressionAccess().getUrgentAssignment_0_1_1()); }
(rule__ChannelPrefixExpression__UrgentAssignment_0_1_1)?
{ after(grammarAccess.getChannelPrefixExpressionAccess().getUrgentAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataPrefixExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataPrefixExpression__Group__0__Impl
	rule__DataPrefixExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPrefixExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataPrefixExpressionAccess().getPrefixAssignment_0()); }
(rule__DataPrefixExpression__PrefixAssignment_0)
{ after(grammarAccess.getDataPrefixExpressionAccess().getPrefixAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataPrefixExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataPrefixExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPrefixExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataPrefixExpressionAccess().getDataTypeExpressionAssignment_1()); }
(rule__DataPrefixExpression__DataTypeExpressionAssignment_1)
{ after(grammarAccess.getDataPrefixExpressionAccess().getDataTypeExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RangeTypeSpecification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeTypeSpecification__Group__0__Impl
	rule__RangeTypeSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeTypeSpecification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeTypeSpecificationAccess().getIntKeyword_0()); }

	'int' 

{ after(grammarAccess.getRangeTypeSpecificationAccess().getIntKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeTypeSpecification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeTypeSpecification__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeTypeSpecification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeTypeSpecificationAccess().getBoundsAssignment_1()); }
(rule__RangeTypeSpecification__BoundsAssignment_1)
{ after(grammarAccess.getRangeTypeSpecificationAccess().getBoundsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IntegerBounds__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerBounds__Group__0__Impl
	rule__IntegerBounds__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerBounds__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerBoundsAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getIntegerBoundsAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerBounds__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerBounds__Group__1__Impl
	rule__IntegerBounds__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerBounds__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerBoundsAccess().getLowerBoundAssignment_1()); }
(rule__IntegerBounds__LowerBoundAssignment_1)
{ after(grammarAccess.getIntegerBoundsAccess().getLowerBoundAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerBounds__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerBounds__Group__2__Impl
	rule__IntegerBounds__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerBounds__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerBoundsAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getIntegerBoundsAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerBounds__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerBounds__Group__3__Impl
	rule__IntegerBounds__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerBounds__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerBoundsAccess().getUpperBoundAssignment_3()); }
(rule__IntegerBounds__UpperBoundAssignment_3)
{ after(grammarAccess.getIntegerBoundsAccess().getUpperBoundAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerBounds__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerBounds__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerBounds__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerBoundsAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getIntegerBoundsAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StructTypeSpecification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeSpecification__Group__0__Impl
	rule__StructTypeSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeSpecification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeSpecificationAccess().getStructKeyword_0()); }

	'struct' 

{ after(grammarAccess.getStructTypeSpecificationAccess().getStructKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructTypeSpecification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeSpecification__Group__1__Impl
	rule__StructTypeSpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeSpecification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeSpecificationAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getStructTypeSpecificationAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructTypeSpecification__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeSpecification__Group__2__Impl
	rule__StructTypeSpecification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeSpecification__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStructTypeSpecificationAccess().getGroup_2()); }
(rule__StructTypeSpecification__Group_2__0)
{ after(grammarAccess.getStructTypeSpecificationAccess().getGroup_2()); }
)
(
{ before(grammarAccess.getStructTypeSpecificationAccess().getGroup_2()); }
(rule__StructTypeSpecification__Group_2__0)*
{ after(grammarAccess.getStructTypeSpecificationAccess().getGroup_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructTypeSpecification__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeSpecification__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeSpecification__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeSpecificationAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getStructTypeSpecificationAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StructTypeSpecification__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeSpecification__Group_2__0__Impl
	rule__StructTypeSpecification__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeSpecification__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeSpecificationAccess().getDeclarationAssignment_2_0()); }
(rule__StructTypeSpecification__DeclarationAssignment_2_0)
{ after(grammarAccess.getStructTypeSpecificationAccess().getDeclarationAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructTypeSpecification__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeSpecification__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeSpecification__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeSpecificationAccess().getSemicolonKeyword_2_1()); }

	';' 

{ after(grammarAccess.getStructTypeSpecificationAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ScalarTypeSpecification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarTypeSpecification__Group__0__Impl
	rule__ScalarTypeSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarTypeSpecification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeSpecificationAccess().getScalarKeyword_0()); }

	'scalar' 

{ after(grammarAccess.getScalarTypeSpecificationAccess().getScalarKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarTypeSpecification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarTypeSpecification__Group__1__Impl
	rule__ScalarTypeSpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarTypeSpecification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeSpecificationAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getScalarTypeSpecificationAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarTypeSpecification__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarTypeSpecification__Group__2__Impl
	rule__ScalarTypeSpecification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarTypeSpecification__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeSpecificationAccess().getSizeExpressionAssignment_2()); }
(rule__ScalarTypeSpecification__SizeExpressionAssignment_2)
{ after(grammarAccess.getScalarTypeSpecificationAccess().getSizeExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarTypeSpecification__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarTypeSpecification__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarTypeSpecification__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeSpecificationAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getScalarTypeSpecificationAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypeDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group__0__Impl
	rule__TypeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getTypedefKeyword_0()); }

	'typedef' 

{ after(grammarAccess.getTypeDeclarationAccess().getTypedefKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group__1__Impl
	rule__TypeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getTypeDefinitionAssignment_1()); }
(rule__TypeDeclaration__TypeDefinitionAssignment_1)
{ after(grammarAccess.getTypeDeclarationAccess().getTypeDefinitionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group__2__Impl
	rule__TypeDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getTypeAssignment_2()); }
(rule__TypeDeclaration__TypeAssignment_2)
{ after(grammarAccess.getTypeDeclarationAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group__3__Impl
	rule__TypeDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getGroup_3()); }
(rule__TypeDeclaration__Group_3__0)*
{ after(grammarAccess.getTypeDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getTypeDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TypeDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group_3__0__Impl
	rule__TypeDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getTypeDeclarationAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getTypeAssignment_3_1()); }
(rule__TypeDeclaration__TypeAssignment_3_1)
{ after(grammarAccess.getTypeDeclarationAccess().getTypeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeclaredType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaredType__Group__0__Impl
	rule__DeclaredType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredTypeAccess().getDeclaredTypeAction_0()); }
(

)
{ after(grammarAccess.getDeclaredTypeAccess().getDeclaredTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclaredType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaredType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredTypeAccess().getNameAssignment_1()); }
(rule__DeclaredType__NameAssignment_1)
{ after(grammarAccess.getDeclaredTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ChannelPriorityDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelPriorityDeclaration__Group__0__Impl
	rule__ChannelPriorityDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPriorityDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPriorityDeclarationAccess().getChanKeyword_0()); }

	'chan' 

{ after(grammarAccess.getChannelPriorityDeclarationAccess().getChanKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelPriorityDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelPriorityDeclaration__Group__1__Impl
	rule__ChannelPriorityDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPriorityDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPriorityDeclarationAccess().getPriorityKeyword_1()); }

	'priority' 

{ after(grammarAccess.getChannelPriorityDeclarationAccess().getPriorityKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelPriorityDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelPriorityDeclaration__Group__2__Impl
	rule__ChannelPriorityDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPriorityDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPriorityDeclarationAccess().getGroupsAssignment_2()); }
(rule__ChannelPriorityDeclaration__GroupsAssignment_2)
{ after(grammarAccess.getChannelPriorityDeclarationAccess().getGroupsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelPriorityDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelPriorityDeclaration__Group__3__Impl
	rule__ChannelPriorityDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPriorityDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPriorityDeclarationAccess().getGroup_3()); }
(rule__ChannelPriorityDeclaration__Group_3__0)*
{ after(grammarAccess.getChannelPriorityDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelPriorityDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelPriorityDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPriorityDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPriorityDeclarationAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getChannelPriorityDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ChannelPriorityDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelPriorityDeclaration__Group_3__0__Impl
	rule__ChannelPriorityDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPriorityDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPriorityDeclarationAccess().getLtKeyword_3_0()); }

	'&lt;' 

{ after(grammarAccess.getChannelPriorityDeclarationAccess().getLtKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelPriorityDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelPriorityDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPriorityDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPriorityDeclarationAccess().getGroupsAssignment_3_1()); }
(rule__ChannelPriorityDeclaration__GroupsAssignment_3_1)
{ after(grammarAccess.getChannelPriorityDeclarationAccess().getGroupsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ChannelPriorityGroup__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelPriorityGroup__Group__0__Impl
	rule__ChannelPriorityGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPriorityGroup__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPriorityGroupAccess().getItemsAssignment_0()); }
(rule__ChannelPriorityGroup__ItemsAssignment_0)
{ after(grammarAccess.getChannelPriorityGroupAccess().getItemsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelPriorityGroup__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelPriorityGroup__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPriorityGroup__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPriorityGroupAccess().getGroup_1()); }
(rule__ChannelPriorityGroup__Group_1__0)*
{ after(grammarAccess.getChannelPriorityGroupAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ChannelPriorityGroup__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelPriorityGroup__Group_1__0__Impl
	rule__ChannelPriorityGroup__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPriorityGroup__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPriorityGroupAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getChannelPriorityGroupAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelPriorityGroup__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelPriorityGroup__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPriorityGroup__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPriorityGroupAccess().getItemsAssignment_1_1()); }
(rule__ChannelPriorityGroup__ItemsAssignment_1_1)
{ after(grammarAccess.getChannelPriorityGroupAccess().getItemsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefaultItem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultItem__Group__0__Impl
	rule__DefaultItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultItem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultItemAccess().getDefaultItemAction_0()); }
(

)
{ after(grammarAccess.getDefaultItemAccess().getDefaultItemAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultItem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultItem__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultItem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultItemAccess().getDefaultKeyword_1()); }

	'default' 

{ after(grammarAccess.getDefaultItemAccess().getDefaultKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameAssignment_0()); }
(rule__Function__NameAssignment_0)
{ after(grammarAccess.getFunctionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_2()); }
(rule__Function__Group_2__0)?
{ after(grammarAccess.getFunctionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getBlockAssignment_4()); }
(rule__Function__BlockAssignment_4)
{ after(grammarAccess.getFunctionAccess().getBlockAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Function__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_2__0__Impl
	rule__Function__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getParameterAssignment_2_0()); }
(rule__Function__ParameterAssignment_2_0)
{ after(grammarAccess.getFunctionAccess().getParameterAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_2_1()); }
(rule__Function__Group_2_1__0)*
{ after(grammarAccess.getFunctionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_2_1__0__Impl
	rule__Function__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getFunctionAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getParameterAssignment_2_1_1()); }
(rule__Function__ParameterAssignment_2_1_1)
{ after(grammarAccess.getFunctionAccess().getParameterAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterContainer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterContainer__Group__0__Impl
	rule__ParameterContainer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterContainer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterContainerAccess().getTypeDefinitionAssignment_0()); }
(rule__ParameterContainer__TypeDefinitionAssignment_0)
{ after(grammarAccess.getParameterContainerAccess().getTypeDefinitionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterContainer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterContainer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterContainer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterContainerAccess().getElementsAssignment_1()); }
(rule__ParameterContainer__ElementsAssignment_1)
{ after(grammarAccess.getParameterContainerAccess().getElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getCallTypeAssignment_0()); }
(rule__Parameter__CallTypeAssignment_0)?
{ after(grammarAccess.getParameterAccess().getCallTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
(rule__Parameter__NameAssignment_1)
{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBlockAction_1()); }
(

)
{ after(grammarAccess.getBlockAccess().getBlockAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__2__Impl
	rule__Block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getDeclarationsAssignment_2()); }
(rule__Block__DeclarationsAssignment_2)
{ after(grammarAccess.getBlockAccess().getDeclarationsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__3__Impl
	rule__Block__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementAssignment_3()); }
(rule__Block__StatementAssignment_3)*
{ after(grammarAccess.getBlockAccess().getStatementAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__BlockDeclarations__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockDeclarations__Group__0__Impl
	rule__BlockDeclarations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockDeclarations__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockDeclarationsAccess().getLocalDeclarationsAction_0()); }
(

)
{ after(grammarAccess.getBlockDeclarationsAccess().getLocalDeclarationsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BlockDeclarations__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockDeclarations__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockDeclarations__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockDeclarationsAccess().getDeclarationAssignment_1()); }
(rule__BlockDeclarations__DeclarationAssignment_1)*
{ after(grammarAccess.getBlockDeclarationsAccess().getDeclarationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BlockTypedDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockTypedDeclaration__Group__0__Impl
	rule__BlockTypedDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockTypedDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockTypedDeclarationAccess().getTypeDefinitionAssignment_0()); }
(rule__BlockTypedDeclaration__TypeDefinitionAssignment_0)
{ after(grammarAccess.getBlockTypedDeclarationAccess().getTypeDefinitionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BlockTypedDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockTypedDeclaration__Group__1__Impl
	rule__BlockTypedDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockTypedDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockTypedDeclarationAccess().getElementsAssignment_1()); }
(rule__BlockTypedDeclaration__ElementsAssignment_1)
{ after(grammarAccess.getBlockTypedDeclarationAccess().getElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BlockTypedDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockTypedDeclaration__Group__2__Impl
	rule__BlockTypedDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockTypedDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockTypedDeclarationAccess().getGroup_2()); }
(rule__BlockTypedDeclaration__Group_2__0)*
{ after(grammarAccess.getBlockTypedDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BlockTypedDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockTypedDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockTypedDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockTypedDeclarationAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getBlockTypedDeclarationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BlockTypedDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockTypedDeclaration__Group_2__0__Impl
	rule__BlockTypedDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockTypedDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockTypedDeclarationAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getBlockTypedDeclarationAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BlockTypedDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockTypedDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockTypedDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockTypedDeclarationAccess().getElementsAssignment_2_1()); }
(rule__BlockTypedDeclaration__ElementsAssignment_2_1)
{ after(grammarAccess.getBlockTypedDeclarationAccess().getElementsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EmptyStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmptyStatement__Group__0__Impl
	rule__EmptyStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmptyStatementAccess().getSemicolonKeyword_0()); }

	';' 

{ after(grammarAccess.getEmptyStatementAccess().getSemicolonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmptyStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmptyStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmptyStatementAccess().getEmptyStatementAction_1()); }
(

)
{ after(grammarAccess.getEmptyStatementAccess().getEmptyStatementAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionStatement__Group__0__Impl
	rule__ExpressionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionStatementAccess().getExpressionAssignment_0()); }
(rule__ExpressionStatement__ExpressionAssignment_0)
{ after(grammarAccess.getExpressionStatementAccess().getExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionStatementAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getExpressionStatementAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForLoop__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__0__Impl
	rule__ForLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getForLoopAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__1__Impl
	rule__ForLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getForLoopAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__2__Impl
	rule__ForLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getInitializationAssignment_2()); }
(rule__ForLoop__InitializationAssignment_2)
{ after(grammarAccess.getForLoopAccess().getInitializationAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__3__Impl
	rule__ForLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getForLoopAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__4__Impl
	rule__ForLoop__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getConditionAssignment_4()); }
(rule__ForLoop__ConditionAssignment_4)
{ after(grammarAccess.getForLoopAccess().getConditionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__5__Impl
	rule__ForLoop__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getForLoopAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__6__Impl
	rule__ForLoop__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getIterationAssignment_6()); }
(rule__ForLoop__IterationAssignment_6)
{ after(grammarAccess.getForLoopAccess().getIterationAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__7__Impl
	rule__ForLoop__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getForLoopAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getStatementAssignment_8()); }
(rule__ForLoop__StatementAssignment_8)
{ after(grammarAccess.getForLoopAccess().getStatementAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Iteration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Iteration__Group__0__Impl
	rule__Iteration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getIterationAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Iteration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Iteration__Group__1__Impl
	rule__Iteration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIterationAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Iteration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Iteration__Group__2__Impl
	rule__Iteration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationAccess().getElementsAssignment_2()); }
(rule__Iteration__ElementsAssignment_2)
{ after(grammarAccess.getIterationAccess().getElementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Iteration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Iteration__Group__3__Impl
	rule__Iteration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getIterationAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Iteration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Iteration__Group__4__Impl
	rule__Iteration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationAccess().getTypeDefinitionAssignment_4()); }
(rule__Iteration__TypeDefinitionAssignment_4)
{ after(grammarAccess.getIterationAccess().getTypeDefinitionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Iteration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Iteration__Group__5__Impl
	rule__Iteration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getIterationAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Iteration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Iteration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationAccess().getStatementAssignment_6()); }
(rule__Iteration__StatementAssignment_6)
{ after(grammarAccess.getIterationAccess().getStatementAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__WhileLoop__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileLoop__Group__0__Impl
	rule__WhileLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getWhileLoopAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileLoop__Group__1__Impl
	rule__WhileLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileLoop__Group__2__Impl
	rule__WhileLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getExpressionAssignment_2()); }
(rule__WhileLoop__ExpressionAssignment_2)
{ after(grammarAccess.getWhileLoopAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileLoop__Group__3__Impl
	rule__WhileLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileLoop__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getStatementAssignment_4()); }
(rule__WhileLoop__StatementAssignment_4)
{ after(grammarAccess.getWhileLoopAccess().getStatementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DoWhileLoop__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileLoop__Group__0__Impl
	rule__DoWhileLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileLoopAccess().getDoKeyword_0()); }

	'do' 

{ after(grammarAccess.getDoWhileLoopAccess().getDoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileLoop__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileLoop__Group__1__Impl
	rule__DoWhileLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileLoopAccess().getStatementAssignment_1()); }
(rule__DoWhileLoop__StatementAssignment_1)
{ after(grammarAccess.getDoWhileLoopAccess().getStatementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileLoop__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileLoop__Group__2__Impl
	rule__DoWhileLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileLoopAccess().getWhileKeyword_2()); }

	'while' 

{ after(grammarAccess.getDoWhileLoopAccess().getWhileKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileLoop__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileLoop__Group__3__Impl
	rule__DoWhileLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileLoopAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getDoWhileLoopAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileLoop__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileLoop__Group__4__Impl
	rule__DoWhileLoop__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileLoopAccess().getExpressionAssignment_4()); }
(rule__DoWhileLoop__ExpressionAssignment_4)
{ after(grammarAccess.getDoWhileLoopAccess().getExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileLoop__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileLoop__Group__5__Impl
	rule__DoWhileLoop__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileLoopAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getDoWhileLoopAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileLoop__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileLoop__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileLoopAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getDoWhileLoopAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__IfStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIfExpressionAssignment_2()); }
(rule__IfStatement__IfExpressionAssignment_2)
{ after(grammarAccess.getIfStatementAccess().getIfExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getThenStatementAssignment_4()); }
(rule__IfStatement__ThenStatementAssignment_4)
{ after(grammarAccess.getIfStatementAccess().getThenStatementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getGroup_5()); }
(rule__IfStatement__Group_5__0)?
{ after(grammarAccess.getIfStatementAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IfStatement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_5__0__Impl
	rule__IfStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseKeyword_5_0()); }
(
	'else' 
)
{ after(grammarAccess.getIfStatementAccess().getElseKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseStatementAssignment_5_1()); }
(rule__IfStatement__ElseStatementAssignment_5_1)
{ after(grammarAccess.getIfStatementAccess().getElseStatementAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReturnStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__0__Impl
	rule__ReturnStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getReturnStatementAction_0()); }
(

)
{ after(grammarAccess.getReturnStatementAccess().getReturnStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__1__Impl
	rule__ReturnStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getReturnKeyword_1()); }

	'return' 

{ after(grammarAccess.getReturnStatementAccess().getReturnKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__2__Impl
	rule__ReturnStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getReturnExpressionAssignment_2()); }
(rule__ReturnStatement__ReturnExpressionAssignment_2)?
{ after(grammarAccess.getReturnStatementAccess().getReturnExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__QuantificationExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuantificationExpression__Group_0__0__Impl
	rule__QuantificationExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantificationExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantificationExpressionAccess().getQuantificationExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getQuantificationExpressionAccess().getQuantificationExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuantificationExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuantificationExpression__Group_0__1__Impl
	rule__QuantificationExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantificationExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantificationExpressionAccess().getQuantifierAssignment_0_1()); }
(rule__QuantificationExpression__QuantifierAssignment_0_1)
{ after(grammarAccess.getQuantificationExpressionAccess().getQuantifierAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuantificationExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuantificationExpression__Group_0__2__Impl
	rule__QuantificationExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantificationExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantificationExpressionAccess().getLeftParenthesisKeyword_0_2()); }

	'(' 

{ after(grammarAccess.getQuantificationExpressionAccess().getLeftParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuantificationExpression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuantificationExpression__Group_0__3__Impl
	rule__QuantificationExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantificationExpression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantificationExpressionAccess().getElementsAssignment_0_3()); }
(rule__QuantificationExpression__ElementsAssignment_0_3)
{ after(grammarAccess.getQuantificationExpressionAccess().getElementsAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuantificationExpression__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuantificationExpression__Group_0__4__Impl
	rule__QuantificationExpression__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantificationExpression__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantificationExpressionAccess().getColonKeyword_0_4()); }

	':' 

{ after(grammarAccess.getQuantificationExpressionAccess().getColonKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuantificationExpression__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuantificationExpression__Group_0__5__Impl
	rule__QuantificationExpression__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantificationExpression__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantificationExpressionAccess().getTypeDefinitionAssignment_0_5()); }
(rule__QuantificationExpression__TypeDefinitionAssignment_0_5)
{ after(grammarAccess.getQuantificationExpressionAccess().getTypeDefinitionAssignment_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuantificationExpression__Group_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuantificationExpression__Group_0__6__Impl
	rule__QuantificationExpression__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantificationExpression__Group_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantificationExpressionAccess().getRightParenthesisKeyword_0_6()); }

	')' 

{ after(grammarAccess.getQuantificationExpressionAccess().getRightParenthesisKeyword_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuantificationExpression__Group_0__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuantificationExpression__Group_0__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantificationExpression__Group_0__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantificationExpressionAccess().getExpressionAssignment_0_7()); }
(rule__QuantificationExpression__ExpressionAssignment_0_7)
{ after(grammarAccess.getQuantificationExpressionAccess().getExpressionAssignment_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__LogicalExpression_OrImply__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression_OrImply__Group__0__Impl
	rule__LogicalExpression_OrImply__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_OrImply__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_OrImplyAccess().getLogicalExpression_AndParserRuleCall_0()); }
	ruleLogicalExpression_And
{ after(grammarAccess.getLogicalExpression_OrImplyAccess().getLogicalExpression_AndParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression_OrImply__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression_OrImply__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_OrImply__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_OrImplyAccess().getGroup_1()); }
(rule__LogicalExpression_OrImply__Group_1__0)*
{ after(grammarAccess.getLogicalExpression_OrImplyAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalExpression_OrImply__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression_OrImply__Group_1__0__Impl
	rule__LogicalExpression_OrImply__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_OrImply__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_OrImplyAccess().getLogicalExpressionFirstExprAction_1_0()); }
(

)
{ after(grammarAccess.getLogicalExpression_OrImplyAccess().getLogicalExpressionFirstExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression_OrImply__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression_OrImply__Group_1__1__Impl
	rule__LogicalExpression_OrImply__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_OrImply__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_OrImplyAccess().getOperatorAssignment_1_1()); }
(rule__LogicalExpression_OrImply__OperatorAssignment_1_1)
{ after(grammarAccess.getLogicalExpression_OrImplyAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression_OrImply__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression_OrImply__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_OrImply__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_OrImplyAccess().getSecondExprAssignment_1_2()); }
(rule__LogicalExpression_OrImply__SecondExprAssignment_1_2)
{ after(grammarAccess.getLogicalExpression_OrImplyAccess().getSecondExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LogicalExpression_And__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression_And__Group__0__Impl
	rule__LogicalExpression_And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_And__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_AndAccess().getNegationExpressionParserRuleCall_0()); }
	ruleNegationExpression
{ after(grammarAccess.getLogicalExpression_AndAccess().getNegationExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression_And__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression_And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_And__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_AndAccess().getGroup_1()); }
(rule__LogicalExpression_And__Group_1__0)*
{ after(grammarAccess.getLogicalExpression_AndAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalExpression_And__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression_And__Group_1__0__Impl
	rule__LogicalExpression_And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_And__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_AndAccess().getLogicalExpressionFirstExprAction_1_0()); }
(

)
{ after(grammarAccess.getLogicalExpression_AndAccess().getLogicalExpressionFirstExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression_And__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression_And__Group_1__1__Impl
	rule__LogicalExpression_And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_And__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_AndAccess().getOperatorAssignment_1_1()); }
(rule__LogicalExpression_And__OperatorAssignment_1_1)
{ after(grammarAccess.getLogicalExpression_AndAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression_And__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression_And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_And__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_AndAccess().getSecondExprAssignment_1_2()); }
(rule__LogicalExpression_And__SecondExprAssignment_1_2)
{ after(grammarAccess.getLogicalExpression_AndAccess().getSecondExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NegationExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegationExpression__Group_0__0__Impl
	rule__NegationExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NegationExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationExpressionAccess().getNegationExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getNegationExpressionAccess().getNegationExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NegationExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegationExpression__Group_0__1__Impl
	rule__NegationExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NegationExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationExpressionAccess().getNotKeyword_0_1()); }

	'not' 

{ after(grammarAccess.getNegationExpressionAccess().getNotKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NegationExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegationExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NegationExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationExpressionAccess().getNegatedExpressionAssignment_0_2()); }
(rule__NegationExpression__NegatedExpressionAssignment_0_2)
{ after(grammarAccess.getNegationExpressionAccess().getNegatedExpressionAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AssignmentExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentExpression__Group__0__Impl
	rule__AssignmentExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getConditionExpressionParserRuleCall_0()); }
	ruleConditionExpression
{ after(grammarAccess.getAssignmentExpressionAccess().getConditionExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getGroup_1()); }
(rule__AssignmentExpression__Group_1__0)?
{ after(grammarAccess.getAssignmentExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignmentExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentExpression__Group_1__0__Impl
	rule__AssignmentExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionFirstExprAction_1_0()); }
(

)
{ after(grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionFirstExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentExpression__Group_1__1__Impl
	rule__AssignmentExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getOperatorAssignment_1_1()); }
(rule__AssignmentExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getAssignmentExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getSecondExprAssignment_1_2()); }
(rule__AssignmentExpression__SecondExprAssignment_1_2)
{ after(grammarAccess.getAssignmentExpressionAccess().getSecondExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConditionExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionExpression__Group__0__Impl
	rule__ConditionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionExpressionAccess().getLogicalExpression_OrAlternativeParserRuleCall_0()); }
	ruleLogicalExpression_OrAlternative
{ after(grammarAccess.getConditionExpressionAccess().getLogicalExpression_OrAlternativeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionExpressionAccess().getGroup_1()); }
(rule__ConditionExpression__Group_1__0)?
{ after(grammarAccess.getConditionExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionExpression__Group_1__0__Impl
	rule__ConditionExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionExpressionAccess().getConditionExpressionIfExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getConditionExpressionAccess().getConditionExpressionIfExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionExpression__Group_1__1__Impl
	rule__ConditionExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionExpressionAccess().getQuestionMarkKeyword_1_1()); }

	'?' 

{ after(grammarAccess.getConditionExpressionAccess().getQuestionMarkKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionExpression__Group_1__2__Impl
	rule__ConditionExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionExpressionAccess().getThenExpressionAssignment_1_2()); }
(rule__ConditionExpression__ThenExpressionAssignment_1_2)
{ after(grammarAccess.getConditionExpressionAccess().getThenExpressionAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionExpression__Group_1__3__Impl
	rule__ConditionExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionExpressionAccess().getColonKeyword_1_3()); }

	':' 

{ after(grammarAccess.getConditionExpressionAccess().getColonKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionExpression__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionExpression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionExpression__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionExpressionAccess().getElseExpressionAssignment_1_4()); }
(rule__ConditionExpression__ElseExpressionAssignment_1_4)
{ after(grammarAccess.getConditionExpressionAccess().getElseExpressionAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LogicalExpression_OrAlternative__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression_OrAlternative__Group__0__Impl
	rule__LogicalExpression_OrAlternative__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_OrAlternative__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_OrAlternativeAccess().getLogicalExpression_AndAlternativeParserRuleCall_0()); }
	ruleLogicalExpression_AndAlternative
{ after(grammarAccess.getLogicalExpression_OrAlternativeAccess().getLogicalExpression_AndAlternativeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression_OrAlternative__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression_OrAlternative__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_OrAlternative__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_OrAlternativeAccess().getGroup_1()); }
(rule__LogicalExpression_OrAlternative__Group_1__0)*
{ after(grammarAccess.getLogicalExpression_OrAlternativeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalExpression_OrAlternative__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression_OrAlternative__Group_1__0__Impl
	rule__LogicalExpression_OrAlternative__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_OrAlternative__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_OrAlternativeAccess().getLogicalExpressionFirstExprAction_1_0()); }
(

)
{ after(grammarAccess.getLogicalExpression_OrAlternativeAccess().getLogicalExpressionFirstExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression_OrAlternative__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression_OrAlternative__Group_1__1__Impl
	rule__LogicalExpression_OrAlternative__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_OrAlternative__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_OrAlternativeAccess().getOperatorAssignment_1_1()); }
(rule__LogicalExpression_OrAlternative__OperatorAssignment_1_1)
{ after(grammarAccess.getLogicalExpression_OrAlternativeAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression_OrAlternative__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression_OrAlternative__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_OrAlternative__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_OrAlternativeAccess().getSecondExprAssignment_1_2()); }
(rule__LogicalExpression_OrAlternative__SecondExprAssignment_1_2)
{ after(grammarAccess.getLogicalExpression_OrAlternativeAccess().getSecondExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LogicalExpression_AndAlternative__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression_AndAlternative__Group__0__Impl
	rule__LogicalExpression_AndAlternative__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_AndAlternative__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_AndAlternativeAccess().getBitwiseExpression_OrParserRuleCall_0()); }
	ruleBitwiseExpression_Or
{ after(grammarAccess.getLogicalExpression_AndAlternativeAccess().getBitwiseExpression_OrParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression_AndAlternative__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression_AndAlternative__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_AndAlternative__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_AndAlternativeAccess().getGroup_1()); }
(rule__LogicalExpression_AndAlternative__Group_1__0)*
{ after(grammarAccess.getLogicalExpression_AndAlternativeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalExpression_AndAlternative__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression_AndAlternative__Group_1__0__Impl
	rule__LogicalExpression_AndAlternative__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_AndAlternative__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_AndAlternativeAccess().getLogicalExpressionFirstExprAction_1_0()); }
(

)
{ after(grammarAccess.getLogicalExpression_AndAlternativeAccess().getLogicalExpressionFirstExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression_AndAlternative__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression_AndAlternative__Group_1__1__Impl
	rule__LogicalExpression_AndAlternative__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_AndAlternative__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_AndAlternativeAccess().getOperatorAssignment_1_1()); }
(rule__LogicalExpression_AndAlternative__OperatorAssignment_1_1)
{ after(grammarAccess.getLogicalExpression_AndAlternativeAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression_AndAlternative__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression_AndAlternative__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_AndAlternative__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_AndAlternativeAccess().getSecondExprAssignment_1_2()); }
(rule__LogicalExpression_AndAlternative__SecondExprAssignment_1_2)
{ after(grammarAccess.getLogicalExpression_AndAlternativeAccess().getSecondExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BitwiseExpression_Or__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression_Or__Group__0__Impl
	rule__BitwiseExpression_Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_Or__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_OrAccess().getBitwiseExpression_XorParserRuleCall_0()); }
	ruleBitwiseExpression_Xor
{ after(grammarAccess.getBitwiseExpression_OrAccess().getBitwiseExpression_XorParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseExpression_Or__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression_Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_Or__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_OrAccess().getGroup_1()); }
(rule__BitwiseExpression_Or__Group_1__0)*
{ after(grammarAccess.getBitwiseExpression_OrAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseExpression_Or__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression_Or__Group_1__0__Impl
	rule__BitwiseExpression_Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_Or__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_OrAccess().getBitwiseExpressionFirstExprAction_1_0()); }
(

)
{ after(grammarAccess.getBitwiseExpression_OrAccess().getBitwiseExpressionFirstExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseExpression_Or__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression_Or__Group_1__1__Impl
	rule__BitwiseExpression_Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_Or__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_OrAccess().getOperatorAssignment_1_1()); }
(rule__BitwiseExpression_Or__OperatorAssignment_1_1)
{ after(grammarAccess.getBitwiseExpression_OrAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseExpression_Or__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression_Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_Or__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_OrAccess().getSecondExprAssignment_1_2()); }
(rule__BitwiseExpression_Or__SecondExprAssignment_1_2)
{ after(grammarAccess.getBitwiseExpression_OrAccess().getSecondExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BitwiseExpression_Xor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression_Xor__Group__0__Impl
	rule__BitwiseExpression_Xor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_Xor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_XorAccess().getBitwiseExpression_AndParserRuleCall_0()); }
	ruleBitwiseExpression_And
{ after(grammarAccess.getBitwiseExpression_XorAccess().getBitwiseExpression_AndParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseExpression_Xor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression_Xor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_Xor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_XorAccess().getGroup_1()); }
(rule__BitwiseExpression_Xor__Group_1__0)*
{ after(grammarAccess.getBitwiseExpression_XorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseExpression_Xor__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression_Xor__Group_1__0__Impl
	rule__BitwiseExpression_Xor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_Xor__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_XorAccess().getBitwiseExpressionFirstExprAction_1_0()); }
(

)
{ after(grammarAccess.getBitwiseExpression_XorAccess().getBitwiseExpressionFirstExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseExpression_Xor__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression_Xor__Group_1__1__Impl
	rule__BitwiseExpression_Xor__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_Xor__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_XorAccess().getOperatorAssignment_1_1()); }
(rule__BitwiseExpression_Xor__OperatorAssignment_1_1)
{ after(grammarAccess.getBitwiseExpression_XorAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseExpression_Xor__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression_Xor__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_Xor__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_XorAccess().getSecondExprAssignment_1_2()); }
(rule__BitwiseExpression_Xor__SecondExprAssignment_1_2)
{ after(grammarAccess.getBitwiseExpression_XorAccess().getSecondExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BitwiseExpression_And__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression_And__Group__0__Impl
	rule__BitwiseExpression_And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_And__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_AndAccess().getCompareExpression_EqualUnequalParserRuleCall_0()); }
	ruleCompareExpression_EqualUnequal
{ after(grammarAccess.getBitwiseExpression_AndAccess().getCompareExpression_EqualUnequalParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseExpression_And__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression_And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_And__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_AndAccess().getGroup_1()); }
(rule__BitwiseExpression_And__Group_1__0)*
{ after(grammarAccess.getBitwiseExpression_AndAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseExpression_And__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression_And__Group_1__0__Impl
	rule__BitwiseExpression_And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_And__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_AndAccess().getBitwiseExpressionFirstExprAction_1_0()); }
(

)
{ after(grammarAccess.getBitwiseExpression_AndAccess().getBitwiseExpressionFirstExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseExpression_And__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression_And__Group_1__1__Impl
	rule__BitwiseExpression_And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_And__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_AndAccess().getOperatorAssignment_1_1()); }
(rule__BitwiseExpression_And__OperatorAssignment_1_1)
{ after(grammarAccess.getBitwiseExpression_AndAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseExpression_And__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseExpression_And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_And__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_AndAccess().getSecondExprAssignment_1_2()); }
(rule__BitwiseExpression_And__SecondExprAssignment_1_2)
{ after(grammarAccess.getBitwiseExpression_AndAccess().getSecondExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CompareExpression_EqualUnequal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression_EqualUnequal__Group__0__Impl
	rule__CompareExpression_EqualUnequal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression_EqualUnequal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpression_EqualUnequalAccess().getCompareExpression_OtherParserRuleCall_0()); }
	ruleCompareExpression_Other
{ after(grammarAccess.getCompareExpression_EqualUnequalAccess().getCompareExpression_OtherParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression_EqualUnequal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression_EqualUnequal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression_EqualUnequal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpression_EqualUnequalAccess().getGroup_1()); }
(rule__CompareExpression_EqualUnequal__Group_1__0)*
{ after(grammarAccess.getCompareExpression_EqualUnequalAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareExpression_EqualUnequal__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression_EqualUnequal__Group_1__0__Impl
	rule__CompareExpression_EqualUnequal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression_EqualUnequal__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpression_EqualUnequalAccess().getCompareExpressionFirstExprAction_1_0()); }
(

)
{ after(grammarAccess.getCompareExpression_EqualUnequalAccess().getCompareExpressionFirstExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression_EqualUnequal__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression_EqualUnequal__Group_1__1__Impl
	rule__CompareExpression_EqualUnequal__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression_EqualUnequal__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpression_EqualUnequalAccess().getOperatorAssignment_1_1()); }
(rule__CompareExpression_EqualUnequal__OperatorAssignment_1_1)
{ after(grammarAccess.getCompareExpression_EqualUnequalAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression_EqualUnequal__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression_EqualUnequal__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression_EqualUnequal__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpression_EqualUnequalAccess().getSecondExprAssignment_1_2()); }
(rule__CompareExpression_EqualUnequal__SecondExprAssignment_1_2)
{ after(grammarAccess.getCompareExpression_EqualUnequalAccess().getSecondExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CompareExpression_Other__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression_Other__Group__0__Impl
	rule__CompareExpression_Other__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression_Other__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpression_OtherAccess().getMinMaxExpressionParserRuleCall_0()); }
	ruleMinMaxExpression
{ after(grammarAccess.getCompareExpression_OtherAccess().getMinMaxExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression_Other__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression_Other__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression_Other__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpression_OtherAccess().getGroup_1()); }
(rule__CompareExpression_Other__Group_1__0)*
{ after(grammarAccess.getCompareExpression_OtherAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareExpression_Other__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression_Other__Group_1__0__Impl
	rule__CompareExpression_Other__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression_Other__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpression_OtherAccess().getCompareExpressionFirstExprAction_1_0()); }
(

)
{ after(grammarAccess.getCompareExpression_OtherAccess().getCompareExpressionFirstExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression_Other__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression_Other__Group_1__1__Impl
	rule__CompareExpression_Other__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression_Other__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpression_OtherAccess().getOperatorAssignment_1_1()); }
(rule__CompareExpression_Other__OperatorAssignment_1_1)
{ after(grammarAccess.getCompareExpression_OtherAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression_Other__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression_Other__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression_Other__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpression_OtherAccess().getSecondExprAssignment_1_2()); }
(rule__CompareExpression_Other__SecondExprAssignment_1_2)
{ after(grammarAccess.getCompareExpression_OtherAccess().getSecondExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MinMaxExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinMaxExpression__Group__0__Impl
	rule__MinMaxExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinMaxExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinMaxExpressionAccess().getBitShiftExpressionParserRuleCall_0()); }
	ruleBitShiftExpression
{ after(grammarAccess.getMinMaxExpressionAccess().getBitShiftExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinMaxExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinMaxExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinMaxExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinMaxExpressionAccess().getGroup_1()); }
(rule__MinMaxExpression__Group_1__0)*
{ after(grammarAccess.getMinMaxExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MinMaxExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinMaxExpression__Group_1__0__Impl
	rule__MinMaxExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinMaxExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinMaxExpressionAccess().getMinMaxExpressionFirstExprAction_1_0()); }
(

)
{ after(grammarAccess.getMinMaxExpressionAccess().getMinMaxExpressionFirstExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinMaxExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinMaxExpression__Group_1__1__Impl
	rule__MinMaxExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MinMaxExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinMaxExpressionAccess().getOperatorAssignment_1_1()); }
(rule__MinMaxExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getMinMaxExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinMaxExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinMaxExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinMaxExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinMaxExpressionAccess().getSecondExprAssignment_1_2()); }
(rule__MinMaxExpression__SecondExprAssignment_1_2)
{ after(grammarAccess.getMinMaxExpressionAccess().getSecondExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BitShiftExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitShiftExpression__Group__0__Impl
	rule__BitShiftExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitShiftExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitShiftExpressionAccess().getArithmeticExpression_PlusMinusParserRuleCall_0()); }
	ruleArithmeticExpression_PlusMinus
{ after(grammarAccess.getBitShiftExpressionAccess().getArithmeticExpression_PlusMinusParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitShiftExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitShiftExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitShiftExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitShiftExpressionAccess().getGroup_1()); }
(rule__BitShiftExpression__Group_1__0)*
{ after(grammarAccess.getBitShiftExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitShiftExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitShiftExpression__Group_1__0__Impl
	rule__BitShiftExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitShiftExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitShiftExpressionAccess().getBitShiftExpressionFirstExprAction_1_0()); }
(

)
{ after(grammarAccess.getBitShiftExpressionAccess().getBitShiftExpressionFirstExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitShiftExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitShiftExpression__Group_1__1__Impl
	rule__BitShiftExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitShiftExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitShiftExpressionAccess().getOperatorAssignment_1_1()); }
(rule__BitShiftExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getBitShiftExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitShiftExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitShiftExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitShiftExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitShiftExpressionAccess().getSecondExprAssignment_1_2()); }
(rule__BitShiftExpression__SecondExprAssignment_1_2)
{ after(grammarAccess.getBitShiftExpressionAccess().getSecondExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArithmeticExpression_PlusMinus__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticExpression_PlusMinus__Group__0__Impl
	rule__ArithmeticExpression_PlusMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression_PlusMinus__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpression_PlusMinusAccess().getArithmeticExpression_OtherParserRuleCall_0()); }
	ruleArithmeticExpression_Other
{ after(grammarAccess.getArithmeticExpression_PlusMinusAccess().getArithmeticExpression_OtherParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression_PlusMinus__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticExpression_PlusMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression_PlusMinus__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpression_PlusMinusAccess().getGroup_1()); }
(rule__ArithmeticExpression_PlusMinus__Group_1__0)*
{ after(grammarAccess.getArithmeticExpression_PlusMinusAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArithmeticExpression_PlusMinus__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticExpression_PlusMinus__Group_1__0__Impl
	rule__ArithmeticExpression_PlusMinus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression_PlusMinus__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpression_PlusMinusAccess().getArithmeticExpressionFirstExprAction_1_0()); }
(

)
{ after(grammarAccess.getArithmeticExpression_PlusMinusAccess().getArithmeticExpressionFirstExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression_PlusMinus__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticExpression_PlusMinus__Group_1__1__Impl
	rule__ArithmeticExpression_PlusMinus__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression_PlusMinus__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpression_PlusMinusAccess().getOperatorAssignment_1_1()); }
(rule__ArithmeticExpression_PlusMinus__OperatorAssignment_1_1)
{ after(grammarAccess.getArithmeticExpression_PlusMinusAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression_PlusMinus__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticExpression_PlusMinus__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression_PlusMinus__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpression_PlusMinusAccess().getSecondExprAssignment_1_2()); }
(rule__ArithmeticExpression_PlusMinus__SecondExprAssignment_1_2)
{ after(grammarAccess.getArithmeticExpression_PlusMinusAccess().getSecondExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArithmeticExpression_Other__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticExpression_Other__Group__0__Impl
	rule__ArithmeticExpression_Other__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression_Other__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpression_OtherAccess().getNegationExpression_AlternativeParserRuleCall_0()); }
	ruleNegationExpression_Alternative
{ after(grammarAccess.getArithmeticExpression_OtherAccess().getNegationExpression_AlternativeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression_Other__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticExpression_Other__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression_Other__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpression_OtherAccess().getGroup_1()); }
(rule__ArithmeticExpression_Other__Group_1__0)*
{ after(grammarAccess.getArithmeticExpression_OtherAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArithmeticExpression_Other__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticExpression_Other__Group_1__0__Impl
	rule__ArithmeticExpression_Other__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression_Other__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpression_OtherAccess().getArithmeticExpressionFirstExprAction_1_0()); }
(

)
{ after(grammarAccess.getArithmeticExpression_OtherAccess().getArithmeticExpressionFirstExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression_Other__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticExpression_Other__Group_1__1__Impl
	rule__ArithmeticExpression_Other__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression_Other__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpression_OtherAccess().getOperatorAssignment_1_1()); }
(rule__ArithmeticExpression_Other__OperatorAssignment_1_1)
{ after(grammarAccess.getArithmeticExpression_OtherAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression_Other__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticExpression_Other__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression_Other__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpression_OtherAccess().getSecondExprAssignment_1_2()); }
(rule__ArithmeticExpression_Other__SecondExprAssignment_1_2)
{ after(grammarAccess.getArithmeticExpression_OtherAccess().getSecondExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NegationExpression_Alternative__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegationExpression_Alternative__Group_0__0__Impl
	rule__NegationExpression_Alternative__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NegationExpression_Alternative__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationExpression_AlternativeAccess().getNegationExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getNegationExpression_AlternativeAccess().getNegationExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NegationExpression_Alternative__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegationExpression_Alternative__Group_0__1__Impl
	rule__NegationExpression_Alternative__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NegationExpression_Alternative__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationExpression_AlternativeAccess().getExclamationMarkKeyword_0_1()); }

	'!' 

{ after(grammarAccess.getNegationExpression_AlternativeAccess().getExclamationMarkKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NegationExpression_Alternative__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegationExpression_Alternative__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NegationExpression_Alternative__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationExpression_AlternativeAccess().getNegatedExpressionAssignment_0_2()); }
(rule__NegationExpression_Alternative__NegatedExpressionAssignment_0_2)
{ after(grammarAccess.getNegationExpression_AlternativeAccess().getNegatedExpressionAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PreIncrementDecrementExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PreIncrementDecrementExpression__Group_1__0__Impl
	rule__PreIncrementDecrementExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementDecrementExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementDecrementExpressionAccess().getIncrementDecrementExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getPreIncrementDecrementExpressionAccess().getIncrementDecrementExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PreIncrementDecrementExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PreIncrementDecrementExpression__Group_1__1__Impl
	rule__PreIncrementDecrementExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementDecrementExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementDecrementExpressionAccess().getAlternatives_1_1()); }
(rule__PreIncrementDecrementExpression__Alternatives_1_1)
{ after(grammarAccess.getPreIncrementDecrementExpressionAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PreIncrementDecrementExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PreIncrementDecrementExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementDecrementExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementDecrementExpressionAccess().getExpressionAssignment_1_2()); }
(rule__PreIncrementDecrementExpression__ExpressionAssignment_1_2)
{ after(grammarAccess.getPreIncrementDecrementExpressionAccess().getExpressionAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PreIncrementDecrementExpression__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PreIncrementDecrementExpression__Group_1_1_0__0__Impl
	rule__PreIncrementDecrementExpression__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementDecrementExpression__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementDecrementExpressionAccess().getPositionAssignment_1_1_0_0()); }
(rule__PreIncrementDecrementExpression__PositionAssignment_1_1_0_0)
{ after(grammarAccess.getPreIncrementDecrementExpressionAccess().getPositionAssignment_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PreIncrementDecrementExpression__Group_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PreIncrementDecrementExpression__Group_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementDecrementExpression__Group_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementDecrementExpressionAccess().getOperatorAssignment_1_1_0_1()); }
(rule__PreIncrementDecrementExpression__OperatorAssignment_1_1_0_1)
{ after(grammarAccess.getPreIncrementDecrementExpressionAccess().getOperatorAssignment_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PreIncrementDecrementExpression__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PreIncrementDecrementExpression__Group_1_1_1__0__Impl
	rule__PreIncrementDecrementExpression__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementDecrementExpression__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementDecrementExpressionAccess().getPositionAssignment_1_1_1_0()); }
(rule__PreIncrementDecrementExpression__PositionAssignment_1_1_1_0)
{ after(grammarAccess.getPreIncrementDecrementExpressionAccess().getPositionAssignment_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PreIncrementDecrementExpression__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PreIncrementDecrementExpression__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementDecrementExpression__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementDecrementExpressionAccess().getOperatorAssignment_1_1_1_1()); }
(rule__PreIncrementDecrementExpression__OperatorAssignment_1_1_1_1)
{ after(grammarAccess.getPreIncrementDecrementExpressionAccess().getOperatorAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PostIncrementDecrementExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostIncrementDecrementExpression__Group__0__Impl
	rule__PostIncrementDecrementExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementDecrementExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementDecrementExpressionAccess().getScopedIdentifierExpressionParserRuleCall_0()); }
	ruleScopedIdentifierExpression
{ after(grammarAccess.getPostIncrementDecrementExpressionAccess().getScopedIdentifierExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostIncrementDecrementExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostIncrementDecrementExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementDecrementExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementDecrementExpressionAccess().getGroup_1()); }
(rule__PostIncrementDecrementExpression__Group_1__0)*
{ after(grammarAccess.getPostIncrementDecrementExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PostIncrementDecrementExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostIncrementDecrementExpression__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementDecrementExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementDecrementExpressionAccess().getGroup_1_0()); }
(rule__PostIncrementDecrementExpression__Group_1_0__0)
{ after(grammarAccess.getPostIncrementDecrementExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__PostIncrementDecrementExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostIncrementDecrementExpression__Group_1_0__0__Impl
	rule__PostIncrementDecrementExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementDecrementExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementDecrementExpressionAccess().getIncrementDecrementExpressionExpressionAction_1_0_0()); }
(

)
{ after(grammarAccess.getPostIncrementDecrementExpressionAccess().getIncrementDecrementExpressionExpressionAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostIncrementDecrementExpression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostIncrementDecrementExpression__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementDecrementExpression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementDecrementExpressionAccess().getAlternatives_1_0_1()); }
(rule__PostIncrementDecrementExpression__Alternatives_1_0_1)
{ after(grammarAccess.getPostIncrementDecrementExpressionAccess().getAlternatives_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PostIncrementDecrementExpression__Group_1_0_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostIncrementDecrementExpression__Group_1_0_1_0__0__Impl
	rule__PostIncrementDecrementExpression__Group_1_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementDecrementExpression__Group_1_0_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementDecrementExpressionAccess().getPositionAssignment_1_0_1_0_0()); }
(rule__PostIncrementDecrementExpression__PositionAssignment_1_0_1_0_0)
{ after(grammarAccess.getPostIncrementDecrementExpressionAccess().getPositionAssignment_1_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostIncrementDecrementExpression__Group_1_0_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostIncrementDecrementExpression__Group_1_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementDecrementExpression__Group_1_0_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementDecrementExpressionAccess().getOperatorAssignment_1_0_1_0_1()); }
(rule__PostIncrementDecrementExpression__OperatorAssignment_1_0_1_0_1)
{ after(grammarAccess.getPostIncrementDecrementExpressionAccess().getOperatorAssignment_1_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PostIncrementDecrementExpression__Group_1_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostIncrementDecrementExpression__Group_1_0_1_1__0__Impl
	rule__PostIncrementDecrementExpression__Group_1_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementDecrementExpression__Group_1_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementDecrementExpressionAccess().getPositionAssignment_1_0_1_1_0()); }
(rule__PostIncrementDecrementExpression__PositionAssignment_1_0_1_1_0)
{ after(grammarAccess.getPostIncrementDecrementExpressionAccess().getPositionAssignment_1_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostIncrementDecrementExpression__Group_1_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostIncrementDecrementExpression__Group_1_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementDecrementExpression__Group_1_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementDecrementExpressionAccess().getOperatorAssignment_1_0_1_1_1()); }
(rule__PostIncrementDecrementExpression__OperatorAssignment_1_0_1_1_1)
{ after(grammarAccess.getPostIncrementDecrementExpressionAccess().getOperatorAssignment_1_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ScopedIdentifierExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopedIdentifierExpression__Group__0__Impl
	rule__ScopedIdentifierExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifierExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopedIdentifierExpressionAccess().getTerminatingExpressionsParserRuleCall_0()); }
	ruleTerminatingExpressions
{ after(grammarAccess.getScopedIdentifierExpressionAccess().getTerminatingExpressionsParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedIdentifierExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopedIdentifierExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifierExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopedIdentifierExpressionAccess().getGroup_1()); }
(rule__ScopedIdentifierExpression__Group_1__0)*
{ after(grammarAccess.getScopedIdentifierExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ScopedIdentifierExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopedIdentifierExpression__Group_1__0__Impl
	rule__ScopedIdentifierExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifierExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopedIdentifierExpressionAccess().getScopedIdentifierExpressionScopeAction_1_0()); }
(

)
{ after(grammarAccess.getScopedIdentifierExpressionAccess().getScopedIdentifierExpressionScopeAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedIdentifierExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopedIdentifierExpression__Group_1__1__Impl
	rule__ScopedIdentifierExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifierExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopedIdentifierExpressionAccess().getFullStopKeyword_1_1()); }

	'.' 

{ after(grammarAccess.getScopedIdentifierExpressionAccess().getFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedIdentifierExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopedIdentifierExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifierExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopedIdentifierExpressionAccess().getIdentifierAssignment_1_2()); }
(rule__ScopedIdentifierExpression__IdentifierAssignment_1_2)
{ after(grammarAccess.getScopedIdentifierExpressionAccess().getIdentifierAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TerminatingExpressions__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminatingExpressions__Group_3__0__Impl
	rule__TerminatingExpressions__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatingExpressions__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminatingExpressionsAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getTerminatingExpressionsAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminatingExpressions__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminatingExpressions__Group_3__1__Impl
	rule__TerminatingExpressions__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatingExpressions__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminatingExpressionsAccess().getExpressionParserRuleCall_3_1()); }
	ruleExpression
{ after(grammarAccess.getTerminatingExpressionsAccess().getExpressionParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminatingExpressions__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminatingExpressions__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminatingExpressions__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminatingExpressionsAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getTerminatingExpressionsAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LiteralExpressionText__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralExpressionText__Group_2__0__Impl
	rule__LiteralExpressionText__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpressionText__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionTextAccess().getHyphenMinusKeyword_2_0()); }
(
	'-' 
)?
{ after(grammarAccess.getLiteralExpressionTextAccess().getHyphenMinusKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralExpressionText__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralExpressionText__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpressionText__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionTextAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
{ after(grammarAccess.getLiteralExpressionTextAccess().getINTTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionCallExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallExpression__Group__0__Impl
	rule__FunctionCallExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getFunctionAssignment_0()); }
(rule__FunctionCallExpression__FunctionAssignment_0)
{ after(grammarAccess.getFunctionCallExpressionAccess().getFunctionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallExpression__Group__1__Impl
	rule__FunctionCallExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFunctionCallExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallExpression__Group__2__Impl
	rule__FunctionCallExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getGroup_2()); }
(rule__FunctionCallExpression__Group_2__0)?
{ after(grammarAccess.getFunctionCallExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFunctionCallExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionCallExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallExpression__Group_2__0__Impl
	rule__FunctionCallExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getArgumentAssignment_2_0()); }
(rule__FunctionCallExpression__ArgumentAssignment_2_0)
{ after(grammarAccess.getFunctionCallExpressionAccess().getArgumentAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getGroup_2_1()); }
(rule__FunctionCallExpression__Group_2_1__0)*
{ after(grammarAccess.getFunctionCallExpressionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionCallExpression__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallExpression__Group_2_1__0__Impl
	rule__FunctionCallExpression__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getFunctionCallExpressionAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallExpression__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallExpression__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getArgumentAssignment_2_1_1()); }
(rule__FunctionCallExpression__ArgumentAssignment_2_1_1)
{ after(grammarAccess.getFunctionCallExpressionAccess().getArgumentAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IdentifierExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierExpression__Group__0__Impl
	rule__IdentifierExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierExpressionAccess().getIdentifierAssignment_0()); }
(rule__IdentifierExpression__IdentifierAssignment_0)
{ after(grammarAccess.getIdentifierExpressionAccess().getIdentifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierExpressionAccess().getGroup_1()); }
(rule__IdentifierExpression__Group_1__0)*
{ after(grammarAccess.getIdentifierExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IdentifierExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierExpression__Group_1__0__Impl
	rule__IdentifierExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierExpressionAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getIdentifierExpressionAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierExpression__Group_1__1__Impl
	rule__IdentifierExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierExpressionAccess().getIndexAssignment_1_1()); }
(rule__IdentifierExpression__IndexAssignment_1_1)
{ after(grammarAccess.getIdentifierExpressionAccess().getIndexAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierExpressionAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getIdentifierExpressionAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Template__UnorderedGroup_2
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getTemplateAccess().getUnorderedGroup_2());
    }
:
	rule__Template__UnorderedGroup_2__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getTemplateAccess().getUnorderedGroup_2());
	restoreStackSize(stackSize);
}


rule__Template__UnorderedGroup_2__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTemplateAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTemplateAccess().getUnorderedGroup_2(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTemplateAccess().getGroup_2_0()); }
						(rule__Template__Group_2_0__0)
						{ after(grammarAccess.getTemplateAccess().getGroup_2_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTemplateAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTemplateAccess().getUnorderedGroup_2(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTemplateAccess().getGroup_2_1()); }
						(rule__Template__Group_2_1__0)
						{ after(grammarAccess.getTemplateAccess().getGroup_2_1()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTemplateAccess().getUnorderedGroup_2());
	restoreStackSize(stackSize);
}


rule__Template__UnorderedGroup_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__UnorderedGroup_2__Impl
	rule__Template__UnorderedGroup_2__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Template__UnorderedGroup_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__UnorderedGroup_2__Impl
;
finally {
	restoreStackSize(stackSize);
}






rule__Location__UnorderedGroup_2
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getLocationAccess().getUnorderedGroup_2());
    }
:
	rule__Location__UnorderedGroup_2__0
	
	{getUnorderedGroupHelper().canLeave(grammarAccess.getLocationAccess().getUnorderedGroup_2())}?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getLocationAccess().getUnorderedGroup_2());
	restoreStackSize(stackSize);
}


rule__Location__UnorderedGroup_2__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getLocationAccess().getGroup_2_0()); }
						(rule__Location__Group_2_0__0)
						{ after(grammarAccess.getLocationAccess().getGroup_2_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getLocationAccess().getPositionAssignment_2_1()); }
						(rule__Location__PositionAssignment_2_1)
						{ after(grammarAccess.getLocationAccess().getPositionAssignment_2_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getLocationAccess().getGroup_2_2()); }
						(rule__Location__Group_2_2__0)
						{ after(grammarAccess.getLocationAccess().getGroup_2_2()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLocationAccess().getUnorderedGroup_2());
	restoreStackSize(stackSize);
}


rule__Location__UnorderedGroup_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__UnorderedGroup_2__Impl
	rule__Location__UnorderedGroup_2__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Location__UnorderedGroup_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__UnorderedGroup_2__Impl
	rule__Location__UnorderedGroup_2__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__Location__UnorderedGroup_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__UnorderedGroup_2__Impl
;
finally {
	restoreStackSize(stackSize);
}








rule__Location__UnorderedGroup_3_1_1_2
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2());
    }
:
	rule__Location__UnorderedGroup_3_1_1_2__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2());
	restoreStackSize(stackSize);
}


rule__Location__UnorderedGroup_3_1_1_2__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getLocationAccess().getGroup_3_1_1_2_0()); }
						(rule__Location__Group_3_1_1_2_0__0)
						{ after(grammarAccess.getLocationAccess().getGroup_3_1_1_2_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getLocationAccess().getGroup_3_1_1_2_1()); }
						(rule__Location__Group_3_1_1_2_1__0)
						{ after(grammarAccess.getLocationAccess().getGroup_3_1_1_2_1()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2());
	restoreStackSize(stackSize);
}


rule__Location__UnorderedGroup_3_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__UnorderedGroup_3_1_1_2__Impl
	rule__Location__UnorderedGroup_3_1_1_2__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Location__UnorderedGroup_3_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__UnorderedGroup_3_1_1_2__Impl
;
finally {
	restoreStackSize(stackSize);
}






rule__Location__UnorderedGroup_3_1_2
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2());
    }
:
	rule__Location__UnorderedGroup_3_1_2__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2());
	restoreStackSize(stackSize);
}


rule__Location__UnorderedGroup_3_1_2__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getLocationAccess().getGroup_3_1_2_0()); }
						(rule__Location__Group_3_1_2_0__0)
						{ after(grammarAccess.getLocationAccess().getGroup_3_1_2_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getLocationAccess().getGroup_3_1_2_1()); }
						(rule__Location__Group_3_1_2_1__0)
						{ after(grammarAccess.getLocationAccess().getGroup_3_1_2_1()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2());
	restoreStackSize(stackSize);
}


rule__Location__UnorderedGroup_3_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__UnorderedGroup_3_1_2__Impl
	rule__Location__UnorderedGroup_3_1_2__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Location__UnorderedGroup_3_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__UnorderedGroup_3_1_2__Impl
;
finally {
	restoreStackSize(stackSize);
}






rule__Location__UnorderedGroup_3_1_2_0_5
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5());
    }
:
	rule__Location__UnorderedGroup_3_1_2_0_5__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5());
	restoreStackSize(stackSize);
}


rule__Location__UnorderedGroup_3_1_2_0_5__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getLocationAccess().getGroup_3_1_2_0_5_0()); }
						(rule__Location__Group_3_1_2_0_5_0__0)
						{ after(grammarAccess.getLocationAccess().getGroup_3_1_2_0_5_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getLocationAccess().getGroup_3_1_2_0_5_1()); }
						(rule__Location__Group_3_1_2_0_5_1__0)
						{ after(grammarAccess.getLocationAccess().getGroup_3_1_2_0_5_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getLocationAccess().getGroup_3_1_2_0_5_2()); }
						(rule__Location__Group_3_1_2_0_5_2__0)
						{ after(grammarAccess.getLocationAccess().getGroup_3_1_2_0_5_2()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5());
	restoreStackSize(stackSize);
}


rule__Location__UnorderedGroup_3_1_2_0_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__UnorderedGroup_3_1_2_0_5__Impl
	rule__Location__UnorderedGroup_3_1_2_0_5__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Location__UnorderedGroup_3_1_2_0_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__UnorderedGroup_3_1_2_0_5__Impl
	rule__Location__UnorderedGroup_3_1_2_0_5__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__Location__UnorderedGroup_3_1_2_0_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__UnorderedGroup_3_1_2_0_5__Impl
;
finally {
	restoreStackSize(stackSize);
}








rule__Location__UnorderedGroup_3_1_2_1_5
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5());
    }
:
	rule__Location__UnorderedGroup_3_1_2_1_5__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5());
	restoreStackSize(stackSize);
}


rule__Location__UnorderedGroup_3_1_2_1_5__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getLocationAccess().getGroup_3_1_2_1_5_0()); }
						(rule__Location__Group_3_1_2_1_5_0__0)
						{ after(grammarAccess.getLocationAccess().getGroup_3_1_2_1_5_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getLocationAccess().getGroup_3_1_2_1_5_1()); }
						(rule__Location__Group_3_1_2_1_5_1__0)
						{ after(grammarAccess.getLocationAccess().getGroup_3_1_2_1_5_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getLocationAccess().getGroup_3_1_2_1_5_2()); }
						(rule__Location__Group_3_1_2_1_5_2__0)
						{ after(grammarAccess.getLocationAccess().getGroup_3_1_2_1_5_2()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5());
	restoreStackSize(stackSize);
}


rule__Location__UnorderedGroup_3_1_2_1_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__UnorderedGroup_3_1_2_1_5__Impl
	rule__Location__UnorderedGroup_3_1_2_1_5__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Location__UnorderedGroup_3_1_2_1_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__UnorderedGroup_3_1_2_1_5__Impl
	rule__Location__UnorderedGroup_3_1_2_1_5__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__Location__UnorderedGroup_3_1_2_1_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__UnorderedGroup_3_1_2_1_5__Impl
;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__UnorderedGroup_2
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEdgeAccess().getUnorderedGroup_2());
    }
:
	rule__Edge__UnorderedGroup_2__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEdgeAccess().getUnorderedGroup_2());
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_2__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_2(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_2_0()); }
						(rule__Edge__Group_2_0__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_2_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_2(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_2_1()); }
						(rule__Edge__Group_2_1__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_2_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_2(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_2_2()); }
						(rule__Edge__Group_2_2__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_2_2()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_2());
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_2__Impl
	rule__Edge__UnorderedGroup_2__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_2__Impl
	rule__Edge__UnorderedGroup_2__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_2__Impl
;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__UnorderedGroup_16
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEdgeAccess().getUnorderedGroup_16());
    }
:
	rule__Edge__UnorderedGroup_16__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEdgeAccess().getUnorderedGroup_16());
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_16_0()); }
						(rule__Edge__Group_16_0__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_16_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_16_1()); }
						(rule__Edge__Group_16_1__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_16_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_16_2()); }
						(rule__Edge__Group_16_2__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_16_2()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 3);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_16_3()); }
						(rule__Edge__Group_16_3__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_16_3()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 4);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_16_4()); }
						(rule__Edge__Group_16_4__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_16_4()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16());
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_16__Impl
	rule__Edge__UnorderedGroup_16__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_16__Impl
	rule__Edge__UnorderedGroup_16__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_16__Impl
	rule__Edge__UnorderedGroup_16__3?
;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_16__Impl
	rule__Edge__UnorderedGroup_16__4?
;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_16__Impl
;
finally {
	restoreStackSize(stackSize);
}












rule__Edge__UnorderedGroup_16_0_5
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5());
    }
:
	rule__Edge__UnorderedGroup_16_0_5__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5());
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16_0_5__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_16_0_5_0()); }
						(rule__Edge__Group_16_0_5_0__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_16_0_5_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_16_0_5_1()); }
						(rule__Edge__Group_16_0_5_1__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_16_0_5_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_16_0_5_2()); }
						(rule__Edge__Group_16_0_5_2__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_16_0_5_2()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5());
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16_0_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_16_0_5__Impl
	rule__Edge__UnorderedGroup_16_0_5__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16_0_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_16_0_5__Impl
	rule__Edge__UnorderedGroup_16_0_5__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16_0_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_16_0_5__Impl
;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__UnorderedGroup_16_1_5
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5());
    }
:
	rule__Edge__UnorderedGroup_16_1_5__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5());
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16_1_5__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_16_1_5_0()); }
						(rule__Edge__Group_16_1_5_0__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_16_1_5_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_16_1_5_1()); }
						(rule__Edge__Group_16_1_5_1__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_16_1_5_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_16_1_5_2()); }
						(rule__Edge__Group_16_1_5_2__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_16_1_5_2()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5());
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16_1_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_16_1_5__Impl
	rule__Edge__UnorderedGroup_16_1_5__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16_1_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_16_1_5__Impl
	rule__Edge__UnorderedGroup_16_1_5__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16_1_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_16_1_5__Impl
;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__UnorderedGroup_16_2_5
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5());
    }
:
	rule__Edge__UnorderedGroup_16_2_5__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5());
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16_2_5__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_16_2_5_0()); }
						(rule__Edge__Group_16_2_5_0__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_16_2_5_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_16_2_5_1()); }
						(rule__Edge__Group_16_2_5_1__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_16_2_5_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_16_2_5_2()); }
						(rule__Edge__Group_16_2_5_2__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_16_2_5_2()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5());
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16_2_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_16_2_5__Impl
	rule__Edge__UnorderedGroup_16_2_5__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16_2_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_16_2_5__Impl
	rule__Edge__UnorderedGroup_16_2_5__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16_2_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_16_2_5__Impl
;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__UnorderedGroup_16_3_5
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5());
    }
:
	rule__Edge__UnorderedGroup_16_3_5__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5());
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16_3_5__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_16_3_5_0()); }
						(rule__Edge__Group_16_3_5_0__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_16_3_5_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_16_3_5_1()); }
						(rule__Edge__Group_16_3_5_1__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_16_3_5_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_16_3_5_2()); }
						(rule__Edge__Group_16_3_5_2__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_16_3_5_2()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5());
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16_3_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_16_3_5__Impl
	rule__Edge__UnorderedGroup_16_3_5__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16_3_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_16_3_5__Impl
	rule__Edge__UnorderedGroup_16_3_5__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16_3_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_16_3_5__Impl
;
finally {
	restoreStackSize(stackSize);
}








rule__Edge__UnorderedGroup_16_4_5
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5());
    }
:
	rule__Edge__UnorderedGroup_16_4_5__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5());
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16_4_5__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_16_4_5_0()); }
						(rule__Edge__Group_16_4_5_0__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_16_4_5_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_16_4_5_1()); }
						(rule__Edge__Group_16_4_5_1__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_16_4_5_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEdgeAccess().getGroup_16_4_5_2()); }
						(rule__Edge__Group_16_4_5_2__0)
						{ after(grammarAccess.getEdgeAccess().getGroup_16_4_5_2()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5());
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16_4_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_16_4_5__Impl
	rule__Edge__UnorderedGroup_16_4_5__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16_4_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_16_4_5__Impl
	rule__Edge__UnorderedGroup_16_4_5__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__UnorderedGroup_16_4_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__UnorderedGroup_16_4_5__Impl
;
finally {
	restoreStackSize(stackSize);
}








rule__Point__UnorderedGroup_1
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getPointAccess().getUnorderedGroup_1());
    }
:
	rule__Point__UnorderedGroup_1__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getPointAccess().getUnorderedGroup_1());
	restoreStackSize(stackSize);
}


rule__Point__UnorderedGroup_1__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPointAccess().getUnorderedGroup_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getPointAccess().getUnorderedGroup_1(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getPointAccess().getGroup_1_0()); }
						(rule__Point__Group_1_0__0)
						{ after(grammarAccess.getPointAccess().getGroup_1_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPointAccess().getUnorderedGroup_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getPointAccess().getUnorderedGroup_1(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getPointAccess().getGroup_1_1()); }
						(rule__Point__Group_1_1__0)
						{ after(grammarAccess.getPointAccess().getGroup_1_1()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPointAccess().getUnorderedGroup_1());
	restoreStackSize(stackSize);
}


rule__Point__UnorderedGroup_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__UnorderedGroup_1__Impl
	rule__Point__UnorderedGroup_1__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Point__UnorderedGroup_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__UnorderedGroup_1__Impl
;
finally {
	restoreStackSize(stackSize);
}






rule__NTA__GlobalDeclarationsAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getGlobalDeclarationsGlobalDeclarationsParserRuleCall_6_3_0()); }
	ruleGlobalDeclarations{ after(grammarAccess.getNTAAccess().getGlobalDeclarationsGlobalDeclarationsParserRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__TemplateAssignment_7_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getTemplateTemplateParserRuleCall_7_3_0()); }
	ruleTemplate{ after(grammarAccess.getNTAAccess().getTemplateTemplateParserRuleCall_7_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NTA__SystemDeclarationsAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNTAAccess().getSystemDeclarationsSystemDeclarationsParserRuleCall_12_0()); }
	ruleSystemDeclarations{ after(grammarAccess.getNTAAccess().getSystemDeclarationsSystemDeclarationsParserRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Template__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getNameIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getTemplateAccess().getNameIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Template__ParameterAssignment_8_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getParameterParameterContainerParserRuleCall_8_3_0_0()); }
	ruleParameterContainer{ after(grammarAccess.getTemplateAccess().getParameterParameterContainerParserRuleCall_8_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Template__ParameterAssignment_8_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getParameterParameterContainerParserRuleCall_8_3_1_1_0()); }
	ruleParameterContainer{ after(grammarAccess.getTemplateAccess().getParameterParameterContainerParserRuleCall_8_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Template__DeclarationsAssignment_9_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getDeclarationsLocalDeclarationsParserRuleCall_9_3_0()); }
	ruleLocalDeclarations{ after(grammarAccess.getTemplateAccess().getDeclarationsLocalDeclarationsParserRuleCall_9_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Template__LocationAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getLocationLocationParserRuleCall_10_0()); }
	ruleLocation{ after(grammarAccess.getTemplateAccess().getLocationLocationParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Template__InitAssignment_15
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getInitLocationCrossReference_15_0()); }
(
{ before(grammarAccess.getTemplateAccess().getInitLocationSTRINGTerminalRuleCall_15_0_1()); }
	RULE_STRING{ after(grammarAccess.getTemplateAccess().getInitLocationSTRINGTerminalRuleCall_15_0_1()); }
)
{ after(grammarAccess.getTemplateAccess().getInitLocationCrossReference_15_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Template__EdgeAssignment_17
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getEdgeEdgeParserRuleCall_17_0()); }
	ruleEdge{ after(grammarAccess.getTemplateAccess().getEdgeEdgeParserRuleCall_17_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Location__IdAssignment_2_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getIdSTRINGTerminalRuleCall_2_0_2_0()); }
	RULE_STRING{ after(grammarAccess.getLocationAccess().getIdSTRINGTerminalRuleCall_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Location__PositionAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getPositionPointParserRuleCall_2_1_0()); }
	rulePoint{ after(grammarAccess.getLocationAccess().getPositionPointParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Location__ColorCodeAssignment_2_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getColorCodeSTRINGTerminalRuleCall_2_2_2_0()); }
	RULE_STRING{ after(grammarAccess.getLocationAccess().getColorCodeSTRINGTerminalRuleCall_2_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Location__NameAssignment_3_1_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getNameIDTerminalRuleCall_3_1_1_4_0()); }
	RULE_ID{ after(grammarAccess.getLocationAccess().getNameIDTerminalRuleCall_3_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Location__CommentAssignment_3_1_2_0_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getCommentCommentLabelParserRuleCall_3_1_2_0_7_0()); }
	ruleCommentLabel{ after(grammarAccess.getLocationAccess().getCommentCommentLabelParserRuleCall_3_1_2_0_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Location__InvariantAssignment_3_1_2_1_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getInvariantExpressionParserRuleCall_3_1_2_1_7_0()); }
	ruleExpression{ after(grammarAccess.getLocationAccess().getInvariantExpressionParserRuleCall_3_1_2_1_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Location__LocationTimeKindAssignment_3_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLocationTimeKindLocationKindEnumRuleCall_3_1_3_0()); }
	ruleLocationKind{ after(grammarAccess.getLocationAccess().getLocationTimeKindLocationKindEnumRuleCall_3_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__ColorCodeAssignment_2_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getColorCodeSTRINGTerminalRuleCall_2_2_2_0()); }
	RULE_STRING{ after(grammarAccess.getEdgeAccess().getColorCodeSTRINGTerminalRuleCall_2_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__SourceAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSourceLocationCrossReference_8_0()); }
(
{ before(grammarAccess.getEdgeAccess().getSourceLocationSTRINGTerminalRuleCall_8_0_1()); }
	RULE_STRING{ after(grammarAccess.getEdgeAccess().getSourceLocationSTRINGTerminalRuleCall_8_0_1()); }
)
{ after(grammarAccess.getEdgeAccess().getSourceLocationCrossReference_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__TargetAssignment_14
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getTargetLocationCrossReference_14_0()); }
(
{ before(grammarAccess.getEdgeAccess().getTargetLocationSTRINGTerminalRuleCall_14_0_1()); }
	RULE_STRING{ after(grammarAccess.getEdgeAccess().getTargetLocationSTRINGTerminalRuleCall_14_0_1()); }
)
{ after(grammarAccess.getEdgeAccess().getTargetLocationCrossReference_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__CommentAssignment_16_0_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getCommentCommentLabelParserRuleCall_16_0_7_0()); }
	ruleCommentLabel{ after(grammarAccess.getEdgeAccess().getCommentCommentLabelParserRuleCall_16_0_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__SynchronizationAssignment_16_1_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSynchronizationSynchronizationLabelParserRuleCall_16_1_7_0()); }
	ruleSynchronizationLabel{ after(grammarAccess.getEdgeAccess().getSynchronizationSynchronizationLabelParserRuleCall_16_1_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__GuardAssignment_16_2_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getGuardExpressionParserRuleCall_16_2_7_0()); }
	ruleExpression{ after(grammarAccess.getEdgeAccess().getGuardExpressionParserRuleCall_16_2_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__UpdateAssignment_16_3_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getUpdateExpressionParserRuleCall_16_3_7_0()); }
	ruleExpression{ after(grammarAccess.getEdgeAccess().getUpdateExpressionParserRuleCall_16_3_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__UpdateAssignment_16_3_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getUpdateExpressionParserRuleCall_16_3_8_1_0()); }
	ruleExpression{ after(grammarAccess.getEdgeAccess().getUpdateExpressionParserRuleCall_16_3_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__SelectionAssignment_16_4_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSelectionSelectionParserRuleCall_16_4_7_0()); }
	ruleSelection{ after(grammarAccess.getEdgeAccess().getSelectionSelectionParserRuleCall_16_4_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__SelectionAssignment_16_4_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSelectionSelectionParserRuleCall_16_4_8_1_0()); }
	ruleSelection{ after(grammarAccess.getEdgeAccess().getSelectionSelectionParserRuleCall_16_4_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__BendPointAssignment_17_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getBendPointPointParserRuleCall_17_2_0()); }
	rulePoint{ after(grammarAccess.getEdgeAccess().getBendPointPointParserRuleCall_17_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizationLabel__ChannelExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizationLabelAccess().getChannelExpressionIdentifierExpressionParserRuleCall_0_0()); }
	ruleIdentifierExpression{ after(grammarAccess.getSynchronizationLabelAccess().getChannelExpressionIdentifierExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizationLabel__KindAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizationLabelAccess().getKindSynchronizationKindEnumRuleCall_1_0()); }
	ruleSynchronizationKind{ after(grammarAccess.getSynchronizationLabelAccess().getKindSynchronizationKindEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Point__XAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getXQUOTED_INTParserRuleCall_1_0_2_0()); }
	ruleQUOTED_INT{ after(grammarAccess.getPointAccess().getXQUOTED_INTParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Point__YAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getYQUOTED_INTParserRuleCall_1_1_2_0()); }
	ruleQUOTED_INT{ after(grammarAccess.getPointAccess().getYQUOTED_INTParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__ElementsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getElementsVariableNameOnlyParserRuleCall_0_0()); }
	ruleVariableNameOnly{ after(grammarAccess.getSelectionAccess().getElementsVariableNameOnlyParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__TypeDefinitionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getTypeDefinitionAlternatives_2_0()); }
(rule__Selection__TypeDefinitionAlternatives_2_0)
{ after(grammarAccess.getSelectionAccess().getTypeDefinitionAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclarations__DeclarationAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDeclarationsAccess().getDeclarationAlternatives_1_0_0()); }
(rule__GlobalDeclarations__DeclarationAlternatives_1_0_0)
{ after(grammarAccess.getGlobalDeclarationsAccess().getDeclarationAlternatives_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclarations__ChannelPriorityAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDeclarationsAccess().getChannelPriorityChannelPriorityDeclarationParserRuleCall_1_1_0()); }
	ruleChannelPriorityDeclaration{ after(grammarAccess.getGlobalDeclarationsAccess().getChannelPriorityChannelPriorityDeclarationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalDeclarations__DeclarationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalDeclarationsAccess().getDeclarationAlternatives_1_0()); }
(rule__LocalDeclarations__DeclarationAlternatives_1_0)
{ after(grammarAccess.getLocalDeclarationsAccess().getDeclarationAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclarations__DeclarationAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationsAccess().getDeclarationAlternatives_1_0_0()); }
(rule__SystemDeclarations__DeclarationAlternatives_1_0_0)
{ after(grammarAccess.getSystemDeclarationsAccess().getDeclarationAlternatives_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclarations__SystemAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationsAccess().getSystemSystemParserRuleCall_1_1_0()); }
	ruleSystem{ after(grammarAccess.getSystemDeclarationsAccess().getSystemSystemParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclarations__ProgressMeasureAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationsAccess().getProgressMeasureProgressMeasureParserRuleCall_1_2_0()); }
	ruleProgressMeasure{ after(grammarAccess.getSystemDeclarationsAccess().getProgressMeasureProgressMeasureParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgressMeasure__ExpressionAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgressMeasureAccess().getExpressionExpressionParserRuleCall_2_0_0()); }
	ruleExpression{ after(grammarAccess.getProgressMeasureAccess().getExpressionExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateDeclaration__DeclaredTemplateAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateDeclarationAccess().getDeclaredTemplateRedefinedTemplateParserRuleCall_0_0()); }
	ruleRedefinedTemplate{ after(grammarAccess.getTemplateDeclarationAccess().getDeclaredTemplateRedefinedTemplateParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateDeclaration__ArgumentAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateDeclarationAccess().getArgumentExpressionParserRuleCall_2_0_0()); }
	ruleExpression{ after(grammarAccess.getTemplateDeclarationAccess().getArgumentExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateDeclaration__ArgumentAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateDeclarationAccess().getArgumentExpressionParserRuleCall_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getTemplateDeclarationAccess().getArgumentExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RedefinedTemplate__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRedefinedTemplateAccess().getNameUPPAAL_IDENTIFIERParserRuleCall_0_0()); }
	ruleUPPAAL_IDENTIFIER{ after(grammarAccess.getRedefinedTemplateAccess().getNameUPPAAL_IDENTIFIERParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RedefinedTemplate__ReferredTemplateAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRedefinedTemplateAccess().getReferredTemplateTemplateCrossReference_2_0()); }
(
{ before(grammarAccess.getRedefinedTemplateAccess().getReferredTemplateTemplateIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getRedefinedTemplateAccess().getReferredTemplateTemplateIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRedefinedTemplateAccess().getReferredTemplateTemplateCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__System__InstantiationListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getInstantiationListInstantiationListParserRuleCall_1_0()); }
	ruleInstantiationList{ after(grammarAccess.getSystemAccess().getInstantiationListInstantiationListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__System__InstantiationListAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getInstantiationListInstantiationListParserRuleCall_2_1_0()); }
	ruleInstantiationList{ after(grammarAccess.getSystemAccess().getInstantiationListInstantiationListParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstantiationList__TemplateAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantiationListAccess().getTemplateAbstractTemplateCrossReference_0_0()); }
(
{ before(grammarAccess.getInstantiationListAccess().getTemplateAbstractTemplateUPPAAL_IDENTIFIERParserRuleCall_0_0_1()); }
	ruleUPPAAL_IDENTIFIER{ after(grammarAccess.getInstantiationListAccess().getTemplateAbstractTemplateUPPAAL_IDENTIFIERParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getInstantiationListAccess().getTemplateAbstractTemplateCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstantiationList__TemplateAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantiationListAccess().getTemplateAbstractTemplateCrossReference_1_1_0()); }
(
{ before(grammarAccess.getInstantiationListAccess().getTemplateAbstractTemplateUPPAAL_IDENTIFIERParserRuleCall_1_1_0_1()); }
	ruleUPPAAL_IDENTIFIER{ after(grammarAccess.getInstantiationListAccess().getTemplateAbstractTemplateUPPAAL_IDENTIFIERParserRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getInstantiationListAccess().getTemplateAbstractTemplateCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedDeclaration__TypeDefinitionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedDeclarationAccess().getTypeDefinitionTypeExpressionParserRuleCall_0_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypedDeclarationAccess().getTypeDefinitionTypeExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedDeclaration__ElementsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedDeclarationAccess().getElementsFunctionParserRuleCall_1_0_0()); }
	ruleFunction{ after(grammarAccess.getTypedDeclarationAccess().getElementsFunctionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedDeclaration__ElementsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedDeclarationAccess().getElementsVariableParserRuleCall_1_1_0_0()); }
	ruleVariable{ after(grammarAccess.getTypedDeclarationAccess().getElementsVariableParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedDeclaration__ElementsAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedDeclarationAccess().getElementsVariableParserRuleCall_1_1_1_1_0()); }
	ruleVariable{ after(grammarAccess.getTypedDeclarationAccess().getElementsVariableParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedElement__TypeDefinitionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedElementAccess().getTypeDefinitionTypeExpressionParserRuleCall_0_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypedElementAccess().getTypeDefinitionTypeExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedElement__ElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedElementAccess().getElementsVariableParserRuleCall_1_0()); }
	ruleVariable{ after(grammarAccess.getTypedElementAccess().getElementsVariableParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedElement__ElementsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedElementAccess().getElementsVariableParserRuleCall_2_1_0()); }
	ruleVariable{ after(grammarAccess.getTypedElementAccess().getElementsVariableParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameOnly__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableNameOnlyAccess().getNameUPPAAL_IDENTIFIERParserRuleCall_0()); }
	ruleUPPAAL_IDENTIFIER{ after(grammarAccess.getVariableNameOnlyAccess().getNameUPPAAL_IDENTIFIERParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameUPPAAL_IDENTIFIERParserRuleCall_0_0()); }
	ruleUPPAAL_IDENTIFIER{ after(grammarAccess.getVariableAccess().getNameUPPAAL_IDENTIFIERParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__IndexAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getIndexAlternatives_1_1_0()); }
(rule__Variable__IndexAlternatives_1_1_0)
{ after(grammarAccess.getVariableAccess().getIndexAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__InitializerAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getInitializerInitializerParserRuleCall_2_1_0()); }
	ruleInitializer{ after(grammarAccess.getVariableAccess().getInitializerInitializerParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionInitializer__ExpressionAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionInitializerAccess().getExpressionExpressionParserRuleCall_0()); }
	ruleExpression{ after(grammarAccess.getExpressionInitializerAccess().getExpressionExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__InitializerAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializerAccess().getInitializerInitializerParserRuleCall_1_0()); }
	ruleInitializer{ after(grammarAccess.getArrayInitializerAccess().getInitializerInitializerParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__InitializerAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializerAccess().getInitializerInitializerParserRuleCall_2_1_0()); }
	ruleInitializer{ after(grammarAccess.getArrayInitializerAccess().getInitializerInitializerParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPrefixExpression__UrgentAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPrefixExpressionAccess().getUrgentChannelPrefixExpression_UrgentParserRuleCall_0_0_0_0()); }
	ruleChannelPrefixExpression_Urgent{ after(grammarAccess.getChannelPrefixExpressionAccess().getUrgentChannelPrefixExpression_UrgentParserRuleCall_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPrefixExpression__BroadcastAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPrefixExpressionAccess().getBroadcastChannelPrefixExpression_BroadcastParserRuleCall_0_0_1_0()); }
	ruleChannelPrefixExpression_Broadcast{ after(grammarAccess.getChannelPrefixExpressionAccess().getBroadcastChannelPrefixExpression_BroadcastParserRuleCall_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPrefixExpression__BroadcastAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPrefixExpressionAccess().getBroadcastChannelPrefixExpression_BroadcastParserRuleCall_0_1_0_0()); }
	ruleChannelPrefixExpression_Broadcast{ after(grammarAccess.getChannelPrefixExpressionAccess().getBroadcastChannelPrefixExpression_BroadcastParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPrefixExpression__UrgentAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPrefixExpressionAccess().getUrgentChannelPrefixExpression_UrgentParserRuleCall_0_1_1_0()); }
	ruleChannelPrefixExpression_Urgent{ after(grammarAccess.getChannelPrefixExpressionAccess().getUrgentChannelPrefixExpression_UrgentParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPrefixExpression__ChannelTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPrefixExpressionAccess().getChannelTypeTypeCrossReference_1_0()); }
(
{ before(grammarAccess.getChannelPrefixExpressionAccess().getChannelTypeTypeCHAN_KEYWORDParserRuleCall_1_0_1()); }
	ruleCHAN_KEYWORD{ after(grammarAccess.getChannelPrefixExpressionAccess().getChannelTypeTypeCHAN_KEYWORDParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getChannelPrefixExpressionAccess().getChannelTypeTypeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataPrefixExpression__PrefixAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataPrefixExpressionAccess().getPrefixDataVariablePrefixEnumRuleCall_0_0()); }
	ruleDataVariablePrefix{ after(grammarAccess.getDataPrefixExpressionAccess().getPrefixDataVariablePrefixEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataPrefixExpression__DataTypeExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataPrefixExpressionAccess().getDataTypeExpressionAlternatives_1_0()); }
(rule__DataPrefixExpression__DataTypeExpressionAlternatives_1_0)
{ after(grammarAccess.getDataPrefixExpressionAccess().getDataTypeExpressionAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeTypeSpecification__BoundsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeTypeSpecificationAccess().getBoundsIntegerBoundsParserRuleCall_1_0()); }
	ruleIntegerBounds{ after(grammarAccess.getRangeTypeSpecificationAccess().getBoundsIntegerBoundsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerBounds__LowerBoundAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerBoundsAccess().getLowerBoundExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getIntegerBoundsAccess().getLowerBoundExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerBounds__UpperBoundAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerBoundsAccess().getUpperBoundExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getIntegerBoundsAccess().getUpperBoundExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeSpecification__DeclarationAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeSpecificationAccess().getDeclarationTypedElementParserRuleCall_2_0_0()); }
	ruleTypedElement{ after(grammarAccess.getStructTypeSpecificationAccess().getDeclarationTypedElementParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarTypeSpecification__SizeExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeSpecificationAccess().getSizeExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getScalarTypeSpecificationAccess().getSizeExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__TypeDefinitionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getTypeDefinitionTypeExpressionParserRuleCall_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeDeclarationAccess().getTypeDefinitionTypeExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getTypeDeclaredTypeParserRuleCall_2_0()); }
	ruleDeclaredType{ after(grammarAccess.getTypeDeclarationAccess().getTypeDeclaredTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__TypeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getTypeDeclaredTypeParserRuleCall_3_1_0()); }
	ruleDeclaredType{ after(grammarAccess.getTypeDeclarationAccess().getTypeDeclaredTypeParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredTypeAccess().getNameUPPAAL_IDENTIFIERParserRuleCall_1_0()); }
	ruleUPPAAL_IDENTIFIER{ after(grammarAccess.getDeclaredTypeAccess().getNameUPPAAL_IDENTIFIERParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPriorityDeclaration__GroupsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPriorityDeclarationAccess().getGroupsChannelPriorityGroupParserRuleCall_2_0()); }
	ruleChannelPriorityGroup{ after(grammarAccess.getChannelPriorityDeclarationAccess().getGroupsChannelPriorityGroupParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPriorityDeclaration__GroupsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPriorityDeclarationAccess().getGroupsChannelPriorityGroupParserRuleCall_3_1_0()); }
	ruleChannelPriorityGroup{ after(grammarAccess.getChannelPriorityDeclarationAccess().getGroupsChannelPriorityGroupParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPriorityGroup__ItemsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPriorityGroupAccess().getItemsPriorityItemParserRuleCall_0_0()); }
	rulePriorityItem{ after(grammarAccess.getChannelPriorityGroupAccess().getItemsPriorityItemParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelPriorityGroup__ItemsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelPriorityGroupAccess().getItemsPriorityItemParserRuleCall_1_1_0()); }
	rulePriorityItem{ after(grammarAccess.getChannelPriorityGroupAccess().getItemsPriorityItemParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelItem__ChannelExpressionAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelItemAccess().getChannelExpressionIdentifierExpressionParserRuleCall_0()); }
	ruleIdentifierExpression{ after(grammarAccess.getChannelItemAccess().getChannelExpressionIdentifierExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameUPPAAL_IDENTIFIERParserRuleCall_0_0()); }
	ruleUPPAAL_IDENTIFIER{ after(grammarAccess.getFunctionAccess().getNameUPPAAL_IDENTIFIERParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ParameterAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getParameterParameterContainerParserRuleCall_2_0_0()); }
	ruleParameterContainer{ after(grammarAccess.getFunctionAccess().getParameterParameterContainerParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ParameterAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getParameterParameterContainerParserRuleCall_2_1_1_0()); }
	ruleParameterContainer{ after(grammarAccess.getFunctionAccess().getParameterParameterContainerParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__BlockAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getBlockBlockParserRuleCall_4_0()); }
	ruleBlock{ after(grammarAccess.getFunctionAccess().getBlockBlockParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterContainer__TypeDefinitionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterContainerAccess().getTypeDefinitionTypeExpressionParserRuleCall_0_0()); }
	ruleTypeExpression{ after(grammarAccess.getParameterContainerAccess().getTypeDefinitionTypeExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterContainer__ElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterContainerAccess().getElementsParameterParserRuleCall_1_0()); }
	ruleParameter{ after(grammarAccess.getParameterContainerAccess().getElementsParameterParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__CallTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getCallTypeCallTypeEnumRuleCall_0_0()); }
	ruleCallType{ after(grammarAccess.getParameterAccess().getCallTypeCallTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameUPPAAL_IDENTIFIERParserRuleCall_1_0()); }
	ruleUPPAAL_IDENTIFIER{ after(grammarAccess.getParameterAccess().getNameUPPAAL_IDENTIFIERParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__DeclarationsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getDeclarationsBlockDeclarationsParserRuleCall_2_0()); }
	ruleBlockDeclarations{ after(grammarAccess.getBlockAccess().getDeclarationsBlockDeclarationsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementStatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getBlockAccess().getStatementStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockDeclarations__DeclarationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockDeclarationsAccess().getDeclarationAlternatives_1_0()); }
(rule__BlockDeclarations__DeclarationAlternatives_1_0)
{ after(grammarAccess.getBlockDeclarationsAccess().getDeclarationAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockTypedDeclaration__TypeDefinitionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockTypedDeclarationAccess().getTypeDefinitionTypeExpressionParserRuleCall_0_0()); }
	ruleTypeExpression{ after(grammarAccess.getBlockTypedDeclarationAccess().getTypeDefinitionTypeExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockTypedDeclaration__ElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockTypedDeclarationAccess().getElementsVariableParserRuleCall_1_0()); }
	ruleVariable{ after(grammarAccess.getBlockTypedDeclarationAccess().getElementsVariableParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockTypedDeclaration__ElementsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockTypedDeclarationAccess().getElementsVariableParserRuleCall_2_1_0()); }
	ruleVariable{ after(grammarAccess.getBlockTypedDeclarationAccess().getElementsVariableParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__ExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__InitializationAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getInitializationExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getForLoopAccess().getInitializationExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__ConditionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getConditionExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getForLoopAccess().getConditionExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__IterationAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getIterationExpressionParserRuleCall_6_0()); }
	ruleExpression{ after(grammarAccess.getForLoopAccess().getIterationExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__StatementAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getStatementStatementParserRuleCall_8_0()); }
	ruleStatement{ after(grammarAccess.getForLoopAccess().getStatementStatementParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration__ElementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationAccess().getElementsVariableNameOnlyParserRuleCall_2_0()); }
	ruleVariableNameOnly{ after(grammarAccess.getIterationAccess().getElementsVariableNameOnlyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration__TypeDefinitionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationAccess().getTypeDefinitionTypeExpressionParserRuleCall_4_0()); }
	ruleTypeExpression{ after(grammarAccess.getIterationAccess().getTypeDefinitionTypeExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration__StatementAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationAccess().getStatementStatementParserRuleCall_6_0()); }
	ruleStatement{ after(grammarAccess.getIterationAccess().getStatementStatementParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getWhileLoopAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__StatementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getStatementStatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getWhileLoopAccess().getStatementStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__StatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileLoopAccess().getStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getDoWhileLoopAccess().getStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__ExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileLoopAccess().getExpressionExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getDoWhileLoopAccess().getExpressionExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__IfExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIfExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getIfStatementAccess().getIfExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ThenStatementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getThenStatementStatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getIfStatementAccess().getThenStatementStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseStatementAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseStatementStatementParserRuleCall_5_1_0()); }
	ruleStatement{ after(grammarAccess.getIfStatementAccess().getElseStatementStatementParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__ReturnExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getReturnExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getReturnStatementAccess().getReturnExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuantificationExpression__QuantifierAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantificationExpressionAccess().getQuantifierQuantifierEnumRuleCall_0_1_0()); }
	ruleQuantifier{ after(grammarAccess.getQuantificationExpressionAccess().getQuantifierQuantifierEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuantificationExpression__ElementsAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantificationExpressionAccess().getElementsVariableNameOnlyParserRuleCall_0_3_0()); }
	ruleVariableNameOnly{ after(grammarAccess.getQuantificationExpressionAccess().getElementsVariableNameOnlyParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuantificationExpression__TypeDefinitionAssignment_0_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantificationExpressionAccess().getTypeDefinitionTypeExpressionParserRuleCall_0_5_0()); }
	ruleTypeExpression{ after(grammarAccess.getQuantificationExpressionAccess().getTypeDefinitionTypeExpressionParserRuleCall_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuantificationExpression__ExpressionAssignment_0_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantificationExpressionAccess().getExpressionLogicalExpression_OrImplyParserRuleCall_0_7_0()); }
	ruleLogicalExpression_OrImply{ after(grammarAccess.getQuantificationExpressionAccess().getExpressionLogicalExpression_OrImplyParserRuleCall_0_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_OrImply__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_OrImplyAccess().getOperatorLogicalOperator_OrImplyEnumRuleCall_1_1_0()); }
	ruleLogicalOperator_OrImply{ after(grammarAccess.getLogicalExpression_OrImplyAccess().getOperatorLogicalOperator_OrImplyEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_OrImply__SecondExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_OrImplyAccess().getSecondExprLogicalExpression_AndParserRuleCall_1_2_0()); }
	ruleLogicalExpression_And{ after(grammarAccess.getLogicalExpression_OrImplyAccess().getSecondExprLogicalExpression_AndParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_And__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_AndAccess().getOperatorLogicalOperator_AndEnumRuleCall_1_1_0()); }
	ruleLogicalOperator_And{ after(grammarAccess.getLogicalExpression_AndAccess().getOperatorLogicalOperator_AndEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_And__SecondExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_AndAccess().getSecondExprNegationExpressionParserRuleCall_1_2_0()); }
	ruleNegationExpression{ after(grammarAccess.getLogicalExpression_AndAccess().getSecondExprNegationExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegationExpression__NegatedExpressionAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationExpressionAccess().getNegatedExpressionAssignmentExpressionParserRuleCall_0_2_0()); }
	ruleAssignmentExpression{ after(grammarAccess.getNegationExpressionAccess().getNegatedExpressionAssignmentExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getOperatorAssignmentOperatorEnumRuleCall_1_1_0()); }
	ruleAssignmentOperator{ after(grammarAccess.getAssignmentExpressionAccess().getOperatorAssignmentOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__SecondExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getSecondExprConditionExpressionParserRuleCall_1_2_0()); }
	ruleConditionExpression{ after(grammarAccess.getAssignmentExpressionAccess().getSecondExprConditionExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionExpression__ThenExpressionAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionExpressionAccess().getThenExpressionExpressionParserRuleCall_1_2_0()); }
	ruleExpression{ after(grammarAccess.getConditionExpressionAccess().getThenExpressionExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionExpression__ElseExpressionAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionExpressionAccess().getElseExpressionLogicalExpression_OrAlternativeParserRuleCall_1_4_0()); }
	ruleLogicalExpression_OrAlternative{ after(grammarAccess.getConditionExpressionAccess().getElseExpressionLogicalExpression_OrAlternativeParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_OrAlternative__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_OrAlternativeAccess().getOperatorLogicalOperator_OrAlternativeEnumRuleCall_1_1_0()); }
	ruleLogicalOperator_OrAlternative{ after(grammarAccess.getLogicalExpression_OrAlternativeAccess().getOperatorLogicalOperator_OrAlternativeEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_OrAlternative__SecondExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_OrAlternativeAccess().getSecondExprLogicalExpression_AndAlternativeParserRuleCall_1_2_0()); }
	ruleLogicalExpression_AndAlternative{ after(grammarAccess.getLogicalExpression_OrAlternativeAccess().getSecondExprLogicalExpression_AndAlternativeParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_AndAlternative__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_AndAlternativeAccess().getOperatorLogicalOperator_AndAlternativeEnumRuleCall_1_1_0()); }
	ruleLogicalOperator_AndAlternative{ after(grammarAccess.getLogicalExpression_AndAlternativeAccess().getOperatorLogicalOperator_AndAlternativeEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression_AndAlternative__SecondExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpression_AndAlternativeAccess().getSecondExprBitwiseExpression_OrParserRuleCall_1_2_0()); }
	ruleBitwiseExpression_Or{ after(grammarAccess.getLogicalExpression_AndAlternativeAccess().getSecondExprBitwiseExpression_OrParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_Or__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_OrAccess().getOperatorBitwiseOperator_OrEnumRuleCall_1_1_0()); }
	ruleBitwiseOperator_Or{ after(grammarAccess.getBitwiseExpression_OrAccess().getOperatorBitwiseOperator_OrEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_Or__SecondExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_OrAccess().getSecondExprBitwiseExpression_XorParserRuleCall_1_2_0()); }
	ruleBitwiseExpression_Xor{ after(grammarAccess.getBitwiseExpression_OrAccess().getSecondExprBitwiseExpression_XorParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_Xor__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_XorAccess().getOperatorBitwiseOperator_XorEnumRuleCall_1_1_0()); }
	ruleBitwiseOperator_Xor{ after(grammarAccess.getBitwiseExpression_XorAccess().getOperatorBitwiseOperator_XorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_Xor__SecondExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_XorAccess().getSecondExprBitwiseExpression_AndParserRuleCall_1_2_0()); }
	ruleBitwiseExpression_And{ after(grammarAccess.getBitwiseExpression_XorAccess().getSecondExprBitwiseExpression_AndParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_And__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_AndAccess().getOperatorBitwiseOperator_AndEnumRuleCall_1_1_0()); }
	ruleBitwiseOperator_And{ after(grammarAccess.getBitwiseExpression_AndAccess().getOperatorBitwiseOperator_AndEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseExpression_And__SecondExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseExpression_AndAccess().getSecondExprCompareExpression_EqualUnequalParserRuleCall_1_2_0()); }
	ruleCompareExpression_EqualUnequal{ after(grammarAccess.getBitwiseExpression_AndAccess().getSecondExprCompareExpression_EqualUnequalParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression_EqualUnequal__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpression_EqualUnequalAccess().getOperatorCompareOperator_EqualUnequalEnumRuleCall_1_1_0()); }
	ruleCompareOperator_EqualUnequal{ after(grammarAccess.getCompareExpression_EqualUnequalAccess().getOperatorCompareOperator_EqualUnequalEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression_EqualUnequal__SecondExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpression_EqualUnequalAccess().getSecondExprCompareExpression_OtherParserRuleCall_1_2_0()); }
	ruleCompareExpression_Other{ after(grammarAccess.getCompareExpression_EqualUnequalAccess().getSecondExprCompareExpression_OtherParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression_Other__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpression_OtherAccess().getOperatorCompareOperator_OtherEnumRuleCall_1_1_0()); }
	ruleCompareOperator_Other{ after(grammarAccess.getCompareExpression_OtherAccess().getOperatorCompareOperator_OtherEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression_Other__SecondExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpression_OtherAccess().getSecondExprMinMaxExpressionParserRuleCall_1_2_0()); }
	ruleMinMaxExpression{ after(grammarAccess.getCompareExpression_OtherAccess().getSecondExprMinMaxExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinMaxExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinMaxExpressionAccess().getOperatorMinMaxOperatorEnumRuleCall_1_1_0()); }
	ruleMinMaxOperator{ after(grammarAccess.getMinMaxExpressionAccess().getOperatorMinMaxOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinMaxExpression__SecondExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinMaxExpressionAccess().getSecondExprBitShiftExpressionParserRuleCall_1_2_0()); }
	ruleBitShiftExpression{ after(grammarAccess.getMinMaxExpressionAccess().getSecondExprBitShiftExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitShiftExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitShiftExpressionAccess().getOperatorBitShiftOperatorEnumRuleCall_1_1_0()); }
	ruleBitShiftOperator{ after(grammarAccess.getBitShiftExpressionAccess().getOperatorBitShiftOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitShiftExpression__SecondExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitShiftExpressionAccess().getSecondExprArithmeticExpression_PlusMinusParserRuleCall_1_2_0()); }
	ruleArithmeticExpression_PlusMinus{ after(grammarAccess.getBitShiftExpressionAccess().getSecondExprArithmeticExpression_PlusMinusParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression_PlusMinus__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpression_PlusMinusAccess().getOperatorArithmeticOperator_PlusMinusEnumRuleCall_1_1_0()); }
	ruleArithmeticOperator_PlusMinus{ after(grammarAccess.getArithmeticExpression_PlusMinusAccess().getOperatorArithmeticOperator_PlusMinusEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression_PlusMinus__SecondExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpression_PlusMinusAccess().getSecondExprArithmeticExpression_OtherParserRuleCall_1_2_0()); }
	ruleArithmeticExpression_Other{ after(grammarAccess.getArithmeticExpression_PlusMinusAccess().getSecondExprArithmeticExpression_OtherParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression_Other__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpression_OtherAccess().getOperatorArithmeticOperator_OtherEnumRuleCall_1_1_0()); }
	ruleArithmeticOperator_Other{ after(grammarAccess.getArithmeticExpression_OtherAccess().getOperatorArithmeticOperator_OtherEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression_Other__SecondExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpression_OtherAccess().getSecondExprNegationExpression_AlternativeParserRuleCall_1_2_0()); }
	ruleNegationExpression_Alternative{ after(grammarAccess.getArithmeticExpression_OtherAccess().getSecondExprNegationExpression_AlternativeParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegationExpression_Alternative__NegatedExpressionAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationExpression_AlternativeAccess().getNegatedExpressionIncrementDecrementExpressionParserRuleCall_0_2_0()); }
	ruleIncrementDecrementExpression{ after(grammarAccess.getNegationExpression_AlternativeAccess().getNegatedExpressionIncrementDecrementExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementDecrementExpression__PositionAssignment_1_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementDecrementExpressionAccess().getPositionPreIncrementPositionEnumRuleCall_1_1_0_0_0()); }
	rulePreIncrementPosition{ after(grammarAccess.getPreIncrementDecrementExpressionAccess().getPositionPreIncrementPositionEnumRuleCall_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementDecrementExpression__OperatorAssignment_1_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementDecrementExpressionAccess().getOperatorIncrementOperatorEnumRuleCall_1_1_0_1_0()); }
	ruleIncrementOperator{ after(grammarAccess.getPreIncrementDecrementExpressionAccess().getOperatorIncrementOperatorEnumRuleCall_1_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementDecrementExpression__PositionAssignment_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementDecrementExpressionAccess().getPositionPreDecrementPositionEnumRuleCall_1_1_1_0_0()); }
	rulePreDecrementPosition{ after(grammarAccess.getPreIncrementDecrementExpressionAccess().getPositionPreDecrementPositionEnumRuleCall_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementDecrementExpression__OperatorAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementDecrementExpressionAccess().getOperatorDecrementOperatorEnumRuleCall_1_1_1_1_0()); }
	ruleDecrementOperator{ after(grammarAccess.getPreIncrementDecrementExpressionAccess().getOperatorDecrementOperatorEnumRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementDecrementExpression__ExpressionAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreIncrementDecrementExpressionAccess().getExpressionPreIncrementDecrementExpressionParserRuleCall_1_2_0()); }
	rulePreIncrementDecrementExpression{ after(grammarAccess.getPreIncrementDecrementExpressionAccess().getExpressionPreIncrementDecrementExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementDecrementExpression__PositionAssignment_1_0_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementDecrementExpressionAccess().getPositionPostIncrementPositionEnumRuleCall_1_0_1_0_0_0()); }
	rulePostIncrementPosition{ after(grammarAccess.getPostIncrementDecrementExpressionAccess().getPositionPostIncrementPositionEnumRuleCall_1_0_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementDecrementExpression__OperatorAssignment_1_0_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementDecrementExpressionAccess().getOperatorIncrementOperatorEnumRuleCall_1_0_1_0_1_0()); }
	ruleIncrementOperator{ after(grammarAccess.getPostIncrementDecrementExpressionAccess().getOperatorIncrementOperatorEnumRuleCall_1_0_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementDecrementExpression__PositionAssignment_1_0_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementDecrementExpressionAccess().getPositionPostDecrementPositionEnumRuleCall_1_0_1_1_0_0()); }
	rulePostDecrementPosition{ after(grammarAccess.getPostIncrementDecrementExpressionAccess().getPositionPostDecrementPositionEnumRuleCall_1_0_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncrementDecrementExpression__OperatorAssignment_1_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostIncrementDecrementExpressionAccess().getOperatorDecrementOperatorEnumRuleCall_1_0_1_1_1_0()); }
	ruleDecrementOperator{ after(grammarAccess.getPostIncrementDecrementExpressionAccess().getOperatorDecrementOperatorEnumRuleCall_1_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifierExpression__IdentifierAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopedIdentifierExpressionAccess().getIdentifierIdentifierExpressionParserRuleCall_1_2_0()); }
	ruleIdentifierExpression{ after(grammarAccess.getScopedIdentifierExpressionAccess().getIdentifierIdentifierExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpression__TextAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionAccess().getTextLiteralExpressionTextParserRuleCall_0()); }
	ruleLiteralExpressionText{ after(grammarAccess.getLiteralExpressionAccess().getTextLiteralExpressionTextParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__FunctionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getFunctionFunctionCrossReference_0_0()); }
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getFunctionFunctionUPPAAL_IDENTIFIERParserRuleCall_0_0_1()); }
	ruleUPPAAL_IDENTIFIER{ after(grammarAccess.getFunctionCallExpressionAccess().getFunctionFunctionUPPAAL_IDENTIFIERParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getFunctionCallExpressionAccess().getFunctionFunctionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__ArgumentAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getArgumentExpressionParserRuleCall_2_0_0()); }
	ruleExpression{ after(grammarAccess.getFunctionCallExpressionAccess().getArgumentExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__ArgumentAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getArgumentExpressionParserRuleCall_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getFunctionCallExpressionAccess().getArgumentExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierExpression__IdentifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierExpressionAccess().getIdentifierNamedElementCrossReference_0_0()); }
(
{ before(grammarAccess.getIdentifierExpressionAccess().getIdentifierNamedElementUPPAAL_TYPE_OR_IDENTIFIERParserRuleCall_0_0_1()); }
	ruleUPPAAL_TYPE_OR_IDENTIFIER{ after(grammarAccess.getIdentifierExpressionAccess().getIdentifierNamedElementUPPAAL_TYPE_OR_IDENTIFIERParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getIdentifierExpressionAccess().getIdentifierNamedElementCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierExpression__IndexAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierExpressionAccess().getIndexExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getIdentifierExpressionAccess().getIndexExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleIdentifierExpression__IdentifierAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleIdentifierExpressionAccess().getIdentifierNamedElementCrossReference_0()); }
(
{ before(grammarAccess.getSimpleIdentifierExpressionAccess().getIdentifierNamedElementUPPAAL_TYPE_OR_IDENTIFIERParserRuleCall_0_1()); }
	ruleUPPAAL_TYPE_OR_IDENTIFIER{ after(grammarAccess.getSimpleIdentifierExpressionAccess().getIdentifierNamedElementUPPAAL_TYPE_OR_IDENTIFIERParserRuleCall_0_1()); }
)
{ after(grammarAccess.getSimpleIdentifierExpressionAccess().getIdentifierNamedElementCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'|'1'..'9' ('0'..'9')*);

RULE_SINGLE_LINE_COMMENT : '//' ~(('<'|'\r'|'\n'))*;

RULE_MULTI_LINE_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


