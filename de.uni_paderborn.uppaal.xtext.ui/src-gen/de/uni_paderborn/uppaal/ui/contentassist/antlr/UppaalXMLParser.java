/*
* generated by Xtext
*/
package de.uni_paderborn.uppaal.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.uni_paderborn.uppaal.services.UppaalXMLGrammarAccess;

public class UppaalXMLParser extends AbstractContentAssistParser {
	
	@Inject
	private UppaalXMLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.uni_paderborn.uppaal.ui.contentassist.antlr.internal.InternalUppaalXMLParser createParser() {
		de.uni_paderborn.uppaal.ui.contentassist.antlr.internal.InternalUppaalXMLParser result = new de.uni_paderborn.uppaal.ui.contentassist.antlr.internal.InternalUppaalXMLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getNTAAccess().getAlternatives_0(), "rule__NTA__Alternatives_0");
					put(grammarAccess.getLocationAccess().getAlternatives_3(), "rule__Location__Alternatives_3");
					put(grammarAccess.getSelectionAccess().getTypeDefinitionAlternatives_2_0(), "rule__Selection__TypeDefinitionAlternatives_2_0");
					put(grammarAccess.getGlobalDeclarationsAccess().getAlternatives_1(), "rule__GlobalDeclarations__Alternatives_1");
					put(grammarAccess.getGlobalDeclarationsAccess().getDeclarationAlternatives_1_0_0(), "rule__GlobalDeclarations__DeclarationAlternatives_1_0_0");
					put(grammarAccess.getLocalDeclarationsAccess().getDeclarationAlternatives_1_0(), "rule__LocalDeclarations__DeclarationAlternatives_1_0");
					put(grammarAccess.getSystemDeclarationsAccess().getAlternatives_1(), "rule__SystemDeclarations__Alternatives_1");
					put(grammarAccess.getSystemDeclarationsAccess().getDeclarationAlternatives_1_0_0(), "rule__SystemDeclarations__DeclarationAlternatives_1_0_0");
					put(grammarAccess.getTypedDeclarationAccess().getAlternatives_1(), "rule__TypedDeclaration__Alternatives_1");
					put(grammarAccess.getVariableAccess().getIndexAlternatives_1_1_0(), "rule__Variable__IndexAlternatives_1_1_0");
					put(grammarAccess.getInitializerAccess().getAlternatives(), "rule__Initializer__Alternatives");
					put(grammarAccess.getTypeExpressionAccess().getAlternatives(), "rule__TypeExpression__Alternatives");
					put(grammarAccess.getChannelPrefixExpressionAccess().getAlternatives_0(), "rule__ChannelPrefixExpression__Alternatives_0");
					put(grammarAccess.getDataPrefixExpressionAccess().getDataTypeExpressionAlternatives_1_0(), "rule__DataPrefixExpression__DataTypeExpressionAlternatives_1_0");
					put(grammarAccess.getPriorityItemAccess().getAlternatives(), "rule__PriorityItem__Alternatives");
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getBlockDeclarationsAccess().getDeclarationAlternatives_1_0(), "rule__BlockDeclarations__DeclarationAlternatives_1_0");
					put(grammarAccess.getQuantificationExpressionAccess().getAlternatives(), "rule__QuantificationExpression__Alternatives");
					put(grammarAccess.getNegationExpressionAccess().getAlternatives(), "rule__NegationExpression__Alternatives");
					put(grammarAccess.getNegationExpression_AlternativeAccess().getAlternatives(), "rule__NegationExpression_Alternative__Alternatives");
					put(grammarAccess.getPreIncrementDecrementExpressionAccess().getAlternatives(), "rule__PreIncrementDecrementExpression__Alternatives");
					put(grammarAccess.getPreIncrementDecrementExpressionAccess().getAlternatives_1_1(), "rule__PreIncrementDecrementExpression__Alternatives_1_1");
					put(grammarAccess.getPostIncrementDecrementExpressionAccess().getAlternatives_1_0_1(), "rule__PostIncrementDecrementExpression__Alternatives_1_0_1");
					put(grammarAccess.getTerminatingExpressionsAccess().getAlternatives(), "rule__TerminatingExpressions__Alternatives");
					put(grammarAccess.getLiteralExpressionTextAccess().getAlternatives(), "rule__LiteralExpressionText__Alternatives");
					put(grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getAlternatives(), "rule__UPPAAL_TYPE_OR_IDENTIFIER__Alternatives");
					put(grammarAccess.getUPPAAL_IDENTIFIERAccess().getAlternatives(), "rule__UPPAAL_IDENTIFIER__Alternatives");
					put(grammarAccess.getUPPAAL_KEYWORDSAccess().getAlternatives(), "rule__UPPAAL_KEYWORDS__Alternatives");
					put(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAlternatives(), "rule__UPPAAL_STRUCTURE_KEYWORDS__Alternatives");
					put(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getAlternatives(), "rule__ANY_TOKEN_BUT_XML_CLOSE__Alternatives");
					put(grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getAlternatives(), "rule__XML_STRUCTURE_KEYWORDS__Alternatives");
					put(grammarAccess.getXML_KEYWORDSAccess().getAlternatives(), "rule__XML_KEYWORDS__Alternatives");
					put(grammarAccess.getXML_ATTRIBUTE_KEYWORDSAccess().getAlternatives(), "rule__XML_ATTRIBUTE_KEYWORDS__Alternatives");
					put(grammarAccess.getLocationKindAccess().getAlternatives(), "rule__LocationKind__Alternatives");
					put(grammarAccess.getSynchronizationKindAccess().getAlternatives(), "rule__SynchronizationKind__Alternatives");
					put(grammarAccess.getDataVariablePrefixAccess().getAlternatives(), "rule__DataVariablePrefix__Alternatives");
					put(grammarAccess.getQuantifierAccess().getAlternatives(), "rule__Quantifier__Alternatives");
					put(grammarAccess.getLogicalOperator_OrImplyAccess().getAlternatives(), "rule__LogicalOperator_OrImply__Alternatives");
					put(grammarAccess.getAssignmentOperatorAccess().getAlternatives(), "rule__AssignmentOperator__Alternatives");
					put(grammarAccess.getCompareOperator_EqualUnequalAccess().getAlternatives(), "rule__CompareOperator_EqualUnequal__Alternatives");
					put(grammarAccess.getCompareOperator_OtherAccess().getAlternatives(), "rule__CompareOperator_Other__Alternatives");
					put(grammarAccess.getMinMaxOperatorAccess().getAlternatives(), "rule__MinMaxOperator__Alternatives");
					put(grammarAccess.getBitShiftOperatorAccess().getAlternatives(), "rule__BitShiftOperator__Alternatives");
					put(grammarAccess.getArithmeticOperator_PlusMinusAccess().getAlternatives(), "rule__ArithmeticOperator_PlusMinus__Alternatives");
					put(grammarAccess.getArithmeticOperator_OtherAccess().getAlternatives(), "rule__ArithmeticOperator_Other__Alternatives");
					put(grammarAccess.getNTAAccess().getGroup(), "rule__NTA__Group__0");
					put(grammarAccess.getNTAAccess().getGroup_5(), "rule__NTA__Group_5__0");
					put(grammarAccess.getNTAAccess().getGroup_6(), "rule__NTA__Group_6__0");
					put(grammarAccess.getNTAAccess().getGroup_7(), "rule__NTA__Group_7__0");
					put(grammarAccess.getNTAAccess().getGroup_8(), "rule__NTA__Group_8__0");
					put(grammarAccess.getTemplateAccess().getGroup(), "rule__Template__Group__0");
					put(grammarAccess.getTemplateAccess().getGroup_2_0(), "rule__Template__Group_2_0__0");
					put(grammarAccess.getTemplateAccess().getGroup_2_1(), "rule__Template__Group_2_1__0");
					put(grammarAccess.getTemplateAccess().getGroup_8(), "rule__Template__Group_8__0");
					put(grammarAccess.getTemplateAccess().getGroup_8_3(), "rule__Template__Group_8_3__0");
					put(grammarAccess.getTemplateAccess().getGroup_8_3_1(), "rule__Template__Group_8_3_1__0");
					put(grammarAccess.getTemplateAccess().getGroup_9(), "rule__Template__Group_9__0");
					put(grammarAccess.getLocationAccess().getGroup(), "rule__Location__Group__0");
					put(grammarAccess.getLocationAccess().getGroup_2_0(), "rule__Location__Group_2_0__0");
					put(grammarAccess.getLocationAccess().getGroup_2_2(), "rule__Location__Group_2_2__0");
					put(grammarAccess.getLocationAccess().getGroup_3_1(), "rule__Location__Group_3_1__0");
					put(grammarAccess.getLocationAccess().getGroup_3_1_1(), "rule__Location__Group_3_1_1__0");
					put(grammarAccess.getLocationAccess().getGroup_3_1_1_2_0(), "rule__Location__Group_3_1_1_2_0__0");
					put(grammarAccess.getLocationAccess().getGroup_3_1_1_2_1(), "rule__Location__Group_3_1_1_2_1__0");
					put(grammarAccess.getLocationAccess().getGroup_3_1_2_0(), "rule__Location__Group_3_1_2_0__0");
					put(grammarAccess.getLocationAccess().getGroup_3_1_2_0_5_0(), "rule__Location__Group_3_1_2_0_5_0__0");
					put(grammarAccess.getLocationAccess().getGroup_3_1_2_0_5_1(), "rule__Location__Group_3_1_2_0_5_1__0");
					put(grammarAccess.getLocationAccess().getGroup_3_1_2_0_5_2(), "rule__Location__Group_3_1_2_0_5_2__0");
					put(grammarAccess.getLocationAccess().getGroup_3_1_2_1(), "rule__Location__Group_3_1_2_1__0");
					put(grammarAccess.getLocationAccess().getGroup_3_1_2_1_5_0(), "rule__Location__Group_3_1_2_1_5_0__0");
					put(grammarAccess.getLocationAccess().getGroup_3_1_2_1_5_1(), "rule__Location__Group_3_1_2_1_5_1__0");
					put(grammarAccess.getLocationAccess().getGroup_3_1_2_1_5_2(), "rule__Location__Group_3_1_2_1_5_2__0");
					put(grammarAccess.getEdgeAccess().getGroup(), "rule__Edge__Group__0");
					put(grammarAccess.getEdgeAccess().getGroup_2_0(), "rule__Edge__Group_2_0__0");
					put(grammarAccess.getEdgeAccess().getGroup_2_1(), "rule__Edge__Group_2_1__0");
					put(grammarAccess.getEdgeAccess().getGroup_2_2(), "rule__Edge__Group_2_2__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_0(), "rule__Edge__Group_16_0__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_0_5_0(), "rule__Edge__Group_16_0_5_0__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_0_5_1(), "rule__Edge__Group_16_0_5_1__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_0_5_2(), "rule__Edge__Group_16_0_5_2__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_1(), "rule__Edge__Group_16_1__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_1_5_0(), "rule__Edge__Group_16_1_5_0__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_1_5_1(), "rule__Edge__Group_16_1_5_1__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_1_5_2(), "rule__Edge__Group_16_1_5_2__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_2(), "rule__Edge__Group_16_2__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_2_5_0(), "rule__Edge__Group_16_2_5_0__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_2_5_1(), "rule__Edge__Group_16_2_5_1__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_2_5_2(), "rule__Edge__Group_16_2_5_2__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_3(), "rule__Edge__Group_16_3__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_3_5_0(), "rule__Edge__Group_16_3_5_0__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_3_5_1(), "rule__Edge__Group_16_3_5_1__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_3_5_2(), "rule__Edge__Group_16_3_5_2__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_3_8(), "rule__Edge__Group_16_3_8__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_4(), "rule__Edge__Group_16_4__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_4_5_0(), "rule__Edge__Group_16_4_5_0__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_4_5_1(), "rule__Edge__Group_16_4_5_1__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_4_5_2(), "rule__Edge__Group_16_4_5_2__0");
					put(grammarAccess.getEdgeAccess().getGroup_16_4_8(), "rule__Edge__Group_16_4_8__0");
					put(grammarAccess.getEdgeAccess().getGroup_17(), "rule__Edge__Group_17__0");
					put(grammarAccess.getSynchronizationLabelAccess().getGroup(), "rule__SynchronizationLabel__Group__0");
					put(grammarAccess.getPointAccess().getGroup(), "rule__Point__Group__0");
					put(grammarAccess.getPointAccess().getGroup_1_0(), "rule__Point__Group_1_0__0");
					put(grammarAccess.getPointAccess().getGroup_1_1(), "rule__Point__Group_1_1__0");
					put(grammarAccess.getSelectionAccess().getGroup(), "rule__Selection__Group__0");
					put(grammarAccess.getGlobalDeclarationsAccess().getGroup(), "rule__GlobalDeclarations__Group__0");
					put(grammarAccess.getLocalDeclarationsAccess().getGroup(), "rule__LocalDeclarations__Group__0");
					put(grammarAccess.getSystemDeclarationsAccess().getGroup(), "rule__SystemDeclarations__Group__0");
					put(grammarAccess.getProgressMeasureAccess().getGroup(), "rule__ProgressMeasure__Group__0");
					put(grammarAccess.getProgressMeasureAccess().getGroup_2(), "rule__ProgressMeasure__Group_2__0");
					put(grammarAccess.getTemplateDeclarationAccess().getGroup(), "rule__TemplateDeclaration__Group__0");
					put(grammarAccess.getTemplateDeclarationAccess().getGroup_2(), "rule__TemplateDeclaration__Group_2__0");
					put(grammarAccess.getTemplateDeclarationAccess().getGroup_2_1(), "rule__TemplateDeclaration__Group_2_1__0");
					put(grammarAccess.getRedefinedTemplateAccess().getGroup(), "rule__RedefinedTemplate__Group__0");
					put(grammarAccess.getSystemAccess().getGroup(), "rule__System__Group__0");
					put(grammarAccess.getSystemAccess().getGroup_2(), "rule__System__Group_2__0");
					put(grammarAccess.getInstantiationListAccess().getGroup(), "rule__InstantiationList__Group__0");
					put(grammarAccess.getInstantiationListAccess().getGroup_1(), "rule__InstantiationList__Group_1__0");
					put(grammarAccess.getTypedDeclarationAccess().getGroup(), "rule__TypedDeclaration__Group__0");
					put(grammarAccess.getTypedDeclarationAccess().getGroup_1_1(), "rule__TypedDeclaration__Group_1_1__0");
					put(grammarAccess.getTypedDeclarationAccess().getGroup_1_1_1(), "rule__TypedDeclaration__Group_1_1_1__0");
					put(grammarAccess.getTypedElementAccess().getGroup(), "rule__TypedElement__Group__0");
					put(grammarAccess.getTypedElementAccess().getGroup_2(), "rule__TypedElement__Group_2__0");
					put(grammarAccess.getVariableAccess().getGroup(), "rule__Variable__Group__0");
					put(grammarAccess.getVariableAccess().getGroup_1(), "rule__Variable__Group_1__0");
					put(grammarAccess.getVariableAccess().getGroup_2(), "rule__Variable__Group_2__0");
					put(grammarAccess.getArrayInitializerAccess().getGroup(), "rule__ArrayInitializer__Group__0");
					put(grammarAccess.getArrayInitializerAccess().getGroup_2(), "rule__ArrayInitializer__Group_2__0");
					put(grammarAccess.getChannelPrefixExpressionAccess().getGroup(), "rule__ChannelPrefixExpression__Group__0");
					put(grammarAccess.getChannelPrefixExpressionAccess().getGroup_0_0(), "rule__ChannelPrefixExpression__Group_0_0__0");
					put(grammarAccess.getChannelPrefixExpressionAccess().getGroup_0_1(), "rule__ChannelPrefixExpression__Group_0_1__0");
					put(grammarAccess.getDataPrefixExpressionAccess().getGroup(), "rule__DataPrefixExpression__Group__0");
					put(grammarAccess.getRangeTypeSpecificationAccess().getGroup(), "rule__RangeTypeSpecification__Group__0");
					put(grammarAccess.getIntegerBoundsAccess().getGroup(), "rule__IntegerBounds__Group__0");
					put(grammarAccess.getStructTypeSpecificationAccess().getGroup(), "rule__StructTypeSpecification__Group__0");
					put(grammarAccess.getStructTypeSpecificationAccess().getGroup_2(), "rule__StructTypeSpecification__Group_2__0");
					put(grammarAccess.getScalarTypeSpecificationAccess().getGroup(), "rule__ScalarTypeSpecification__Group__0");
					put(grammarAccess.getTypeDeclarationAccess().getGroup(), "rule__TypeDeclaration__Group__0");
					put(grammarAccess.getTypeDeclarationAccess().getGroup_3(), "rule__TypeDeclaration__Group_3__0");
					put(grammarAccess.getDeclaredTypeAccess().getGroup(), "rule__DeclaredType__Group__0");
					put(grammarAccess.getChannelPriorityDeclarationAccess().getGroup(), "rule__ChannelPriorityDeclaration__Group__0");
					put(grammarAccess.getChannelPriorityDeclarationAccess().getGroup_3(), "rule__ChannelPriorityDeclaration__Group_3__0");
					put(grammarAccess.getChannelPriorityGroupAccess().getGroup(), "rule__ChannelPriorityGroup__Group__0");
					put(grammarAccess.getChannelPriorityGroupAccess().getGroup_1(), "rule__ChannelPriorityGroup__Group_1__0");
					put(grammarAccess.getDefaultItemAccess().getGroup(), "rule__DefaultItem__Group__0");
					put(grammarAccess.getFunctionAccess().getGroup(), "rule__Function__Group__0");
					put(grammarAccess.getFunctionAccess().getGroup_2(), "rule__Function__Group_2__0");
					put(grammarAccess.getFunctionAccess().getGroup_2_1(), "rule__Function__Group_2_1__0");
					put(grammarAccess.getParameterContainerAccess().getGroup(), "rule__ParameterContainer__Group__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getBlockAccess().getGroup(), "rule__Block__Group__0");
					put(grammarAccess.getBlockDeclarationsAccess().getGroup(), "rule__BlockDeclarations__Group__0");
					put(grammarAccess.getBlockTypedDeclarationAccess().getGroup(), "rule__BlockTypedDeclaration__Group__0");
					put(grammarAccess.getBlockTypedDeclarationAccess().getGroup_2(), "rule__BlockTypedDeclaration__Group_2__0");
					put(grammarAccess.getEmptyStatementAccess().getGroup(), "rule__EmptyStatement__Group__0");
					put(grammarAccess.getExpressionStatementAccess().getGroup(), "rule__ExpressionStatement__Group__0");
					put(grammarAccess.getForLoopAccess().getGroup(), "rule__ForLoop__Group__0");
					put(grammarAccess.getIterationAccess().getGroup(), "rule__Iteration__Group__0");
					put(grammarAccess.getWhileLoopAccess().getGroup(), "rule__WhileLoop__Group__0");
					put(grammarAccess.getDoWhileLoopAccess().getGroup(), "rule__DoWhileLoop__Group__0");
					put(grammarAccess.getIfStatementAccess().getGroup(), "rule__IfStatement__Group__0");
					put(grammarAccess.getIfStatementAccess().getGroup_5(), "rule__IfStatement__Group_5__0");
					put(grammarAccess.getReturnStatementAccess().getGroup(), "rule__ReturnStatement__Group__0");
					put(grammarAccess.getQuantificationExpressionAccess().getGroup_0(), "rule__QuantificationExpression__Group_0__0");
					put(grammarAccess.getLogicalExpression_OrImplyAccess().getGroup(), "rule__LogicalExpression_OrImply__Group__0");
					put(grammarAccess.getLogicalExpression_OrImplyAccess().getGroup_1(), "rule__LogicalExpression_OrImply__Group_1__0");
					put(grammarAccess.getLogicalExpression_AndAccess().getGroup(), "rule__LogicalExpression_And__Group__0");
					put(grammarAccess.getLogicalExpression_AndAccess().getGroup_1(), "rule__LogicalExpression_And__Group_1__0");
					put(grammarAccess.getNegationExpressionAccess().getGroup_0(), "rule__NegationExpression__Group_0__0");
					put(grammarAccess.getAssignmentExpressionAccess().getGroup(), "rule__AssignmentExpression__Group__0");
					put(grammarAccess.getAssignmentExpressionAccess().getGroup_1(), "rule__AssignmentExpression__Group_1__0");
					put(grammarAccess.getConditionExpressionAccess().getGroup(), "rule__ConditionExpression__Group__0");
					put(grammarAccess.getConditionExpressionAccess().getGroup_1(), "rule__ConditionExpression__Group_1__0");
					put(grammarAccess.getLogicalExpression_OrAlternativeAccess().getGroup(), "rule__LogicalExpression_OrAlternative__Group__0");
					put(grammarAccess.getLogicalExpression_OrAlternativeAccess().getGroup_1(), "rule__LogicalExpression_OrAlternative__Group_1__0");
					put(grammarAccess.getLogicalExpression_AndAlternativeAccess().getGroup(), "rule__LogicalExpression_AndAlternative__Group__0");
					put(grammarAccess.getLogicalExpression_AndAlternativeAccess().getGroup_1(), "rule__LogicalExpression_AndAlternative__Group_1__0");
					put(grammarAccess.getBitwiseExpression_OrAccess().getGroup(), "rule__BitwiseExpression_Or__Group__0");
					put(grammarAccess.getBitwiseExpression_OrAccess().getGroup_1(), "rule__BitwiseExpression_Or__Group_1__0");
					put(grammarAccess.getBitwiseExpression_XorAccess().getGroup(), "rule__BitwiseExpression_Xor__Group__0");
					put(grammarAccess.getBitwiseExpression_XorAccess().getGroup_1(), "rule__BitwiseExpression_Xor__Group_1__0");
					put(grammarAccess.getBitwiseExpression_AndAccess().getGroup(), "rule__BitwiseExpression_And__Group__0");
					put(grammarAccess.getBitwiseExpression_AndAccess().getGroup_1(), "rule__BitwiseExpression_And__Group_1__0");
					put(grammarAccess.getCompareExpression_EqualUnequalAccess().getGroup(), "rule__CompareExpression_EqualUnequal__Group__0");
					put(grammarAccess.getCompareExpression_EqualUnequalAccess().getGroup_1(), "rule__CompareExpression_EqualUnequal__Group_1__0");
					put(grammarAccess.getCompareExpression_OtherAccess().getGroup(), "rule__CompareExpression_Other__Group__0");
					put(grammarAccess.getCompareExpression_OtherAccess().getGroup_1(), "rule__CompareExpression_Other__Group_1__0");
					put(grammarAccess.getMinMaxExpressionAccess().getGroup(), "rule__MinMaxExpression__Group__0");
					put(grammarAccess.getMinMaxExpressionAccess().getGroup_1(), "rule__MinMaxExpression__Group_1__0");
					put(grammarAccess.getBitShiftExpressionAccess().getGroup(), "rule__BitShiftExpression__Group__0");
					put(grammarAccess.getBitShiftExpressionAccess().getGroup_1(), "rule__BitShiftExpression__Group_1__0");
					put(grammarAccess.getArithmeticExpression_PlusMinusAccess().getGroup(), "rule__ArithmeticExpression_PlusMinus__Group__0");
					put(grammarAccess.getArithmeticExpression_PlusMinusAccess().getGroup_1(), "rule__ArithmeticExpression_PlusMinus__Group_1__0");
					put(grammarAccess.getArithmeticExpression_OtherAccess().getGroup(), "rule__ArithmeticExpression_Other__Group__0");
					put(grammarAccess.getArithmeticExpression_OtherAccess().getGroup_1(), "rule__ArithmeticExpression_Other__Group_1__0");
					put(grammarAccess.getNegationExpression_AlternativeAccess().getGroup_0(), "rule__NegationExpression_Alternative__Group_0__0");
					put(grammarAccess.getPreIncrementDecrementExpressionAccess().getGroup_1(), "rule__PreIncrementDecrementExpression__Group_1__0");
					put(grammarAccess.getPreIncrementDecrementExpressionAccess().getGroup_1_1_0(), "rule__PreIncrementDecrementExpression__Group_1_1_0__0");
					put(grammarAccess.getPreIncrementDecrementExpressionAccess().getGroup_1_1_1(), "rule__PreIncrementDecrementExpression__Group_1_1_1__0");
					put(grammarAccess.getPostIncrementDecrementExpressionAccess().getGroup(), "rule__PostIncrementDecrementExpression__Group__0");
					put(grammarAccess.getPostIncrementDecrementExpressionAccess().getGroup_1(), "rule__PostIncrementDecrementExpression__Group_1__0");
					put(grammarAccess.getPostIncrementDecrementExpressionAccess().getGroup_1_0(), "rule__PostIncrementDecrementExpression__Group_1_0__0");
					put(grammarAccess.getPostIncrementDecrementExpressionAccess().getGroup_1_0_1_0(), "rule__PostIncrementDecrementExpression__Group_1_0_1_0__0");
					put(grammarAccess.getPostIncrementDecrementExpressionAccess().getGroup_1_0_1_1(), "rule__PostIncrementDecrementExpression__Group_1_0_1_1__0");
					put(grammarAccess.getScopedIdentifierExpressionAccess().getGroup(), "rule__ScopedIdentifierExpression__Group__0");
					put(grammarAccess.getScopedIdentifierExpressionAccess().getGroup_1(), "rule__ScopedIdentifierExpression__Group_1__0");
					put(grammarAccess.getTerminatingExpressionsAccess().getGroup_3(), "rule__TerminatingExpressions__Group_3__0");
					put(grammarAccess.getLiteralExpressionTextAccess().getGroup_2(), "rule__LiteralExpressionText__Group_2__0");
					put(grammarAccess.getFunctionCallExpressionAccess().getGroup(), "rule__FunctionCallExpression__Group__0");
					put(grammarAccess.getFunctionCallExpressionAccess().getGroup_2(), "rule__FunctionCallExpression__Group_2__0");
					put(grammarAccess.getFunctionCallExpressionAccess().getGroup_2_1(), "rule__FunctionCallExpression__Group_2_1__0");
					put(grammarAccess.getIdentifierExpressionAccess().getGroup(), "rule__IdentifierExpression__Group__0");
					put(grammarAccess.getIdentifierExpressionAccess().getGroup_1(), "rule__IdentifierExpression__Group_1__0");
					put(grammarAccess.getNTAAccess().getGlobalDeclarationsAssignment_6_3(), "rule__NTA__GlobalDeclarationsAssignment_6_3");
					put(grammarAccess.getNTAAccess().getTemplateAssignment_7_3(), "rule__NTA__TemplateAssignment_7_3");
					put(grammarAccess.getNTAAccess().getSystemDeclarationsAssignment_12(), "rule__NTA__SystemDeclarationsAssignment_12");
					put(grammarAccess.getTemplateAccess().getNameAssignment_4(), "rule__Template__NameAssignment_4");
					put(grammarAccess.getTemplateAccess().getParameterAssignment_8_3_0(), "rule__Template__ParameterAssignment_8_3_0");
					put(grammarAccess.getTemplateAccess().getParameterAssignment_8_3_1_1(), "rule__Template__ParameterAssignment_8_3_1_1");
					put(grammarAccess.getTemplateAccess().getDeclarationsAssignment_9_3(), "rule__Template__DeclarationsAssignment_9_3");
					put(grammarAccess.getTemplateAccess().getLocationAssignment_10(), "rule__Template__LocationAssignment_10");
					put(grammarAccess.getTemplateAccess().getInitAssignment_15(), "rule__Template__InitAssignment_15");
					put(grammarAccess.getTemplateAccess().getEdgeAssignment_17(), "rule__Template__EdgeAssignment_17");
					put(grammarAccess.getLocationAccess().getIdAssignment_2_0_2(), "rule__Location__IdAssignment_2_0_2");
					put(grammarAccess.getLocationAccess().getPositionAssignment_2_1(), "rule__Location__PositionAssignment_2_1");
					put(grammarAccess.getLocationAccess().getColorCodeAssignment_2_2_2(), "rule__Location__ColorCodeAssignment_2_2_2");
					put(grammarAccess.getLocationAccess().getNameAssignment_3_1_1_4(), "rule__Location__NameAssignment_3_1_1_4");
					put(grammarAccess.getLocationAccess().getCommentAssignment_3_1_2_0_7(), "rule__Location__CommentAssignment_3_1_2_0_7");
					put(grammarAccess.getLocationAccess().getInvariantAssignment_3_1_2_1_7(), "rule__Location__InvariantAssignment_3_1_2_1_7");
					put(grammarAccess.getLocationAccess().getLocationTimeKindAssignment_3_1_3(), "rule__Location__LocationTimeKindAssignment_3_1_3");
					put(grammarAccess.getEdgeAccess().getColorCodeAssignment_2_2_2(), "rule__Edge__ColorCodeAssignment_2_2_2");
					put(grammarAccess.getEdgeAccess().getSourceAssignment_8(), "rule__Edge__SourceAssignment_8");
					put(grammarAccess.getEdgeAccess().getTargetAssignment_14(), "rule__Edge__TargetAssignment_14");
					put(grammarAccess.getEdgeAccess().getCommentAssignment_16_0_7(), "rule__Edge__CommentAssignment_16_0_7");
					put(grammarAccess.getEdgeAccess().getSynchronizationAssignment_16_1_7(), "rule__Edge__SynchronizationAssignment_16_1_7");
					put(grammarAccess.getEdgeAccess().getGuardAssignment_16_2_7(), "rule__Edge__GuardAssignment_16_2_7");
					put(grammarAccess.getEdgeAccess().getUpdateAssignment_16_3_7(), "rule__Edge__UpdateAssignment_16_3_7");
					put(grammarAccess.getEdgeAccess().getUpdateAssignment_16_3_8_1(), "rule__Edge__UpdateAssignment_16_3_8_1");
					put(grammarAccess.getEdgeAccess().getSelectionAssignment_16_4_7(), "rule__Edge__SelectionAssignment_16_4_7");
					put(grammarAccess.getEdgeAccess().getSelectionAssignment_16_4_8_1(), "rule__Edge__SelectionAssignment_16_4_8_1");
					put(grammarAccess.getEdgeAccess().getBendPointAssignment_17_2(), "rule__Edge__BendPointAssignment_17_2");
					put(grammarAccess.getSynchronizationLabelAccess().getChannelExpressionAssignment_0(), "rule__SynchronizationLabel__ChannelExpressionAssignment_0");
					put(grammarAccess.getSynchronizationLabelAccess().getKindAssignment_1(), "rule__SynchronizationLabel__KindAssignment_1");
					put(grammarAccess.getPointAccess().getXAssignment_1_0_2(), "rule__Point__XAssignment_1_0_2");
					put(grammarAccess.getPointAccess().getYAssignment_1_1_2(), "rule__Point__YAssignment_1_1_2");
					put(grammarAccess.getSelectionAccess().getElementsAssignment_0(), "rule__Selection__ElementsAssignment_0");
					put(grammarAccess.getSelectionAccess().getTypeDefinitionAssignment_2(), "rule__Selection__TypeDefinitionAssignment_2");
					put(grammarAccess.getGlobalDeclarationsAccess().getDeclarationAssignment_1_0(), "rule__GlobalDeclarations__DeclarationAssignment_1_0");
					put(grammarAccess.getGlobalDeclarationsAccess().getChannelPriorityAssignment_1_1(), "rule__GlobalDeclarations__ChannelPriorityAssignment_1_1");
					put(grammarAccess.getLocalDeclarationsAccess().getDeclarationAssignment_1(), "rule__LocalDeclarations__DeclarationAssignment_1");
					put(grammarAccess.getSystemDeclarationsAccess().getDeclarationAssignment_1_0(), "rule__SystemDeclarations__DeclarationAssignment_1_0");
					put(grammarAccess.getSystemDeclarationsAccess().getSystemAssignment_1_1(), "rule__SystemDeclarations__SystemAssignment_1_1");
					put(grammarAccess.getSystemDeclarationsAccess().getProgressMeasureAssignment_1_2(), "rule__SystemDeclarations__ProgressMeasureAssignment_1_2");
					put(grammarAccess.getProgressMeasureAccess().getExpressionAssignment_2_0(), "rule__ProgressMeasure__ExpressionAssignment_2_0");
					put(grammarAccess.getTemplateDeclarationAccess().getDeclaredTemplateAssignment_0(), "rule__TemplateDeclaration__DeclaredTemplateAssignment_0");
					put(grammarAccess.getTemplateDeclarationAccess().getArgumentAssignment_2_0(), "rule__TemplateDeclaration__ArgumentAssignment_2_0");
					put(grammarAccess.getTemplateDeclarationAccess().getArgumentAssignment_2_1_1(), "rule__TemplateDeclaration__ArgumentAssignment_2_1_1");
					put(grammarAccess.getRedefinedTemplateAccess().getNameAssignment_0(), "rule__RedefinedTemplate__NameAssignment_0");
					put(grammarAccess.getRedefinedTemplateAccess().getReferredTemplateAssignment_2(), "rule__RedefinedTemplate__ReferredTemplateAssignment_2");
					put(grammarAccess.getSystemAccess().getInstantiationListAssignment_1(), "rule__System__InstantiationListAssignment_1");
					put(grammarAccess.getSystemAccess().getInstantiationListAssignment_2_1(), "rule__System__InstantiationListAssignment_2_1");
					put(grammarAccess.getInstantiationListAccess().getTemplateAssignment_0(), "rule__InstantiationList__TemplateAssignment_0");
					put(grammarAccess.getInstantiationListAccess().getTemplateAssignment_1_1(), "rule__InstantiationList__TemplateAssignment_1_1");
					put(grammarAccess.getTypedDeclarationAccess().getTypeDefinitionAssignment_0(), "rule__TypedDeclaration__TypeDefinitionAssignment_0");
					put(grammarAccess.getTypedDeclarationAccess().getElementsAssignment_1_0(), "rule__TypedDeclaration__ElementsAssignment_1_0");
					put(grammarAccess.getTypedDeclarationAccess().getElementsAssignment_1_1_0(), "rule__TypedDeclaration__ElementsAssignment_1_1_0");
					put(grammarAccess.getTypedDeclarationAccess().getElementsAssignment_1_1_1_1(), "rule__TypedDeclaration__ElementsAssignment_1_1_1_1");
					put(grammarAccess.getTypedElementAccess().getTypeDefinitionAssignment_0(), "rule__TypedElement__TypeDefinitionAssignment_0");
					put(grammarAccess.getTypedElementAccess().getElementsAssignment_1(), "rule__TypedElement__ElementsAssignment_1");
					put(grammarAccess.getTypedElementAccess().getElementsAssignment_2_1(), "rule__TypedElement__ElementsAssignment_2_1");
					put(grammarAccess.getVariableNameOnlyAccess().getNameAssignment(), "rule__VariableNameOnly__NameAssignment");
					put(grammarAccess.getVariableAccess().getNameAssignment_0(), "rule__Variable__NameAssignment_0");
					put(grammarAccess.getVariableAccess().getIndexAssignment_1_1(), "rule__Variable__IndexAssignment_1_1");
					put(grammarAccess.getVariableAccess().getInitializerAssignment_2_1(), "rule__Variable__InitializerAssignment_2_1");
					put(grammarAccess.getExpressionInitializerAccess().getExpressionAssignment(), "rule__ExpressionInitializer__ExpressionAssignment");
					put(grammarAccess.getArrayInitializerAccess().getInitializerAssignment_1(), "rule__ArrayInitializer__InitializerAssignment_1");
					put(grammarAccess.getArrayInitializerAccess().getInitializerAssignment_2_1(), "rule__ArrayInitializer__InitializerAssignment_2_1");
					put(grammarAccess.getChannelPrefixExpressionAccess().getUrgentAssignment_0_0_0(), "rule__ChannelPrefixExpression__UrgentAssignment_0_0_0");
					put(grammarAccess.getChannelPrefixExpressionAccess().getBroadcastAssignment_0_0_1(), "rule__ChannelPrefixExpression__BroadcastAssignment_0_0_1");
					put(grammarAccess.getChannelPrefixExpressionAccess().getBroadcastAssignment_0_1_0(), "rule__ChannelPrefixExpression__BroadcastAssignment_0_1_0");
					put(grammarAccess.getChannelPrefixExpressionAccess().getUrgentAssignment_0_1_1(), "rule__ChannelPrefixExpression__UrgentAssignment_0_1_1");
					put(grammarAccess.getChannelPrefixExpressionAccess().getChannelTypeAssignment_1(), "rule__ChannelPrefixExpression__ChannelTypeAssignment_1");
					put(grammarAccess.getDataPrefixExpressionAccess().getPrefixAssignment_0(), "rule__DataPrefixExpression__PrefixAssignment_0");
					put(grammarAccess.getDataPrefixExpressionAccess().getDataTypeExpressionAssignment_1(), "rule__DataPrefixExpression__DataTypeExpressionAssignment_1");
					put(grammarAccess.getRangeTypeSpecificationAccess().getBoundsAssignment_1(), "rule__RangeTypeSpecification__BoundsAssignment_1");
					put(grammarAccess.getIntegerBoundsAccess().getLowerBoundAssignment_1(), "rule__IntegerBounds__LowerBoundAssignment_1");
					put(grammarAccess.getIntegerBoundsAccess().getUpperBoundAssignment_3(), "rule__IntegerBounds__UpperBoundAssignment_3");
					put(grammarAccess.getStructTypeSpecificationAccess().getDeclarationAssignment_2_0(), "rule__StructTypeSpecification__DeclarationAssignment_2_0");
					put(grammarAccess.getScalarTypeSpecificationAccess().getSizeExpressionAssignment_2(), "rule__ScalarTypeSpecification__SizeExpressionAssignment_2");
					put(grammarAccess.getTypeDeclarationAccess().getTypeDefinitionAssignment_1(), "rule__TypeDeclaration__TypeDefinitionAssignment_1");
					put(grammarAccess.getTypeDeclarationAccess().getTypeAssignment_2(), "rule__TypeDeclaration__TypeAssignment_2");
					put(grammarAccess.getTypeDeclarationAccess().getTypeAssignment_3_1(), "rule__TypeDeclaration__TypeAssignment_3_1");
					put(grammarAccess.getDeclaredTypeAccess().getNameAssignment_1(), "rule__DeclaredType__NameAssignment_1");
					put(grammarAccess.getChannelPriorityDeclarationAccess().getGroupsAssignment_2(), "rule__ChannelPriorityDeclaration__GroupsAssignment_2");
					put(grammarAccess.getChannelPriorityDeclarationAccess().getGroupsAssignment_3_1(), "rule__ChannelPriorityDeclaration__GroupsAssignment_3_1");
					put(grammarAccess.getChannelPriorityGroupAccess().getItemsAssignment_0(), "rule__ChannelPriorityGroup__ItemsAssignment_0");
					put(grammarAccess.getChannelPriorityGroupAccess().getItemsAssignment_1_1(), "rule__ChannelPriorityGroup__ItemsAssignment_1_1");
					put(grammarAccess.getChannelItemAccess().getChannelExpressionAssignment(), "rule__ChannelItem__ChannelExpressionAssignment");
					put(grammarAccess.getFunctionAccess().getNameAssignment_0(), "rule__Function__NameAssignment_0");
					put(grammarAccess.getFunctionAccess().getParameterAssignment_2_0(), "rule__Function__ParameterAssignment_2_0");
					put(grammarAccess.getFunctionAccess().getParameterAssignment_2_1_1(), "rule__Function__ParameterAssignment_2_1_1");
					put(grammarAccess.getFunctionAccess().getBlockAssignment_4(), "rule__Function__BlockAssignment_4");
					put(grammarAccess.getParameterContainerAccess().getTypeDefinitionAssignment_0(), "rule__ParameterContainer__TypeDefinitionAssignment_0");
					put(grammarAccess.getParameterContainerAccess().getElementsAssignment_1(), "rule__ParameterContainer__ElementsAssignment_1");
					put(grammarAccess.getParameterAccess().getCallTypeAssignment_0(), "rule__Parameter__CallTypeAssignment_0");
					put(grammarAccess.getParameterAccess().getNameAssignment_1(), "rule__Parameter__NameAssignment_1");
					put(grammarAccess.getBlockAccess().getDeclarationsAssignment_2(), "rule__Block__DeclarationsAssignment_2");
					put(grammarAccess.getBlockAccess().getStatementAssignment_3(), "rule__Block__StatementAssignment_3");
					put(grammarAccess.getBlockDeclarationsAccess().getDeclarationAssignment_1(), "rule__BlockDeclarations__DeclarationAssignment_1");
					put(grammarAccess.getBlockTypedDeclarationAccess().getTypeDefinitionAssignment_0(), "rule__BlockTypedDeclaration__TypeDefinitionAssignment_0");
					put(grammarAccess.getBlockTypedDeclarationAccess().getElementsAssignment_1(), "rule__BlockTypedDeclaration__ElementsAssignment_1");
					put(grammarAccess.getBlockTypedDeclarationAccess().getElementsAssignment_2_1(), "rule__BlockTypedDeclaration__ElementsAssignment_2_1");
					put(grammarAccess.getExpressionStatementAccess().getExpressionAssignment_0(), "rule__ExpressionStatement__ExpressionAssignment_0");
					put(grammarAccess.getForLoopAccess().getInitializationAssignment_2(), "rule__ForLoop__InitializationAssignment_2");
					put(grammarAccess.getForLoopAccess().getConditionAssignment_4(), "rule__ForLoop__ConditionAssignment_4");
					put(grammarAccess.getForLoopAccess().getIterationAssignment_6(), "rule__ForLoop__IterationAssignment_6");
					put(grammarAccess.getForLoopAccess().getStatementAssignment_8(), "rule__ForLoop__StatementAssignment_8");
					put(grammarAccess.getIterationAccess().getElementsAssignment_2(), "rule__Iteration__ElementsAssignment_2");
					put(grammarAccess.getIterationAccess().getTypeDefinitionAssignment_4(), "rule__Iteration__TypeDefinitionAssignment_4");
					put(grammarAccess.getIterationAccess().getStatementAssignment_6(), "rule__Iteration__StatementAssignment_6");
					put(grammarAccess.getWhileLoopAccess().getExpressionAssignment_2(), "rule__WhileLoop__ExpressionAssignment_2");
					put(grammarAccess.getWhileLoopAccess().getStatementAssignment_4(), "rule__WhileLoop__StatementAssignment_4");
					put(grammarAccess.getDoWhileLoopAccess().getStatementAssignment_1(), "rule__DoWhileLoop__StatementAssignment_1");
					put(grammarAccess.getDoWhileLoopAccess().getExpressionAssignment_4(), "rule__DoWhileLoop__ExpressionAssignment_4");
					put(grammarAccess.getIfStatementAccess().getIfExpressionAssignment_2(), "rule__IfStatement__IfExpressionAssignment_2");
					put(grammarAccess.getIfStatementAccess().getThenStatementAssignment_4(), "rule__IfStatement__ThenStatementAssignment_4");
					put(grammarAccess.getIfStatementAccess().getElseStatementAssignment_5_1(), "rule__IfStatement__ElseStatementAssignment_5_1");
					put(grammarAccess.getReturnStatementAccess().getReturnExpressionAssignment_2(), "rule__ReturnStatement__ReturnExpressionAssignment_2");
					put(grammarAccess.getQuantificationExpressionAccess().getQuantifierAssignment_0_1(), "rule__QuantificationExpression__QuantifierAssignment_0_1");
					put(grammarAccess.getQuantificationExpressionAccess().getElementsAssignment_0_3(), "rule__QuantificationExpression__ElementsAssignment_0_3");
					put(grammarAccess.getQuantificationExpressionAccess().getTypeDefinitionAssignment_0_5(), "rule__QuantificationExpression__TypeDefinitionAssignment_0_5");
					put(grammarAccess.getQuantificationExpressionAccess().getExpressionAssignment_0_7(), "rule__QuantificationExpression__ExpressionAssignment_0_7");
					put(grammarAccess.getLogicalExpression_OrImplyAccess().getOperatorAssignment_1_1(), "rule__LogicalExpression_OrImply__OperatorAssignment_1_1");
					put(grammarAccess.getLogicalExpression_OrImplyAccess().getSecondExprAssignment_1_2(), "rule__LogicalExpression_OrImply__SecondExprAssignment_1_2");
					put(grammarAccess.getLogicalExpression_AndAccess().getOperatorAssignment_1_1(), "rule__LogicalExpression_And__OperatorAssignment_1_1");
					put(grammarAccess.getLogicalExpression_AndAccess().getSecondExprAssignment_1_2(), "rule__LogicalExpression_And__SecondExprAssignment_1_2");
					put(grammarAccess.getNegationExpressionAccess().getNegatedExpressionAssignment_0_2(), "rule__NegationExpression__NegatedExpressionAssignment_0_2");
					put(grammarAccess.getAssignmentExpressionAccess().getOperatorAssignment_1_1(), "rule__AssignmentExpression__OperatorAssignment_1_1");
					put(grammarAccess.getAssignmentExpressionAccess().getSecondExprAssignment_1_2(), "rule__AssignmentExpression__SecondExprAssignment_1_2");
					put(grammarAccess.getConditionExpressionAccess().getThenExpressionAssignment_1_2(), "rule__ConditionExpression__ThenExpressionAssignment_1_2");
					put(grammarAccess.getConditionExpressionAccess().getElseExpressionAssignment_1_4(), "rule__ConditionExpression__ElseExpressionAssignment_1_4");
					put(grammarAccess.getLogicalExpression_OrAlternativeAccess().getOperatorAssignment_1_1(), "rule__LogicalExpression_OrAlternative__OperatorAssignment_1_1");
					put(grammarAccess.getLogicalExpression_OrAlternativeAccess().getSecondExprAssignment_1_2(), "rule__LogicalExpression_OrAlternative__SecondExprAssignment_1_2");
					put(grammarAccess.getLogicalExpression_AndAlternativeAccess().getOperatorAssignment_1_1(), "rule__LogicalExpression_AndAlternative__OperatorAssignment_1_1");
					put(grammarAccess.getLogicalExpression_AndAlternativeAccess().getSecondExprAssignment_1_2(), "rule__LogicalExpression_AndAlternative__SecondExprAssignment_1_2");
					put(grammarAccess.getBitwiseExpression_OrAccess().getOperatorAssignment_1_1(), "rule__BitwiseExpression_Or__OperatorAssignment_1_1");
					put(grammarAccess.getBitwiseExpression_OrAccess().getSecondExprAssignment_1_2(), "rule__BitwiseExpression_Or__SecondExprAssignment_1_2");
					put(grammarAccess.getBitwiseExpression_XorAccess().getOperatorAssignment_1_1(), "rule__BitwiseExpression_Xor__OperatorAssignment_1_1");
					put(grammarAccess.getBitwiseExpression_XorAccess().getSecondExprAssignment_1_2(), "rule__BitwiseExpression_Xor__SecondExprAssignment_1_2");
					put(grammarAccess.getBitwiseExpression_AndAccess().getOperatorAssignment_1_1(), "rule__BitwiseExpression_And__OperatorAssignment_1_1");
					put(grammarAccess.getBitwiseExpression_AndAccess().getSecondExprAssignment_1_2(), "rule__BitwiseExpression_And__SecondExprAssignment_1_2");
					put(grammarAccess.getCompareExpression_EqualUnequalAccess().getOperatorAssignment_1_1(), "rule__CompareExpression_EqualUnequal__OperatorAssignment_1_1");
					put(grammarAccess.getCompareExpression_EqualUnequalAccess().getSecondExprAssignment_1_2(), "rule__CompareExpression_EqualUnequal__SecondExprAssignment_1_2");
					put(grammarAccess.getCompareExpression_OtherAccess().getOperatorAssignment_1_1(), "rule__CompareExpression_Other__OperatorAssignment_1_1");
					put(grammarAccess.getCompareExpression_OtherAccess().getSecondExprAssignment_1_2(), "rule__CompareExpression_Other__SecondExprAssignment_1_2");
					put(grammarAccess.getMinMaxExpressionAccess().getOperatorAssignment_1_1(), "rule__MinMaxExpression__OperatorAssignment_1_1");
					put(grammarAccess.getMinMaxExpressionAccess().getSecondExprAssignment_1_2(), "rule__MinMaxExpression__SecondExprAssignment_1_2");
					put(grammarAccess.getBitShiftExpressionAccess().getOperatorAssignment_1_1(), "rule__BitShiftExpression__OperatorAssignment_1_1");
					put(grammarAccess.getBitShiftExpressionAccess().getSecondExprAssignment_1_2(), "rule__BitShiftExpression__SecondExprAssignment_1_2");
					put(grammarAccess.getArithmeticExpression_PlusMinusAccess().getOperatorAssignment_1_1(), "rule__ArithmeticExpression_PlusMinus__OperatorAssignment_1_1");
					put(grammarAccess.getArithmeticExpression_PlusMinusAccess().getSecondExprAssignment_1_2(), "rule__ArithmeticExpression_PlusMinus__SecondExprAssignment_1_2");
					put(grammarAccess.getArithmeticExpression_OtherAccess().getOperatorAssignment_1_1(), "rule__ArithmeticExpression_Other__OperatorAssignment_1_1");
					put(grammarAccess.getArithmeticExpression_OtherAccess().getSecondExprAssignment_1_2(), "rule__ArithmeticExpression_Other__SecondExprAssignment_1_2");
					put(grammarAccess.getNegationExpression_AlternativeAccess().getNegatedExpressionAssignment_0_2(), "rule__NegationExpression_Alternative__NegatedExpressionAssignment_0_2");
					put(grammarAccess.getPreIncrementDecrementExpressionAccess().getPositionAssignment_1_1_0_0(), "rule__PreIncrementDecrementExpression__PositionAssignment_1_1_0_0");
					put(grammarAccess.getPreIncrementDecrementExpressionAccess().getOperatorAssignment_1_1_0_1(), "rule__PreIncrementDecrementExpression__OperatorAssignment_1_1_0_1");
					put(grammarAccess.getPreIncrementDecrementExpressionAccess().getPositionAssignment_1_1_1_0(), "rule__PreIncrementDecrementExpression__PositionAssignment_1_1_1_0");
					put(grammarAccess.getPreIncrementDecrementExpressionAccess().getOperatorAssignment_1_1_1_1(), "rule__PreIncrementDecrementExpression__OperatorAssignment_1_1_1_1");
					put(grammarAccess.getPreIncrementDecrementExpressionAccess().getExpressionAssignment_1_2(), "rule__PreIncrementDecrementExpression__ExpressionAssignment_1_2");
					put(grammarAccess.getPostIncrementDecrementExpressionAccess().getPositionAssignment_1_0_1_0_0(), "rule__PostIncrementDecrementExpression__PositionAssignment_1_0_1_0_0");
					put(grammarAccess.getPostIncrementDecrementExpressionAccess().getOperatorAssignment_1_0_1_0_1(), "rule__PostIncrementDecrementExpression__OperatorAssignment_1_0_1_0_1");
					put(grammarAccess.getPostIncrementDecrementExpressionAccess().getPositionAssignment_1_0_1_1_0(), "rule__PostIncrementDecrementExpression__PositionAssignment_1_0_1_1_0");
					put(grammarAccess.getPostIncrementDecrementExpressionAccess().getOperatorAssignment_1_0_1_1_1(), "rule__PostIncrementDecrementExpression__OperatorAssignment_1_0_1_1_1");
					put(grammarAccess.getScopedIdentifierExpressionAccess().getIdentifierAssignment_1_2(), "rule__ScopedIdentifierExpression__IdentifierAssignment_1_2");
					put(grammarAccess.getLiteralExpressionAccess().getTextAssignment(), "rule__LiteralExpression__TextAssignment");
					put(grammarAccess.getFunctionCallExpressionAccess().getFunctionAssignment_0(), "rule__FunctionCallExpression__FunctionAssignment_0");
					put(grammarAccess.getFunctionCallExpressionAccess().getArgumentAssignment_2_0(), "rule__FunctionCallExpression__ArgumentAssignment_2_0");
					put(grammarAccess.getFunctionCallExpressionAccess().getArgumentAssignment_2_1_1(), "rule__FunctionCallExpression__ArgumentAssignment_2_1_1");
					put(grammarAccess.getIdentifierExpressionAccess().getIdentifierAssignment_0(), "rule__IdentifierExpression__IdentifierAssignment_0");
					put(grammarAccess.getIdentifierExpressionAccess().getIndexAssignment_1_1(), "rule__IdentifierExpression__IndexAssignment_1_1");
					put(grammarAccess.getSimpleIdentifierExpressionAccess().getIdentifierAssignment(), "rule__SimpleIdentifierExpression__IdentifierAssignment");
					put(grammarAccess.getTemplateAccess().getUnorderedGroup_2(), "rule__Template__UnorderedGroup_2");
					put(grammarAccess.getLocationAccess().getUnorderedGroup_2(), "rule__Location__UnorderedGroup_2");
					put(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2(), "rule__Location__UnorderedGroup_3_1_1_2");
					put(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), "rule__Location__UnorderedGroup_3_1_2");
					put(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5(), "rule__Location__UnorderedGroup_3_1_2_0_5");
					put(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5(), "rule__Location__UnorderedGroup_3_1_2_1_5");
					put(grammarAccess.getEdgeAccess().getUnorderedGroup_2(), "rule__Edge__UnorderedGroup_2");
					put(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), "rule__Edge__UnorderedGroup_16");
					put(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5(), "rule__Edge__UnorderedGroup_16_0_5");
					put(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5(), "rule__Edge__UnorderedGroup_16_1_5");
					put(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5(), "rule__Edge__UnorderedGroup_16_2_5");
					put(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5(), "rule__Edge__UnorderedGroup_16_3_5");
					put(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5(), "rule__Edge__UnorderedGroup_16_4_5");
					put(grammarAccess.getPointAccess().getUnorderedGroup_1(), "rule__Point__UnorderedGroup_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.uni_paderborn.uppaal.ui.contentassist.antlr.internal.InternalUppaalXMLParser typedParser = (de.uni_paderborn.uppaal.ui.contentassist.antlr.internal.InternalUppaalXMLParser) parser;
			typedParser.entryRuleNTA();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT" };
	}
	
	public UppaalXMLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(UppaalXMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
