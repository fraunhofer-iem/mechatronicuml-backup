<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>


urgent  chan  hurry  ;  

chan finalMasterSlave, finalFailed;


const int  NUM_OF_MESSAGES   = 6;  

typedef int [0, NUM_OF_MESSAGES]
Message;


const Message  null   = 0, cannotMaster   = 1, cannotSlave   = 2, confirm   = 3, masterReady   = 4, slaveReady   = 5, youSlave   = 6;  


const int  CAPACITY   = 1;  

typedef struct {

int [0, CAPACITY]
tail  ;  


Message  messages [CAPACITY]
;  
}
Buffer;

bool check(
Buffer  buffer  , 
Message  m  )
{
return m != null and buffer.messages[0] == m; 
} 
 

void remove(
Buffer &amp; buffer  , 
Message  m  )
{
if(check(buffer,m)
)
{


int  i  ;  
for(i = 0; i &lt; CAPACITY - 1; i++)
buffer.messages[i] = buffer.messages[i + 1];
;
; buffer.messages[CAPACITY - 1] = null;
; buffer.tail--;
} 
;
} 
 

void add(
Buffer &amp; b  , 
Message  e  )
{
b.messages[b.tail] = e;
; b.tail++;
} 
 


const int  NUM_OF_INSTANCES   = 2;  

typedef int [0, NUM_OF_INSTANCES - 1]
instance;


bool  overflow  ;  


Buffer  buffers [instance]
;  


Buffer  connectors [instance]
;  


int  earliest [instance]
;  


int  latest [instance]
;  


clock  transmissionTimes [instance]
[CAPACITY]
;  

void send(
instance  sender  , 
Message  m  )
{
if(connectors[sender].tail &lt; CAPACITY)
{
add(connectors[sender],m)
;
; transmissionTimes[sender][latest[sender]] = 0;
; latest[sender] == CAPACITY - 1 ? latest[sender] = 0 : latest[sender]++;
} 
else overflow = true;
;
} 
 

bool receive(
instance  receiver  , 
Message  m  )
{
return check(buffers[receiver],m)
; 
} 
 

void consume(
instance  receiver  , 
Message  m  )
{
if(receive(receiver,m)
)
remove(buffers[receiver],m)
;
;
} 
 

typedef int [0, 0]
peer2_RANGE;


bool  masterPossible [peer2_RANGE]
  = {true}	
;  


bool  slavePossible [peer2_RANGE]
  = {true}	
;  


bool  masterStarted [peer2_RANGE]
;  


bool  slaveStarted [peer2_RANGE]
;  


clock  c0 [peer2_RANGE]
;  


clock  RELATIVE [peer2_RANGE]
;  

typedef int [1, 1]
peer_RANGE;


bool  masterPossible0 [peer_RANGE]
  = {true}	
;  


bool  slavePossible0 [peer_RANGE]
  = {true}	
;  


bool  masterStarted0 [peer_RANGE]
;  


bool  slaveStarted0 [peer_RANGE]
;  


clock  c00 [peer_RANGE]
;  


clock  RELATIVE0 [peer_RANGE]
;  



		</declaration><template><name>Connector</name><parameter>  const instance  sender  ,  const instance  receiver  ,  const int  min  ,  const int  max  ,  const bool  loss  ,  const int  bufferSize   		</parameter><declaration>
		


Message  tmp  ;  


	</declaration><location id="id0" x="40" y="80"><name x="30" y="50">Idle</name><label kind="invariant" x="30" y="95">connectors[sender].tail &gt; 0 imply transmissionTimes[sender][earliest[sender]] &lt;= max</label></location><location id="id1" x="190" y="80"><name x="180" y="50">transfer_loc</name><committed/></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="select" x="55" y="35">i   : Message</label><label kind="guard" x="55" y="50">check(connectors[sender],i)
 and transmissionTimes[sender][earliest[sender]] &gt;= min and transmissionTimes[sender][earliest[sender]] &lt;= max</label><label kind="assignment" x="55" y="80">tmp = i, 
remove(connectors[sender],i)
, 
earliest[sender] == CAPACITY - 1 ? earliest[sender] = 0 : earliest[sender]++</label></transition><transition><source ref="id1"/><target ref="id0"/><label kind="guard" x="55" y="50">buffers[receiver].tail &lt; bufferSize</label><label kind="assignment" x="55" y="80">add(buffers[receiver],tmp)</label></transition><transition><source ref="id1"/><target ref="id0"/><label kind="guard" x="55" y="50">buffers[receiver].tail &gt;= bufferSize</label><label kind="assignment" x="55" y="80">overflow = true</label></transition><transition><source ref="id1"/><target ref="id0"/><label kind="guard" x="55" y="50">loss == true</label></transition></template><template><name>peer2</name><parameter>  const peer2_RANGE  portOrRoleInstanceID   		</parameter><declaration>
		
	</declaration><location id="id2" x="184" y="-96"><name x="174" y="-126">NoAssignment_ACTIVE_IN_peer2</name></location><location id="id3" x="-56" y="-96"><name x="-66" y="-126">MasterProposed_ACTIVE_IN_peer2</name><label kind="invariant" x="-66" y="-81">c0[portOrRoleInstanceID] &lt;= 100</label></location><location id="id4" x="-56" y="176"><name x="-66" y="146">StartingMaster_ACTIVE_IN_peer2</name></location><location id="id5" x="-56" y="376"><name x="-66" y="346">WaitForSlaveFinish_ACTIVE_IN_peer2</name><label kind="invariant" x="-280" y="376">c0[portOrRoleInstanceID] &lt;= 100</label></location><location id="id6" x="560" y="-96"><name x="550" y="-126">AcceptSlave_ACTIVE_IN_peer2</name><urgent/></location><location id="id7" x="560" y="408"><name x="550" y="378">WaitForMasterFinish_ACTIVE_IN_peer2</name><label kind="invariant" x="550" y="423">c0[portOrRoleInstanceID] &lt;= 700</label></location><location id="id8" x="240" y="552"><name x="230" y="522">Failed_ACTIVE_IN_peer2</name></location><location id="id9" x="-56" y="544"><name x="-66" y="514">Master_ACTIVE_IN_peer2</name></location><location id="id10" x="560" y="552"><name x="550" y="522">Slave_ACTIVE_IN_peer2</name></location><location id="id11" x="560" y="232"><name x="550" y="202">StartingSlave_ACTIVE_IN_peer2</name></location><location id="id12" x="-56" y="48"><name x="-66" y="18">INTERMEDIATE_ACTIVE_IN_peer2</name><label kind="invariant" x="-66" y="63">RELATIVE[portOrRoleInstanceID] &lt;= 50</label></location><location id="id13" x="560" y="96"><name x="550" y="66">INTERMEDIATE0_ACTIVE_IN_peer2</name><label kind="invariant" x="550" y="111">RELATIVE[portOrRoleInstanceID] &lt;= 50</label></location><init ref="id2"/><transition><source ref="id10"/><target ref="id10"/><label kind="synchronisation" x="500" y="537">finalMasterSlave?</label><nail x="512" y="600"/><nail x="608" y="600"/></transition><transition><source ref="id8"/><target ref="id8"/><label kind="synchronisation" x="208" y="600">finalFailed?</label><nail x="192" y="600"/><nail x="280" y="600"/></transition><transition><source ref="id9"/><target ref="id9"/><label kind="synchronisation" x="-120" y="592">finalMasterSlave!</label><nail x="-112" y="592"/><nail x="-16" y="592"/></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-64" y="-32">receive(portOrRoleInstanceID,youSlave)</label><label kind="synchronisation" x="130" y="140">hurry?</label><label kind="assignment" x="130" y="155">consume(portOrRoleInstanceID,youSlave)
, 
c0[portOrRoleInstanceID] = 0</label><nail x="56" y="-32"/></transition><transition><source ref="id5"/><target ref="id2"/><label kind="guard" x="-8" y="376">receive(portOrRoleInstanceID,cannotSlave)</label><label kind="synchronisation" x="205" y="65">hurry?</label><label kind="assignment" x="-24" y="408">consume(portOrRoleInstanceID,cannotSlave), 
c0[portOrRoleInstanceID] = 0,
masterPossible[portOrRoleInstanceID] = false</label><nail x="80" y="376"/></transition><transition><source ref="id5"/><target ref="id2"/><label kind="guard" x="-48" y="208">not(masterStarted[portOrRoleInstanceID])
 and receive(portOrRoleInstanceID,slaveReady)</label><label kind="synchronisation" x="205" y="65">hurry?</label><label kind="assignment" x="-16" y="88">consume(portOrRoleInstanceID,slaveReady)
, 
c0[portOrRoleInstanceID] = 0</label></transition><transition><source ref="id7"/><target ref="id2"/><label kind="guard" x="256" y="-32">receive(portOrRoleInstanceID,cannotMaster)</label><label kind="synchronisation" x="205" y="215">hurry?</label><label kind="assignment" x="205" y="230">consume(portOrRoleInstanceID,cannotMaster), 
c0[portOrRoleInstanceID] = 0,
slavePossible[portOrRoleInstanceID] = false</label></transition><transition><source ref="id7"/><target ref="id2"/><label kind="guard" x="280" y="96">not(slaveStarted[portOrRoleInstanceID])
 and receive(portOrRoleInstanceID,masterReady)</label><label kind="synchronisation" x="205" y="215">hurry?</label><label kind="assignment" x="205" y="230">consume(portOrRoleInstanceID,masterReady)
, 
c0[portOrRoleInstanceID] = 0</label><nail x="400" y="408"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="-328" y="-96">masterPossible[portOrRoleInstanceID] and c0[portOrRoleInstanceID] &gt;= 50</label><label kind="assignment" x="130" y="155">c0[portOrRoleInstanceID] = 0, 
send(portOrRoleInstanceID,youSlave)</label></transition><transition><source ref="id2"/><target ref="id8"/><label kind="guard" x="200" y="464">not(masterPossible[portOrRoleInstanceID])
 and not(slavePossible[portOrRoleInstanceID])</label><label kind="synchronisation" x="130" y="215">hurry?</label></transition><transition><source ref="id2"/><target ref="id6"/><label kind="guard" x="224" y="-88">slavePossible[portOrRoleInstanceID] and receive(portOrRoleInstanceID,youSlave)</label><label kind="synchronisation" x="205" y="140">hurry?</label><label kind="assignment" x="205" y="155">consume(portOrRoleInstanceID,youSlave)
, 
send(portOrRoleInstanceID,confirm)</label></transition><transition><source ref="id3"/><target ref="id12"/><label kind="guard" x="280" y="275">receive(portOrRoleInstanceID,confirm)</label><label kind="synchronisation" x="280" y="290">hurry?</label><label kind="assignment" x="280" y="305">consume(portOrRoleInstanceID,confirm)
, 
RELATIVE[portOrRoleInstanceID] = 0</label></transition><transition><source ref="id12"/><target ref="id4"/><label kind="select" x="205" y="260">choice   : int [0, 1]</label><label kind="guard" x="-312" y="96">RELATIVE[portOrRoleInstanceID] &gt;= 50</label><label kind="assignment" x="205" y="305">masterStarted[portOrRoleInstanceID] = choice</label></transition><transition><source ref="id4"/><target ref="id5"/><label kind="guard" x="-136" y="264">not(masterStarted[portOrRoleInstanceID])</label><label kind="synchronisation" x="130" y="140">hurry?</label><label kind="assignment" x="130" y="155">c0[portOrRoleInstanceID] = 0, 
masterPossible[portOrRoleInstanceID] = false, 
send(portOrRoleInstanceID,cannotMaster)</label></transition><transition><source ref="id4"/><target ref="id5"/><label kind="guard" x="-368" y="232">masterStarted[portOrRoleInstanceID]</label><label kind="synchronisation" x="130" y="140">hurry?</label><label kind="assignment" x="130" y="155">c0[portOrRoleInstanceID] = 0, 
send(portOrRoleInstanceID,masterReady)</label><nail x="-152" y="280"/></transition><transition><source ref="id5"/><target ref="id9"/><label kind="guard" x="-360" y="472">masterStarted[portOrRoleInstanceID] and receive(portOrRoleInstanceID,slaveReady)</label><label kind="synchronisation" x="130" y="215">hurry?</label><label kind="assignment" x="136" y="232">consume(portOrRoleInstanceID,slaveReady)</label></transition><transition><source ref="id6"/><target ref="id13"/><label kind="synchronisation" x="355" y="365">hurry?</label><label kind="assignment" x="355" y="380">RELATIVE[portOrRoleInstanceID] = 0</label></transition><transition><source ref="id11"/><target ref="id7"/><label kind="guard" x="355" y="275">slaveStarted[portOrRoleInstanceID]</label><label kind="synchronisation" x="355" y="290">hurry?</label><label kind="assignment" x="355" y="305">c0[portOrRoleInstanceID] = 0, 
send(portOrRoleInstanceID,slaveReady)</label><nail x="648" y="328"/></transition><transition><source ref="id11"/><target ref="id7"/><label kind="guard" x="355" y="275">not(slaveStarted[portOrRoleInstanceID])</label><label kind="synchronisation" x="355" y="290">hurry?</label><label kind="assignment" x="355" y="305">c0[portOrRoleInstanceID] = 0, 
slavePossible[portOrRoleInstanceID] = false, 
send(portOrRoleInstanceID,cannotSlave)</label></transition><transition><source ref="id7"/><target ref="id10"/><label kind="guard" x="568" y="480">slaveStarted[portOrRoleInstanceID] and receive(portOrRoleInstanceID,masterReady)</label><label kind="synchronisation" x="355" y="215">hurry?</label><label kind="assignment" x="355" y="230">consume(portOrRoleInstanceID,masterReady)</label></transition><transition><source ref="id13"/><target ref="id11"/><label kind="select" x="430" y="335">choice0   : int [0, 1]</label><label kind="guard" x="568" y="176">RELATIVE[portOrRoleInstanceID] &gt;= 50</label><label kind="assignment" x="430" y="380">slaveStarted[portOrRoleInstanceID] = choice0</label></transition></template><template><name>peer</name><parameter>  const peer_RANGE  portOrRoleInstanceID   		</parameter><declaration>
		
	</declaration><location id="id14" x="240" y="-88"><name x="230" y="-118">NoAssignment_ACTIVE_IN_peer</name></location><location id="id15" x="0" y="-88"><name x="-10" y="-118">MasterProposed_ACTIVE_IN_peer</name><label kind="invariant" x="-10" y="-73">c00[portOrRoleInstanceID] &lt;= 100</label></location><location id="id16" x="0" y="264"><name x="-10" y="234">StartingMaster_ACTIVE_IN_peer</name></location><location id="id17" x="0" y="448"><name x="-10" y="418">WaitForSlaveFinish_ACTIVE_IN_peer</name><label kind="invariant" x="-10" y="463">c00[portOrRoleInstanceID] &lt;= 100</label></location><location id="id18" x="592" y="-88"><name x="582" y="-118">AcceptSlave_ACTIVE_IN_peer</name><urgent/></location><location id="id19" x="592" y="472"><name x="582" y="442">WaitForMasterFinish_ACTIVE_IN_peer</name><label kind="invariant" x="582" y="487">c00[portOrRoleInstanceID] &lt;= 700</label></location><location id="id20" x="304" y="640"><name x="294" y="610">Failed_ACTIVE_IN_peer</name></location><location id="id21" x="0" y="632"><name x="-10" y="602">Master_ACTIVE_IN_peer</name></location><location id="id22" x="592" y="632"><name x="582" y="602">Slave_ACTIVE_IN_peer</name></location><location id="id23" x="592" y="240"><name x="582" y="210">StartingSlave_ACTIVE_IN_peer</name></location><location id="id24" x="0" y="160"><name x="-10" y="130">INTERMEDIATE1_ACTIVE_IN_peer</name><label kind="invariant" x="-10" y="175">RELATIVE0[portOrRoleInstanceID] &lt;= 50</label></location><location id="id25" x="592" y="80"><name x="582" y="50">INTERMEDIATE2_ACTIVE_IN_peer</name><label kind="invariant" x="582" y="95">RELATIVE0[portOrRoleInstanceID] &lt;= 50</label></location><init ref="id14"/><transition><source ref="id22"/><target ref="id22"/><label kind="synchronisation" x="544" y="680">finalMasterSlave?</label><nail x="552" y="680"/><nail x="640" y="680"/></transition><transition><source ref="id20"/><target ref="id20"/><label kind="synchronisation" x="272" y="664">finalFailed!</label><nail x="264" y="680"/><nail x="360" y="680"/></transition><transition><source ref="id21"/><target ref="id21"/><label kind="synchronisation" x="-56" y="680">finalMasterSlave!</label><nail x="-56" y="680"/><nail x="48" y="680"/></transition><transition><source ref="id15"/><target ref="id14"/><label kind="guard" x="-40" y="-192">receive(portOrRoleInstanceID,youSlave)</label><label kind="synchronisation" x="130" y="140">hurry?</label><label kind="assignment" x="-32" y="-240">consume(portOrRoleInstanceID,youSlave)
, 
c00[portOrRoleInstanceID] = 0</label><nail x="112" y="-176"/></transition><transition><source ref="id17"/><target ref="id14"/><label kind="guard" x="32" y="448">receive(portOrRoleInstanceID,cannotSlave)</label><label kind="synchronisation" x="205" y="65">hurry?</label><label kind="assignment" x="32" y="480">consume(portOrRoleInstanceID,cannotSlave), 
c00[portOrRoleInstanceID] = 0,
masterPossible0[portOrRoleInstanceID] = false</label><nail x="152" y="448"/></transition><transition><source ref="id17"/><target ref="id14"/><label kind="guard" x="-16" y="0">not(masterStarted0[portOrRoleInstanceID])
 and receive(portOrRoleInstanceID,slaveReady)</label><label kind="synchronisation" x="205" y="65">hurry?</label><label kind="assignment" x="8" y="72">consume(portOrRoleInstanceID,slaveReady)
, 
c00[portOrRoleInstanceID] = 0</label></transition><transition><source ref="id19"/><target ref="id14"/><label kind="guard" x="312" y="16">receive(portOrRoleInstanceID,cannotMaster)</label><label kind="synchronisation" x="205" y="215">hurry?</label><label kind="assignment" x="312" y="64">consume(portOrRoleInstanceID,cannotMaster), 
c00[portOrRoleInstanceID] = 0,
slavePossible0[portOrRoleInstanceID] = false</label></transition><transition><source ref="id19"/><target ref="id14"/><label kind="guard" x="632" y="256">not(slaveStarted0[portOrRoleInstanceID])
 and receive(portOrRoleInstanceID,masterReady)</label><label kind="synchronisation" x="205" y="215">hurry?</label><label kind="assignment" x="312" y="472">consume(portOrRoleInstanceID,masterReady)
, 
c00[portOrRoleInstanceID] = 0</label><nail x="424" y="472"/></transition><transition><source ref="id14"/><target ref="id15"/><label kind="guard" x="-176" y="-88">masterPossible0[portOrRoleInstanceID] and c00[portOrRoleInstanceID] &gt;= 50</label><label kind="assignment" x="16" y="-56">c00[portOrRoleInstanceID] = 0, 
send(portOrRoleInstanceID,youSlave)</label></transition><transition><source ref="id14"/><target ref="id20"/><label kind="guard" x="200" y="568">not(masterPossible0[portOrRoleInstanceID])
 and not(slavePossible0[portOrRoleInstanceID])</label><label kind="synchronisation" x="130" y="215">hurry?</label></transition><transition><source ref="id14"/><target ref="id18"/><label kind="guard" x="272" y="-144">slavePossible0[portOrRoleInstanceID] and receive(portOrRoleInstanceID,youSlave)</label><label kind="synchronisation" x="205" y="140">hurry?</label><label kind="assignment" x="304" y="-104">consume(portOrRoleInstanceID,youSlave)
, 
send(portOrRoleInstanceID,confirm)</label><nail x="408" y="-88"/></transition><transition><source ref="id15"/><target ref="id24"/><label kind="guard" x="-240" y="40">receive(portOrRoleInstanceID,confirm)</label><label kind="synchronisation" x="280" y="290">hurry?</label><label kind="assignment" x="-256" y="64">consume(portOrRoleInstanceID,confirm)
, 
RELATIVE0[portOrRoleInstanceID] = 0</label></transition><transition><source ref="id24"/><target ref="id16"/><label kind="select" x="-160" y="184">choice1   : int [0, 1]</label><label kind="guard" x="-272" y="200">RELATIVE0[portOrRoleInstanceID] &gt;= 50</label><label kind="assignment" x="-320" y="216">masterStarted0[portOrRoleInstanceID] = choice1</label></transition><transition><source ref="id16"/><target ref="id17"/><label kind="guard" x="-232" y="344">not(masterStarted0[portOrRoleInstanceID])</label><label kind="synchronisation" x="130" y="140">hurry?</label><label kind="assignment" x="-48" y="360">c00[portOrRoleInstanceID] = 0, 
masterPossible0[portOrRoleInstanceID] = false, 
send(portOrRoleInstanceID,cannotMaster)</label></transition><transition><source ref="id16"/><target ref="id17"/><label kind="guard" x="-304" y="312">masterStarted0[portOrRoleInstanceID]</label><label kind="synchronisation" x="130" y="140">hurry?</label><label kind="assignment" x="-312" y="368">c00[portOrRoleInstanceID] = 0, 
send(portOrRoleInstanceID,masterReady)</label><nail x="-72" y="352"/></transition><transition><source ref="id17"/><target ref="id21"/><label kind="guard" x="-336" y="552">masterStarted0[portOrRoleInstanceID] and receive(portOrRoleInstanceID,slaveReady)</label><label kind="synchronisation" x="130" y="215">hurry?</label><label kind="assignment" x="-288" y="528">consume(portOrRoleInstanceID,slaveReady)</label></transition><transition><source ref="id18"/><target ref="id25"/><label kind="synchronisation" x="355" y="365">hurry?</label><label kind="assignment" x="355" y="380">RELATIVE0[portOrRoleInstanceID] = 0</label></transition><transition><source ref="id23"/><target ref="id19"/><label kind="guard" x="696" y="312">slaveStarted0[portOrRoleInstanceID]</label><label kind="synchronisation" x="355" y="290">hurry?</label><label kind="assignment" x="355" y="305">c00[portOrRoleInstanceID] = 0, 
send(portOrRoleInstanceID,slaveReady)</label><nail x="712" y="368"/></transition><transition><source ref="id23"/><target ref="id19"/><label kind="guard" x="512" y="352">not(slaveStarted0[portOrRoleInstanceID])</label><label kind="synchronisation" x="355" y="290">hurry?</label><label kind="assignment" x="355" y="305">c00[portOrRoleInstanceID] = 0, 
slavePossible0[portOrRoleInstanceID] = false, 
send(portOrRoleInstanceID,cannotSlave)</label></transition><transition><source ref="id19"/><target ref="id22"/><label kind="guard" x="544" y="552">slaveStarted0[portOrRoleInstanceID] and receive(portOrRoleInstanceID,masterReady)</label><label kind="synchronisation" x="355" y="215">hurry?</label><label kind="assignment" x="355" y="230">consume(portOrRoleInstanceID,masterReady)</label></transition><transition><source ref="id25"/><target ref="id23"/><label kind="select" x="430" y="335">choice2   : int [0, 1]</label><label kind="guard" x="592" y="144">RELATIVE0[portOrRoleInstanceID] &gt;= 50</label><label kind="assignment" x="430" y="380">slaveStarted0[portOrRoleInstanceID] = choice2</label></transition></template><template><name>UrgencyProvider</name><declaration>
		
	</declaration><location id="id26" x="40" y="80"><name x="30" y="50">idle</name></location><init ref="id26"/><transition><source ref="id26"/><target ref="id26"/><label kind="synchronisation" x="-20" y="65">hurry!</label><nail x="10" y="50"/><nail x="70" y="50"/></transition></template><system>
			

peer_2 = peer2(0);

peer_1 = peer(1);

Connector_0_1 = Connector(0, 1, 10, 10, false, 2);

Connector_1_0 = Connector(1, 0, 10, 10, false, 2);


system Connector_0_1,Connector_1_0,peer_2,peer_1,UrgencyProvider;


		</system></nta>