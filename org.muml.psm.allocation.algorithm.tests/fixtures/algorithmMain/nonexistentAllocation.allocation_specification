testSpecificationName {

	nameProvider 'org.muml.psm.allocation.language.xtext.provider.MUMLNameProvider';
	storageProvider 'org.muml.psm.allocation.language.xtext.provider.MUMLStorageProvider';
	oclContext oclcontext::OCLContext;
	import 'http://www.muml.org/psm/allocation/language/oclcontext/1.0.0'
	
	relation {
		descriptors (first : pim::instance::ComponentInstance, second : hardware::hwresourceinstance::ResourceInstance);
		lower 1;
		upper 1;
		ocl self.componentInstanceConfiguration.componentInstances->product(
			self.hardwarePlatformInstanceConfiguration.resources
		);
	}

	constraint sameLocation foo {
		descriptors (a : pim::instance::ComponentInstance, b : pim::instance::ComponentInstance);
		ocl	let c1 : pim::instance::ComponentInstance = self.componentInstanceConfiguration.componentInstances->any(name='c1')
		in
		let c2 : pim::instance::ComponentInstance = self.componentInstanceConfiguration.componentInstances->any(name='c2')
		in
		Set{Tuple{a = c1, b = c2}};
	}
	
	constraint differentLocation bar {
		descriptors (a : pim::instance::ComponentInstance, b : pim::instance::ComponentInstance);
		ocl	let c1 : pim::instance::ComponentInstance = self.componentInstanceConfiguration.componentInstances->any(name='c1')
		in
		let c2 : pim::instance::ComponentInstance = self.componentInstanceConfiguration.componentInstances->any(name='c2')
		in
		Set{Tuple{a = c1, b = c2}};
	}
}
