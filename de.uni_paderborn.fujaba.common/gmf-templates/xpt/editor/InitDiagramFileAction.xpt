/*
 * Copyright (c) 2007, 2009 Borland Software Corporation and others
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Alexander Shatalin (Borland) - initial API and implementation
 *    Dmitry Stadnik (Borland) - rewritten in xpand
 */

«IMPORT 'http://www.eclipse.org/gmf/2009/GenModel'»

«EXTENSION xpt::editor::Utils»
«EXTENSION xpt::StringOperations»

«EXTENSION xpt::editor::GenDiagram»

«EXTENSION MetaModel»

«DEFINE InitDiagramFileAction(editorGen : gmfgen::GenEditorGenerator) FOR gmfgen::InitDiagramAction-»
«EXPAND InitDiagramFileAction(editorGen, qualifiedClassName)-»
«ENDDEFINE»

// HACK to deal with the InitDiagramAction instance being constructed at codegen time, and Ant being capable of supplying (existing!) target object only 
«DEFINE Hack FOR gmfgen::GenEditorGenerator-»
«EXPAND InitDiagramFileAction(self, diagram.getInitDiagramFileActionQualifiedClassName())-»
«ENDDEFINE»

«DEFINE InitDiagramFileAction(gmfgen::GenEditorGenerator editorGen, String qualifiedClassName) FOR OclAny-»
«EXPAND xpt::Common::copyright FOR editorGen-»
«EXPAND xpt::Common::packageStatement FOR qualifiedClassName»


«EXPAND xpt::Common::generatedClassComment»
public class «qualifiedClassName.xpandSplit('\\.')->last()» extends de.fujaba.newwizard.commands.AbstractCreateDiagramFileCommand {

	«EXPAND xpt::Common::generatedMemberComment»
	@Override
	public void setCharset(org.eclipse.core.resources.IFile diagramFile) {
		«editorGen.diagram.getDiagramEditorUtilQualifiedClassName()».setCharset(diagramFile);
	}

	«EXPAND xpt::Common::generatedMemberComment»
	@Override
	public String getUniqueFilename(String hint, String extension,
			org.eclipse.core.runtime.IPath filePath) {
		return «editorGen.diagram.getDiagramEditorUtilQualifiedClassName()»
				.getUniqueFileName(filePath, hint, extension);
	}

	«EXPAND xpt::editor::FujabaEditorDescription::description FOR editorGen»

}
«ENDDEFINE»

«DEFINE i18nAccessors FOR gmfgen::GenDiagram-»
«EXPAND xpt::Externalizer::accessorField(titleKey(i18nKeyForInitDiagramFileResourceErrorDialog()))-»
«EXPAND xpt::Externalizer::accessorField(messageKey(i18nKeyForInitDiagramFileResourceErrorDialog()))-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForInitDiagramFileWizardTitle())-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForInitDiagramOpenFileDialogTitle())-»
«ENDDEFINE»

«DEFINE i18nValues FOR gmfgen::GenDiagram-»
«EXPAND xpt::Externalizer::messageEntry(titleKey(i18nKeyForInitDiagramFileResourceErrorDialog()), 'Error')-»
«EXPAND xpt::Externalizer::messageEntry(messageKey(i18nKeyForInitDiagramFileResourceErrorDialog()), 'Model file loading failed')-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForInitDiagramFileWizardTitle(), 'Initialize new {0} diagram file')-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForInitDiagramOpenFileDialogTitle(), 'Select domain model')-»
«ENDDEFINE»
