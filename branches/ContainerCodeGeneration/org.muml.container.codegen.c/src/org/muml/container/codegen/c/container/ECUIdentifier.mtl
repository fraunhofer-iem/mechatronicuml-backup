[comment encoding = UTF-8 /]
[**
 * This module contains all templates, that are used to generate the Configuration-files
 * for a given Container.
 */]
[module ECUIdentifier('http://www.muml.org/pim/connector/1.0.0',
				'http://www.muml.org/pim/behavior/1.0.0',
				'http://www.muml.org/core/1.0.0',
				'http://www.muml.org/pim/actionlanguage/1.0.0',
				'http://www.muml.org/core/expressions/common/1.0.0',
				'http://www.muml.org/pim/msgtype/1.0.0',
				'http://www.muml.org/pim/types/1.0.0',
				'http://www.muml.org/modelinstance/1.0.0',
				'http://www.muml.org/pim/component/1.0.0',
				'http://www.muml.org/pim/instance/1.0.0',
				'http://www.muml.org/pim/realtimestatechart/1.0.0',
				'http://www.muml.org/psm/1.0.0',
				'http://www.muml.org/psm/muml_container/0.5.0',
				'http://www.opendds.org/modeling/schemas/DCPS/1.0',
				'http://www.opendds.org/modeling/schemas/Core/1.0',
				'http://www.opendds.org/modeling/schemas/Application/1.0',
				'http://www.opendds.org/modeling/schemas/Topics/1.0')/]

[import org::muml::codegen::componenttype::c::queries::ContainerQueries/]


[import org::muml::container::codegen::c::queries::containerStringQueries/]
[import org::muml::codegen::componenttype::c::queries::stringQueries/]

[template public generateECUIdentifier(ecuConfig:ECUConfiguration, useSubDir:Boolean, path:String)]
	[file (path+getFileNameECU_Identifier(), false, 'UTF-8')]
		#ifndef ECU_IDENTIFIER_H
		#define ECU_IDENTIFIER_H
			
			// code for ECU Config [ecuConfig.name/]
/**
*
*@brief Identifier for Messages used on [ecuConfig.name/]
*@details Identifier to Identy Local Messages
*/
			//Identifier for Messages used on this ECU
			[let discretePorts : Bag(DiscretePort) = ecuConfig.componentContainers.componentType->filter(AtomicComponent).ports->filter(DiscretePort)]
				[comment make ordered set to avoid duplicated message declartio/]
				[let messages : OrderedSet(MessageType) = discretePorts.senderMessageTypes->union(discretePorts.receiverMessageTypes)->asOrderedSet() ]
					[for (message : MessageType | messages)]
					#define [message.getIdentifierVariableName()/] [i/] /**< ECU Identifier: For the Message-Type: [message.name/] */
					[/for]
				[/let]
			[/let]

			//Identifier for ComponentInstances
/**
*
*@brief Identifier to distinguish Component Instance on ECU [ecuConfig.name/]
*@details Used by a component container to identify component instances of the same component type
*/
			[let cis : Bag(ComponentInstance) = ecuConfig.componentContainers.componentInstances]
				[for (ci : ComponentInstance | cis)]
					#define [ci.getIdentifierVariableName()/] [i/] /**< Identifier for Component Instance [ci.name/] */
				[/for]
			[/let]
			
		#endif /* ECU_IDENTIFIER_H */
	[/file]
[/template]