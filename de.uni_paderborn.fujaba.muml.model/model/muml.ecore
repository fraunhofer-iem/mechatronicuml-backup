<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="muml"
    nsURI="http://www.fujaba.de/muml/0.2.3" nsPrefix="muml">
  <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
    <details key="documentation" value="This package is the base package for all MechatronicUML models, editors &#xD;&#xA;and algorithms. Plugins contributing to MechatronicUML should use &#xD;&#xA;de.uni_paderborn.fujaba.muml as a base package."/>
  </eAnnotations>
  <eSubpackages name="model" nsURI="http://www.fujaba.de/muml/model/0.2.3" nsPrefix="model">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="The model package contains the core meta-model of MechatronicUML. The&#xD;&#xA;subpackages define the base classes for the component model, real-time &#xD;&#xA;statecharts, message interfaces and coordination pattern."/>
    </eAnnotations>
    <eSubpackages name="component" nsURI="http://www.fujaba.de/muml/model/component/0.2.3"
        nsPrefix="component">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
        <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
        <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
        <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The package components contains all classes for modeling atomic and structured components.&#xD;&#xA;Components are defined on the type level and may be instantiated in a component instance configuration."/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Component" abstract="true" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//NamedElement ../../org.storydriven.modeling/model/sdm.ecore#//CommentableElement #//model/core/ConstrainableElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This abstract class is the super class of all classes representing a concrete component type such as a structured, atomic or a continuous component.&#xA;&#xA;Component types are implemented as a variation of the composite design pattern. Concerning the composite pattern this class represents the role &quot;component&quot;."/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="UniquePortNames"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="UniquePortNames" value="self.ports->isUnique(name)"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="ports" upperBound="-1"
            eType="#//model/component/Port" containment="true" eOpposite="#//model/component/Port/component">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The ports of a component represent the interaction points between the component and its environment."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="referencingComponentParts"
            upperBound="-1" eType="#//model/component/ComponentPart" eOpposite="#//model/component/ComponentPart/componentType">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This association contains all component parts which have this component as their type."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="componentType" eType="#//model/component/ComponentKind">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This attribute specifies the kind of the component. A component may be either&#xD;&#xA;discrete software component, a continuous component, a hybrid component &#xD;&#xA;or a hardware component."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Port" abstract="true" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//NamedElement ../../org.storydriven.modeling/model/sdm.ecore#//CommentableElement #//model/core/ConstrainableElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Ports represent the interaction points between a component and the components environment."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="cardinality" lowerBound="1"
            eType="#//model/core/Cardinality" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The cardinality of a port specifies how many instances of a port are allowed to exist at runtime."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="incomingConnectors"
            upperBound="-1" eType="#//model/component/ConnectorType" eOpposite="#//model/component/ConnectorType/toPort">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The connectors which lead into this port."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="outgoingConnectors"
            upperBound="-1" eType="#//model/component/ConnectorType" eOpposite="#//model/component/ConnectorType/fromPort">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The connectors which originate from this port."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="component" eType="#//model/component/Component"
            eOpposite="#//model/component/Component/ports">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The component, this port belongs to. Theoretically the bounds&#xA;should be 1..1, but that would prevent the possibility for&#xA;ComponentPart.portsDerived to be a containment reference&#xA;(see ComponentPart.portsDerived)"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="connectors" upperBound="-1"
            eType="#//model/component/ConnectorType" changeable="false" volatile="true"
            transient="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="self.incomingConnectors -> union(self.outgoingConnectors)"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ContinuousPort" eSuperTypes="#//model/component/Port">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a concrete port specification which provides the continuous functionality of a port.&#xD;&#xA;\todosd{Add attributes and references in future releases.}"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="LowerBoundMustBeZeroOrOne UpperBoundMustBeOne"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="LowerBoundMustBeZeroOrOne" value="-- This Constraint is fulfilled, if no Cardinality exists.&#xA;-- But that is okay, as then another Problem-Marker is shown,&#xA;-- because Cardinality.lowerBound is 1..1&#xA;self.cardinality.oclIsUndefined() or (&#xA;&#x9;if self.cardinality.lowerBound.oclIsUndefined() then&#xA;&#x9;&#x9;false&#xA;&#x9;else&#xA;&#x9;&#x9;self.cardinality.lowerBound.value = 0 or self.cardinality.lowerBound.value = 1&#xA;&#x9;endif&#xA;)"/>
          <details key="UpperBoundMustBeOne" value="-- This Constraint is fulfilled, if no Cardinality exists.&#xA;-- But that is okay, as then another Problem-Marker is shown,&#xA;-- because Cardinality.upperBound is 1..1&#xA;self.cardinality.oclIsUndefined() or (&#xA;&#x9;if self.cardinality.upperBound.oclIsUndefined() then&#xA;&#x9;&#x9;false&#xA;&#x9;else&#xA;&#x9;&#x9;self.cardinality.upperBound.value = 1&#xA;&#x9;endif&#xA;)"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" lowerBound="1"
            eType="#//model/component/ContinuousPortDirectionKind">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Decides the direction of a continous port."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
            eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EDataType"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DiscretePort" eSuperTypes="#//model/component/Port #//model/core/BehavioralElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a concrete port specification which provides the discrete functionality of a port."/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="AtLeastOneMessageInterface"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="AtLeastOneMessageInterface" value="self.oclIsTypeOf(component::DiscretePort) implies (not (self.senderMessageInterface.oclIsUndefined() and self.receiverMessageInterface.oclIsUndefined()))"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="refines" eType="#//model/pattern/Role"
            eOpposite="#//model/pattern/Role/port">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The role of a coordination pattern that this port refines."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="senderMessageInterface"
            eType="#//model/msgiface/MessageInterface">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The sender message interface defines which messages this discrete port specification sends."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="receiverMessageInterface"
            eType="#//model/msgiface/MessageInterface">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The receiver message interface defines which messages this discrete port specification receives."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="adaptationBehavior"
            eType="#//model/core/Behavior"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="roleAndAdaptationBehavior"
            eType="#//model/core/Behavior"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ComponentPart" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//CommentableElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="CardinalityLowerBoundSet TypeNotEqualToParent CardinalityUpperBoundSet"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a component part. Component parts are used to specify&#xD;&#xA;the inner structure of a structured component. A component part represents&#xD;&#xA;another component that is embedded in a  structured &#xD;&#xA;component. It is specified on the model level and is &#xD;&#xA;always typed over a component (either structured or atomic)."/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="CardinalityLowerBoundSet" value="self.cardinality.lowerBound->notEmpty()"/>
          <details key="TypeNotEqualToParent" value="self.componentType &lt;> self.parentComponent"/>
          <details key="CardinalityUpperBoundSet" value="self.cardinality.upperBound->notEmpty()"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="componentType" lowerBound="1"
            eType="#//model/component/Component" eOpposite="#//model/component/Component/referencingComponentParts">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The component type typing this component part."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="parentComponent" lowerBound="1"
            eType="#//model/component/StructuredComponent" eOpposite="#//model/component/StructuredComponent/embeddedParts">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The structured component type containing this component part."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="fromRev" upperBound="-1"
            eType="#//model/component/Assembly" eOpposite="#//model/component/Assembly/from">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The assemblies originating in port parts of this component part."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="toRev" upperBound="-1"
            eType="#//model/component/Assembly" eOpposite="#//model/component/Assembly/to">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The assemblies leading to port parts of this component part."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="delegation" upperBound="-1"
            eType="#//model/component/Delegation" eOpposite="#//model/component/Delegation/componentPart">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The delegations connecting a port part of this component part with a port of the parent component type."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="cardinality" lowerBound="1"
            eType="#//model/core/Cardinality" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The cardinality of a ComponentPart specifies how many instances of a ComponentPart are allowed to exist at runtime."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="portsDerived" upperBound="-1"
            eType="#//model/component/Port" changeable="false" volatile="true" transient="true"
            unsettable="true" derived="true" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="if componentType.oclIsUndefined() then&#xD;&#xA;&#x9;OrderedSet { }&#xD;&#xA;else&#xD;&#xA;&#x9;componentType.ports&#xD;&#xA;endif"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The ports of this part. They are derived from the ports of the&#xD;&#xA;componentType of this component part. It is a containment&#xD;&#xA;reference, so that GMF is able to let them flow around the&#xD;&#xA;component.&#xD;&#xA;Because this feature is derived, transient, volatile the model file&#xD;&#xA;will not store the ports in this feature."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="StructuredComponent" eSuperTypes="#//model/component/Component">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a structured component which is capable of including arbitraryly many component parts.&#xD;&#xA;&#xD;&#xA;Component types are implemented as a variation of the composite design pattern. &#xD;&#xA;Concerning the composite pattern this class represents the role &quot;composite&quot;. &#xD;&#xA;However structured components do not contain component types directly like &#xD;&#xA;in the original composite pattern. Instead they contain component parts which &#xD;&#xA;are typed by component types. The reason for this is to get a clear distinction&#xD;&#xA; between the component type level and the component instance level."/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="UniqueComponentPartsWithinStructuredComponent"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="UniqueComponentPartsWithinStructuredComponent" value="self.embeddedParts->isUnique(p | p.componentType)"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="embeddedParts" lowerBound="1"
            upperBound="-1" eType="#//model/component/ComponentPart" containment="true"
            eOpposite="#//model/component/ComponentPart/parentComponent">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The component parts this structured component contains."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="connectors" upperBound="-1"
            eType="#//model/component/ConnectorType" containment="true" eOpposite="#//model/component/ConnectorType/parentComponent">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The connectors this structured component contains. These can either be delegations or assemblies."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="AtomicComponent" eSuperTypes="#//model/component/Component #//model/core/BehavioralElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents an atomic component. Atomic components must not be further sub-divided into component parts. In contrast to structured components atomic components own a behavior in form of a realtime statechart.&#xA;&#xA;The different component types are implemented as a variation of the composite design pattern. Concerning the composite pattern this class represents the role &quot;leaf&quot;."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ConnectorType" abstract="true" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//ExtendableElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This abstract class is the common super class of delegations and assemblies."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="fromPort" lowerBound="1"
            eType="#//model/component/Port" eOpposite="#//model/component/Port/outgoingConnectors">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The port this connector originates from."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="toPort" lowerBound="1"
            eType="#//model/component/Port" eOpposite="#//model/component/Port/incomingConnectors">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The port this connector leads to."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="parentComponent" eType="#//model/component/StructuredComponent"
            eOpposite="#//model/component/StructuredComponent/connectors">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The structured component this connector belongs to."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Assembly" eSuperTypes="#//model/component/BehavioralConnector">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents an assembly connector. Assembly connectors connect the port parts of two component parts."/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="ValidDiscretePortDiscretePortConnection NoSelfAssembliesForSinglePorts ValidContinuousPortDirections"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="ValidDiscretePortDiscretePortConnection" value="if not self.fromPort.oclIsUndefined() and not self.toPort.oclIsUndefined() then&#xA;    if self.fromPort.oclIsKindOf(component::DiscretePort) and self.toPort.oclIsKindOf(component::DiscretePort) then&#xA;        -- check compatibility of message interfaces&#xA;        let fromPort : component::DiscretePort = self.fromPort.oclAsType(component::DiscretePort) in&#xA;        let toPort : component::DiscretePort = self.toPort.oclAsType(component::DiscretePort) in&#xA;        fromPort.senderMessageInterface = toPort.receiverMessageInterface &#xA;        and fromPort.receiverMessageInterface = toPort.senderMessageInterface&#xA;        and (&#xA;            -- check refines&#xA;            if fromPort.refines.oclIsUndefined() xor toPort.refines.oclIsUndefined() then&#xA;                -- only one port has a refinement&#xA;                false&#xA;            else&#xA;                fromPort.refines.oclIsUndefined() &#xA;                -- both ports have a refinement&#xA;                or fromPort.refines.coordinationPattern = toPort.refines.coordinationPattern&#xA;                -- this check is sufficient&#xA;                and not fromPort.refines.coordinationPattern.oclIsUndefined()&#xA;                and (&#xA;                    if fromPort.refines.coordinationPattern.roles->size() = 2 then&#xA;                        fromPort.refines.name &lt;> toPort.refines.name&#xA;                    else&#xA;                        -- both ports have the same role and belong the same pattern&#xA;                        true&#xA;                    endif&#xA;                )&#xA;            endif&#xA;        )&#xA;    else&#xA;        -- this case must be checked by other constraints&#xA;        true&#xA;    endif&#xA;else&#xA;    false&#xA;endif"/>
          <details key="NoSelfAssembliesForSinglePorts" value="self.fromPort.cardinality.upperBound.value &lt;= 1&#xD;&#xA;implies&#xD;&#xA;self.fromPort &lt;> self.toPort"/>
          <details key="ValidContinuousPortDirections" value="not self.fromPort.oclIsUndefined() and self.fromPort.oclIsKindOf(component::ContinuousPort) and&#xA;not self.toPort.oclIsUndefined() and self.toPort.oclIsKindOf(component::ContinuousPort)&#xA;implies&#xA;self.fromPort.oclAsType(component::ContinuousPort).kind &lt;> self.toPort.oclAsType(component::ContinuousPort).kind"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="to" lowerBound="1"
            eType="#//model/component/ComponentPart" eOpposite="#//model/component/ComponentPart/toRev">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The component part of the port part to which this assembly leads."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="from" lowerBound="1"
            eType="#//model/component/ComponentPart" eOpposite="#//model/component/ComponentPart/fromRev">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The component part of the port part from which this assembly originates."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="coordinationPattern"
            lowerBound="1" eType="#//model/pattern/CoordinationPattern">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The coordination pattern that defines the protocol of this assembly."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Delegation" eSuperTypes="#//model/component/ConnectorType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a delegation connector. A delegation connector &#xD;&#xA;connects a port of a structured component type and a port part of &#xD;&#xA;component part the structured component contains.&#xD;&#xA;The delegation has no behavior. In a running system, the port of the structured&#xD;&#xA;component and the port of the component part will be the same object like &#xD;&#xA;interfaces of classes where interface and class are the same object at runtime."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="componentPart" lowerBound="1"
            eType="#//model/component/ComponentPart" eOpposite="#//model/component/ComponentPart/delegation">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The component part of the port part which is connected by this delegation."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EEnum" name="ComponentKind">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The entries of the enumeration represent different kinds of components. These&#xD;&#xA;are discrete software components, continous components containing controller&#xD;&#xA;code, and hybrid components that is a discrete software component which may have &#xD;&#xA;continuous input signals."/>
        </eAnnotations>
        <eLiterals name="SOFTWARE_COMPONENT" literal="software component">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A component of this kind represent discrete software components. A discrete software component has a behavior specification which is given by means of a real-time statechart."/>
          </eAnnotations>
        </eLiterals>
        <eLiterals name="CONTINUOUS_COMPONENT" value="1" literal="continuous component">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A continuous component represents a continuous controller. Such components do not carry a behavior specification in MechatronicUML. Instead, we assume that the behavior of such components is modeled by using a control engineering tool like Matlab/Simulink, Dymola/Modelica or CamelView. In MechatronicUML, only the interface of these components is modeled. The interface is given by their ports."/>
          </eAnnotations>
        </eLiterals>
        <eLiterals name="HYBRID_COMPONENT" value="2" literal="hybrid component">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A hybrid component bridges the gap between discrete software components and continuous control components. A hybrid component may be considered as a discrete software component which has special ports for reading and writing continuous signals from and to continuous components, e.g., for setting a new reference value to a controller."/>
          </eAnnotations>
        </eLiterals>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="BehavioralConnector" abstract="true"
          eSuperTypes="#//model/component/ConnectorType #//model/core/BehavioralElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Abstract super class for all connectors that have an associated behavior. The &#xD;&#xA;behavior is specified as a real-time statechart."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="HybridPort" eSuperTypes="#//model/component/DiscretePort #//model/component/ContinuousPort">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a hybrid port which acts as a A/D or an D/A converter.&#xD;&#xA;\todosd{Add attributes and references in future releases.}"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="LowerBoundMustBeZeroOrOne UpperBoundMustBeOne"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="LowerBoundMustBeZeroOrOne" value="-- This Constraint is fulfilled, if no Cardinality exists.&#xA;-- But that is okay, as then another Problem-Marker is shown,&#xA;-- because Cardinality.lowerBound is 1..1&#xA;self.cardinality.oclIsUndefined() or (&#xA;&#x9;if self.cardinality.lowerBound.oclIsUndefined() then&#xA;&#x9;&#x9;false&#xA;&#x9;else&#xA;&#x9;&#x9;self.cardinality.lowerBound.value = 0 or self.cardinality.lowerBound.value = 1&#xA;&#x9;endif&#xA;)"/>
          <details key="UpperBoundMustBeOne" value="-- This Constraint is fulfilled, if no Cardinality exists.&#xA;-- But that is okay, as then another Problem-Marker is shown,&#xA;-- because Cardinality.upperBound is 1..1&#xA;self.cardinality.oclIsUndefined() or (&#xA;&#x9;if self.cardinality.upperBound.oclIsUndefined() then&#xA;&#x9;&#x9;false&#xA;&#x9;else&#xA;&#x9;&#x9;self.cardinality.upperBound.value = 1&#xA;&#x9;endif&#xA;)"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EEnum" name="ContinuousPortDirectionKind">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Decides the direction of a continous port."/>
        </eAnnotations>
        <eLiterals name="IN">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Represent an IN-Port of a continous port."/>
          </eAnnotations>
        </eLiterals>
        <eLiterals name="OUT" value="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Represent an OUT-Port of a continous port."/>
          </eAnnotations>
        </eLiterals>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="constraint" nsURI="http://www.fujaba.de/muml/model/constraint/0.2.3"
        nsPrefix="constraint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The package constraint provides abstract super classes for modeling different&#xD;&#xA;kinds of constraints that may be attached to ConstrainableElements of the&#xD;&#xA;MechatronicUML meta-model. "/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Constraint" abstract="true" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//ExtendableElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a constraint. A constraint defines certain properties a system has to fullfill. In terms of model checking a constraint represents the specification of the system."/>
        </eAnnotations>
        <eOperations name="isCorrect" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This operation yields &quot;true&quot; if and only if this.correctness == Correctness.CORRECT holds."/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="correctness" eType="#//model/constraint/Correctness"
            defaultValueLiteral="Correctness.UNKNOWN">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The correctness of this constraint encoded as a literal of the enum type &quot;Correctness&quot;."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="background" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This attribute decides whether background checking is activated for this constraint. If it is activated the correctness of the constraint is checked whenever the model changes. These checks are performed in the background such that user interaction is not interrupted."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="constrainableElement"
            lowerBound="1" eType="#//model/core/ConstrainableElement" eOpposite="#//model/core/ConstrainableElement/constraint">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The element this constraint applies to."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EEnum" name="Correctness">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This enumeration encodes the correctness result of a constraint. The correctness&#xD;&#xA;is UNKNOWN if the constraint has not yet been verified or if the verification failed&#xD;&#xA;for some reason. The constraint is CORRECT, if the verification returned true.&#xD;&#xA;Otherwise the constraint is VIOLATED."/>
        </eAnnotations>
        <eLiterals name="UNKNOWN" literal="unknown"/>
        <eLiterals name="CORRECT" value="1" literal="correct"/>
        <eLiterals name="VIOLATED" value="2" literal="violated"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ModelingConstraint" abstract="true"
          eSuperTypes="#//model/constraint/Constraint">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A modeling constraint is a static semantics constraint that restricts the model.&#xD;&#xA;It can be checked statically and will not be used for verification."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="VerifiableConstraint" abstract="true"
          eSuperTypes="#//model/constraint/Constraint">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A verifiable constraint is a dynamic semantics constraint that will be used for&#xD;&#xA;verification of the model. This class serves as a super class for all types of &#xD;&#xA;verifiable constraints."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TextualConstraint" eSuperTypes="#//model/constraint/VerifiableConstraint ../../org.storydriven.modeling/model/sdm.ecore#//ExtendableElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents all verifable constraints that can be entered as a string in a predefined&#xD;&#xA;constraint language like, e.g., CTL or TCTL. Therefore, it contains a textual expression&#xD;&#xA;which is used to store the constraint text and the language."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="textualExpression"
            eType="ecore:EClass ../../org.storydriven.modeling/model/sdm.ecore#//expressions/TextualExpression"
            containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A textual expression which stores the constraint text and the language in which &#xD;&#xA;the constraint is specified."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="core" nsURI="http://www.fujaba.de/muml/model/core/0.2.3" nsPrefix="core">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="This package contains several core classes that are used by classes from several other packages.&#xD;&#xA;It provides abstract base classes for Statecharts, meta-model elements that use a statechart to&#xD;&#xA;define their behavior and meta-model elements that may carry a constraint.&#xD;&#xA;Additionally, the package provides classes for modeling cardinalites as natural numbers including&#xD;&#xA;infinity."/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
        <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
        <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
        <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="NaturalNumber">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents either a natural number or infinity.&#xD;&#xA;TODO-SD: Do we really need that class?"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="ValueGreaterOrEqualZero"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="ValueGreaterOrEqualZero" value="self.value >= 0"/>
        </eAnnotations>
        <eOperations name="setValue">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Set the value to the value of the given parameter."/>
          </eAnnotations>
          <eParameters name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eOperations>
        <eOperations name="longValue" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//ELong">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This operation yields the value of this natural number as a long value."/>
          </eAnnotations>
        </eOperations>
        <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This operation yields the value of this natural number in a string representation."/>
          </eAnnotations>
        </eOperations>
        <eOperations name="equals" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eParameters name="o" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//ELong"
            defaultValueLiteral="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The value of this natural number."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="infinity" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
            defaultValueLiteral="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Determins whether this natural number represents infinity."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Cardinality">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents the cardinality of an arbitrary model object. It consists of a lower and an upper bound."/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="LowerBoundMustBeLessOrEqualThanUpperBound"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="LowerBoundMustBeLessOrEqualThanUpperBound" value="((self.lowerBound.value &lt;= self.upperBound.value) and self.lowerBound.infinity=false and self.upperBound.infinity=false) or (self.lowerBound.infinity=true and self.upperBound.infinity=true)"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="lowerBound" lowerBound="1"
            eType="#//model/core/NaturalNumber" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The lower bound of this cardinality."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="upperBound" lowerBound="1"
            eType="#//model/core/NaturalNumber" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The upper bound of this cardinality."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="BehavioralElement" abstract="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Abstract super class for all elements that have a behavior."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="behavior" eType="#//model/core/Behavior"
            eOpposite="#//model/core/Behavior/behavioralElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The real-time statechart that defines the behavior of this behavioral element."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ConstrainableElement" abstract="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Abstract super class for all model elements that may carry a constraint."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="constraint" upperBound="-1"
            eType="#//model/constraint/Constraint" containment="true" eOpposite="#//model/constraint/Constraint/constrainableElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The constraint for this element."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Behavior" abstract="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Abstract super class for all elements that represent a behavior. &#xD;&#xA;Known sub-classes: AbstractRealtimeStatechart"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="behavioralElement"
            eType="#//model/core/BehavioralElement" eOpposite="#//model/core/BehavioralElement/behavior">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The behavioral element this statechart belongs to."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="operations" upperBound="-1"
            eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EOperation"
            containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A behavior may define a set of EOperations as signatures of helper functions. These operations&#xD;&#xA;may be called by the behavior specification and may access the attributes of&#xD;&#xA;the behavior specification. The EOperations are contained in the behavior."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="attributes" upperBound="-1"
            eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EAttribute"
            containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A behavior may define a set of EAttributes in order to store data. The attributes&#xD;&#xA;may be used by the operations of the behavior and the behavior specification itself.&#xD;&#xA;The attributes are contained in the behavior."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ActivityCallExpression" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//calls/Invocation ../../org.storydriven.modeling/model/sdm.ecore#//expressions/Expression">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An Expression that represents an activity."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="activity" ordered="false"
            lowerBound="1" eType="ecore:EClass ../../org.storydriven.modeling/model/sdm.ecore#//activities/Activity">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the exception variable that this expression refers to. If you have an activity edge that catches an exception e, then this expression can represent the reference e."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="instance" nsURI="http://www.fujaba.de/muml/model/instance/0.2.3"
        nsPrefix="instance">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
        <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
        <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
        <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The package instance contains all classes for building configurations of component instances.&#xD;&#xA;&#xD;&#xA;Component instances are built from component types and connected by connectors. The resulting structure is a component instance configuration."/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="ComponentInstance" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//NamedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a component instance. It is an instantiation of a component."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="componentType" lowerBound="1"
            eType="#//model/component/Component">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The component type of which this instance is derived."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="embeddedCIC" eType="#//model/instance/ComponentInstanceConfiguration"
            containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The component instances and connector instances that are embedded in this component instance&#xD;&#xA;are contained by the component instance configuration."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="portInstances" upperBound="-1"
            eType="#//model/instance/PortInstance" containment="true" eOpposite="#//model/instance/PortInstance/componentInstance">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The port instances that belong to this component instance."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ConnectorInstance" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//ExtendableElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class is the common super class of delegation instances and assemly instances."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="source" lowerBound="1"
            eType="#//model/instance/PortInstance" eOpposite="#//model/instance/PortInstance/outgoingConnectorInstances">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The port instance this connector instance originates from."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
            eType="#//model/instance/PortInstance" eOpposite="#//model/instance/PortInstance/incomingConnectorInstances">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The port instance this connector instance leads to."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="connectorType" eType="#//model/component/ConnectorType">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The connector type of this connector instance."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="PortInstance" abstract="true" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//NamedElement ../../org.storydriven.modeling/model/sdm.ecore#//CommentableElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A port instance is a port of a component at instance level."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="portType" lowerBound="1"
            eType="#//model/component/Port">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The port type of which this port instance is built from."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="componentInstance"
            eType="#//model/instance/ComponentInstance" eOpposite="#//model/instance/ComponentInstance/portInstances">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The component instance this port instance belongs to."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="incomingConnectorInstances"
            upperBound="-1" eType="#//model/instance/ConnectorInstance" eOpposite="#//model/instance/ConnectorInstance/target">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The connector instances that lead into this port instance."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="outgoingConnectorInstances"
            upperBound="-1" eType="#//model/instance/ConnectorInstance" eOpposite="#//model/instance/ConnectorInstance/source">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The connector instances that origin from this port instance."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="connectorInstances"
            upperBound="-1" eType="#//model/instance/ConnectorInstance" volatile="true"
            transient="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="self.incomingConnectorInstances -> union(self.outgoingConnectorInstances )"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="AssemblyInstance" eSuperTypes="#//model/instance/ConnectorInstance">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents an assembly connector at instance level."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="assemblyType" eType="#//model/component/Assembly"
            changeable="false" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The assembly that this assembly instance is built from."/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="connectorType.oclAsType(component::Assembly)"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="propagationDelayLowerBound"
            eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EInt"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="propagationDelayUpperBound"
            eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EInt"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DelegationInstance" eSuperTypes="#//model/instance/ConnectorInstance">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a delegation connector at instance level."/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="OneDelegationInstancePerPortInstance"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="OneDelegationInstancePerPortInstance" value="not self.source.oclIsUndefined() implies self.source.outgoingConnectorInstances->select(x | x.oclIsKindOf(DelegationInstance))->size() = 1"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="delegationType" eType="#//model/component/Delegation"
            changeable="false" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The delegation type of this delegation instance."/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="connectorType.oclAsType(component::Delegation)"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ComponentInstanceConfiguration"
          eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//ExtendableElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class encapsules represents a configuration.&#xD;&#xA;&#xD;&#xA;It contains all component instances and connector instances that belong to a concrete configuration.&#xD;&#xA;&#xD;&#xA;\todosd{implement ocl derived for parent port isntances derived}"/>
        </eAnnotations>
        <eOperations name="getParentPortInstances" upperBound="-1" eType="#//model/instance/PortInstance">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="if(eContainer() instanceof ComponentInstance){&#xD;&#xA;&#x9;return ((ComponentInstance)eContainer()).getPortInstances();&#xD;&#xA;}&#xD;&#xA;return new org.eclipse.emf.common.util.BasicEList&lt;PortInstance>();&#xD;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="componentInstances"
            upperBound="-1" eType="#//model/instance/ComponentInstance" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The set of component instances of a component instance configuration."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="connectorInstances"
            upperBound="-1" eType="#//model/instance/ConnectorInstance" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The set of connector instances of a component instance configuration."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="parentPortInstancesDerived"
            upperBound="-1" eType="#//model/instance/PortInstance" changeable="false"
            volatile="true" transient="true" unsettable="true" derived="true" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="getParentPortInstances()&#xD;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The port instances of the component instance which is&#xD;&#xA;containing this component instance configuration are derived."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ContinuousPortInstance" eSuperTypes="#//model/instance/PortInstance">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a continuous port at instance level. The port type of a&#xD;&#xA;continuous port instance must be a continuous port."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="HybridPortInstance" eSuperTypes="#//model/instance/DiscretePortInstance #//model/instance/ContinuousPortInstance">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a hybrid port at instance level. The port type of a hybrid &#xD;&#xA;port instance must be a hybrid port."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DiscretePortInstance" abstract="true"
          eSuperTypes="#//model/instance/PortInstance">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a discrete port at instance level. At instance level, we &#xD;&#xA;distinguish between single-port instances and multi-port instances by using&#xD;&#xA;two subclasses of this abstract class."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="receiverMessageInterface"
            eType="#//model/msgiface/MessageInterface" changeable="false" volatile="true"
            transient="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="if portType.oclIsUndefined() or not portType.oclIsKindOf(component::DiscretePort) then&#xA;&#x9;null&#xA;else&#xA;&#x9;portType.oclAsType(component::DiscretePort).receiverMessageInterface&#xA;endif"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The receiver message interface defines which messages this port instance receives&#xD;&#xA;It is derived from the receiver message interface of its port.&#xD;&#xA;\todosd{ocl: implement derived}"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="senderMessageInterface"
            eType="#//model/msgiface/MessageInterface" changeable="false" volatile="true"
            transient="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="if portType.oclIsUndefined() or not portType.oclIsKindOf(component::DiscretePort) then&#xA;&#x9;null&#xA;else&#xA;&#x9;portType.oclAsType(component::DiscretePort).senderMessageInterface&#xA;endif"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The sender message interface defines which messages this port instance sends.&#xD;&#xA;It is derived from the sender message interface of its port.&#xD;&#xA;\todosd{ocl: implement derived}"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DiscreteSinglePortInstance" eSuperTypes="#//model/instance/DiscretePortInstance">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a discrete single port at instance level as well as a sub-port instance&#xD;&#xA;of a multi-port instance. Each single port instance references its behavior instance.&#xD;&#xA;When used as a sub-port instance, the instance references its role behavior instance. "/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="multiPortInstance"
            eType="#//model/instance/DiscreteMultiPortInstance" eOpposite="#//model/instance/DiscreteMultiPortInstance/subPortInstances"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DiscreteMultiPortInstance" eSuperTypes="#//model/instance/DiscretePortInstance">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a multi-port at instance level. For each multi-port of a&#xD;&#xA;component, there exists exactly one multi-port instance in the respective component &#xD;&#xA;instance at all times. That instance references an instance of the statechart of the&#xD;&#xA;multi-port as well as an instance of the adaptation behavior. The DiscreteMultiPortInstance&#xD;&#xA;also references all sub-port instances of the multi-port instance. The DiscreteMultiPortInstance&#xD;&#xA;has no visual representation in the concrete syntax. It is represented by its sub-roles."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="subPortInstances" upperBound="-1"
            eType="#//model/instance/DiscreteSinglePortInstance" containment="true"
            eOpposite="#//model/instance/DiscreteSinglePortInstance/multiPortInstance">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="These are all sub-port instances of the multi-port. The sub-port instances are&#xD;&#xA;represented by DiscreteSinglePortsInstances."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="pattern" nsURI="http://www.fujaba.de/muml/model/pattern/0.2.3"
        nsPrefix="pattern">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
        <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
        <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
        <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="RoleConnector" eSuperTypes="#//model/core/BehavioralElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a communication channel connecting two roles of a coordination pattern."/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="OnlyRolesOfSameCoordinationPattern"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="OnlyRolesOfSameCoordinationPattern" value="(not source.oclIsUndefined() and not target.oclIsUndefined()) implies source.coordinationPattern = target.coordinationPattern"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="bidirectional" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This attribute stores the direction of the channel. The direction can either be uni- or bi-direcational. This attribute should probably be renamed to bidirectional."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="source" lowerBound="1"
            eType="#//model/pattern/Role" eOpposite="#//model/pattern/Role/outgoingRoleConnector">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The roles connected by this channel. At the moment an arbitrary number of roles are allow. This probably should be discussed."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
            eType="#//model/pattern/Role" eOpposite="#//model/pattern/Role/incomingRoleConnector">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The roles connected by this channel. At the moment an arbitrary number of roles are allow. This probably should be discussed."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="coordinationPattern"
            lowerBound="1" eType="#//model/pattern/CoordinationPattern" eOpposite="#//model/pattern/CoordinationPattern/connector">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The coordination pattern this role connector is part of."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="CoordinationPattern" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//NamedElement #//model/core/ConstrainableElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A coordination protocol specifies the coordination between a certain number of communication members. The communication members are represented by roles. To specify which roles communicate whith each other they are connected by channels. The communication protocol used by the roles is specified by realtime statecharts. Each role has its own realtime statechart describing the roles communication behavior. Furthermore channels own a realtime statechart which enables specifying properties of certain real communication channels e.g. propagation delay or buffering of messages. Furthermore constraints can be assigned to coordination patterns. Constraints specify certain properties the coordination specified by the pattern has to fullfill."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="roles" lowerBound="1"
            upperBound="2" eType="#//model/pattern/Role" containment="true" eOpposite="#//model/pattern/Role/coordinationPattern">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The roles belonging to this pattern."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="connector" lowerBound="1"
            eType="#//model/pattern/RoleConnector" containment="true" eOpposite="#//model/pattern/RoleConnector/coordinationPattern">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Each coordination pattern has exactly one role connector.&#xD;&#xA;Cardinality is 1 because there exists no useful pattern wir more than two roles. If a useful pattern exists with more than 2 roles, than change cardinality to 1..*"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="pattern" eType="#//model/pattern/CoordinationPattern"
            volatile="true" transient="true" derived="true" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="self"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This derived reference only exists because GMF needs it to visualize the inner ellipse of a Real-Time Coordination Pattern."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Role" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//NamedElement #//model/core/ConstrainableElement #//model/core/BehavioralElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a role of a coordination pattern."/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="OrderOnlyForMultiPort OrderedRequiresIntegerOrderVariable RoleHasConnector"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="OrderOnlyForMultiPort" value="self.ordered implies (self.cardinality.upperBound.value > 1 or self.cardinality.upperBound.infinity)"/>
          <details key="OrderedRequiresIntegerOrderVariable" value="self.ordered implies (self.orderVariable->notEmpty() implies self.orderVariable.eAttributeType ='EInt')"/>
          <details key="RoleHasConnector" value="self.incomingRoleConnector->notEmpty() or self.outgoingRoleConnector->notEmpty()"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="incomingRoleConnector"
            eType="#//model/pattern/RoleConnector" eOpposite="#//model/pattern/RoleConnector/target">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The incoming RoleConnector, which connects this role with another role.&#xA;Either incomingRoleConnector or outgoingRoleConnector (or both) must be set."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="coordinationPattern"
            lowerBound="1" eType="#//model/pattern/CoordinationPattern" eOpposite="#//model/pattern/CoordinationPattern/roles">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The coordination pattern this role belongs to."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="senderMessageInterface"
            eType="#//model/msgiface/MessageInterface">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The sender message interface defines which messages this port sends."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="receiverMessageInterface"
            eType="#//model/msgiface/MessageInterface">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The receiver message interface defines which messages this port receives."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="cardinality" lowerBound="1"
            eType="#//model/core/Cardinality" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A role has a cardinality."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="port" upperBound="-1"
            eType="#//model/component/DiscretePort" eOpposite="#//model/component/DiscretePort/refines">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The ports this role is assigned to."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="adaptationBehavior"
            eType="#//model/core/Behavior">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The adaptation behavior of this role. Note that only multi-ports have an adaptation behavior."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="roleAndAdaptationBehavior"
            eType="#//model/core/Behavior"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="ordered" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This attribute marks a multi-role as being ordered. In an ordered multi-role, one of the contained integer attributes is used to define the order. Then, the instances of the multi-role are numbered from 1 to n for n instances."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="orderVariable" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EAttribute">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This attribute defines the order on the instances of the multi-role. It must be defined in the real-time statechart of this role and it must be of type integer."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="outgoingRoleConnector"
            eType="#//model/pattern/RoleConnector" eOpposite="#//model/pattern/RoleConnector/source">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The outgoing RoleConnector, which connects this role with another role.&#xA;Either incomingRoleConnector or outgoingRoleConnector (or both) must be set."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="roleConnector" eType="#//model/pattern/RoleConnector"
            changeable="false" volatile="true" transient="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="if self.incomingConnector -> notEmpty() then&#xD;&#xA;&#x9;self.incomingConnector&#xD;&#xA;else&#xD;&#xA;&#x9;self.outgoingConnector&#xD;&#xA;Endif"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="realtimestatechart" nsURI="http://www.fujaba.de/muml/model/realtimestatechart/0.2.3"
        nsPrefix="realtimestatechart">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
        <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
        <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
        <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Deadline" abstract="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a deadline consisting of an upper and a lower bound."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="upperBound" eType="#//model/core/NaturalNumber"
            containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The upper bound of a deadline is a natural number."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="lowerBound" eType="#//model/core/NaturalNumber"
            containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The lower bound of a deadline is a natural number."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="AbsoluteDeadline" eSuperTypes="#//model/realtimestatechart/Deadline">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents an absolute deadline. It is always associated with a transition of the statechart. The deadline depends on the value of a certain clock."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="clock" lowerBound="1"
            eType="#//model/realtimestatechart/Clock">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="the references clock of the absolute deadline."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="RelativeDeadline" eSuperTypes="#//model/realtimestatechart/Deadline">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a relative deadline. It is always associated with a transition of the statechart. The deadlin is relative to the point in time when the execution of the transition starts."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Clock" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//NamedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents clocks of a realtime statechart."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="statechart" eType="#//model/realtimestatechart/RealtimeStatechart"
            eOpposite="#//model/realtimestatechart/RealtimeStatechart/clocks">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The realtime statechart this clock belongs to.&#xA;\todoib{Should be 1..1, but GMF needs 0..1 here!}&#xD;&#xA;\todosd{is this info necessary?}"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Region" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//NamedElement #//model/realtimestatechart/Prioritizable">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Regions enables hierarchy and parallelism. Each state can have zero, one or more regions."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="statechart" lowerBound="1"
            eType="#//model/realtimestatechart/RealtimeStatechart" containment="true"
            eOpposite="#//model/realtimestatechart/RealtimeStatechart/embeddingRegion">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The realtime statechart this region embeds."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="parentState" lowerBound="1"
            eType="#//model/realtimestatechart/State" eOpposite="#//model/realtimestatechart/State/regions">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The state this region is embedded."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="State" eSuperTypes="#//model/realtimestatechart/Vertex">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="OneInvarianPerClock OneInitialState NoOutgoingTransitionOfFinalState NoRegionsOfFinalState UniquePrioritiesOfOutgoingTransitions UniquePrioritiesOfRegions UniqueChannelNames UniqueRegionNames BoundOfInvariantGreaterOrEqualZero InvalidClockConstraintOperator"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a complex state of a realtime statechart. Complex states may again contain realtime statecharts hence enabling the creation of hierarchical statecharts. Further more complex states have do, entry and exit actions. Also complex states define which synchronization channels are allowed to be used by embedded statecharts."/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="OneInvarianPerClock" value="self.invariants->isUnique(clock)"/>
          <details key="OneInitialState" value="not self.statechart.vertices->select(x | x.oclIsKindOf(State)).oclAsType(State)->select(s |  s.initial)->isEmpty()"/>
          <details key="NoOutgoingTransitionOfFinalState" value="self.final implies self.outgoingTransitions->isEmpty()"/>
          <details key="NoRegionsOfFinalState" value="self.final implies self.regions->isEmpty()"/>
          <details key="UniquePrioritiesOfOutgoingTransitions" value="self.outgoingTransitions->isUnique(priority) "/>
          <details key="UniquePrioritiesOfRegions" value="self.regions->isUnique(priority)"/>
          <details key="UniqueChannelNames" value="self.channels->isUnique(name)"/>
          <details key="UniqueRegionNames" value="self.regions->isUnique(name)"/>
          <details key="BoundOfInvariantGreaterOrEqualZero" value="self.invariants->forAll(bound.value >= 0)"/>
          <details key="InvalidClockConstraintOperator" value="self.invariants->forAll(invariant | Set{ modeling::expressions::ComparingOperator::LESS, modeling::expressions::ComparingOperator::LESS_OR_EQUAL }->includes(invariant.operator))"/>
        </eAnnotations>
        <eOperations name="getUniqueRegionPriority" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EInt">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Returns the next free higher region priority that is closest to the value provided as hint."/>
            <details key="body" value="for (; hasRegionOfPriority(hint); hint++);&#xA;return hint;"/>
          </eAnnotations>
          <eParameters name="hint" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EInt"/>
        </eOperations>
        <eOperations name="hasRegionOfPriority" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Returns the &lt;code>true&lt;/code>, if this State contains a region of the given priority."/>
            <details key="body" value="for (Region region : getRegions()) {&#xA;&#x9;if (region.getPriority() == priority) {&#xA;&#x9;&#x9;return true;&#xA;&#x9;}&#xA;}&#xA;return false;"/>
          </eAnnotations>
          <eParameters name="priority" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EInt"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="regions" upperBound="-1"
            eType="#//model/realtimestatechart/Region" containment="true" eOpposite="#//model/realtimestatechart/Region/parentState">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The regions of this state. Regions are used to model composite states.&#xA;In case of one region, we have an xor superstate, in case of multiple regions, &#xA;we have an AND-superstate."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="doEvent" eType="#//model/realtimestatechart/DoEvent"
            containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The do event. It is executed periodically while the corresponding state is active.&#xD;&#xA;\todosd{ocl: implement derived}"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="exitEvent" eType="#//model/realtimestatechart/ExitEvent"
            containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The exit action is exectuted once when the corresponding state is left.&#xD;&#xA;\todosd{ocl: implement derived}"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="entryEvent" eType="#//model/realtimestatechart/EntryEvent"
            containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The entry action is exectuted once when the corresponding state is entered.&#xD;&#xA;\todosd{ocl: implement derived}"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="invariants" upperBound="-1"
            eType="#//model/realtimestatechart/ClockConstraint" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The invariant belonging to this complex state. It describes how long it is allowed to reside in this complex state depending on the values of the clocks."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="initial" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
            defaultValueLiteral="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="An initial state is the first one to active if the statechart is activated. There is only one initial state allowed at the top hierarchy of a statechart."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="final" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="a final state is not allowed to have outgoing transitions."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="urgent" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="If a state is active and urgent, no time is allowed to pass until the state is leaved."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="channels" upperBound="-1"
            eType="#//model/realtimestatechart/SynchronizationChannel" containment="true"
            eOpposite="#//model/realtimestatechart/SynchronizationChannel/state">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The synchronization channels provided by this state."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="events" ordered="false"
            upperBound="-1" eType="#//model/realtimestatechart/StateEvent" changeable="false"
            volatile="true" transient="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="Set { entryEvent, exitEvent, doEvent }"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This derived reference returns all StateEvents of this state. The StateEvents of&#xD;&#xA;this state are all entry-, do- and exit-Events."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="stateEntryPoints" upperBound="-1"
            eType="#//model/realtimestatechart/StateEntryPoint" containment="true"
            eOpposite="#//model/realtimestatechart/StateEntryPoint/state">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A state references its entry and exit points. They can only exist, if a state embeds one or more statecharts."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="simple" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"
            changeable="false" volatile="true" transient="true" defaultValueLiteral="false"
            unsettable="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="regions -> isEmpty()"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A state is simple if it does not contain a region with an embedded substatechart."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="stateExitPoints" upperBound="-1"
            eType="#//model/realtimestatechart/StateExitPoint" containment="true"
            eOpposite="#//model/realtimestatechart/StateExitPoint/state"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Vertex" abstract="true" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//NamedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a node in a realtime statechart that is connected with other nodes via transitions."/>
        </eAnnotations>
        <eOperations name="isSuperVertexOf" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eParameters name="vertex" eType="#//model/realtimestatechart/Vertex"/>
        </eOperations>
        <eOperations name="getUniqueTransitionPriority" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EInt">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Returns the next free higher transition priority that is closest to the value provided as hint."/>
            <details key="body" value="for (; hasOutgoingTransitionOfPriority(hint); hint++);&#xA;return hint;"/>
          </eAnnotations>
          <eParameters name="hint" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EInt"/>
        </eOperations>
        <eOperations name="hasOutgoingTransitionOfPriority" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Returns the &lt;code>true&lt;/code>, if this Vertex contains an outgoing transition of the given priority."/>
            <details key="body" value="for (Transition transition : getOutgoingTransitions()) {&#xA;&#x9;if (transition.getPriority() == priority) {&#xA;&#x9;&#x9;return true;&#xA;&#x9;}&#xA;}&#xA;return false;"/>
          </eAnnotations>
          <eParameters name="priority" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EInt"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="outgoingTransitions"
            upperBound="-1" eType="#//model/realtimestatechart/Transition" eOpposite="#//model/realtimestatechart/Transition/source">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The outgoing transitions of this vertex"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="incomingTransitions"
            upperBound="-1" eType="#//model/realtimestatechart/Transition" eOpposite="#//model/realtimestatechart/Transition/target">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The incoming transitions of this vertex"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="statechart" eType="#//model/realtimestatechart/RealtimeStatechart"
            eOpposite="#//model/realtimestatechart/RealtimeStatechart/vertices">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The realtime statechart this state belongs to.&#xA;\todoib{Should be 1..1, but GMF needs 0..1 here!}"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Transition" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//ExtendableElement #//model/realtimestatechart/Prioritizable">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="SetTargetAndSource NoCrossingOfRegionBorders EntryPointMustOnlyPointToStatesOrStateEntryPoints ExitPointMustOnlyPointToStatesOrStateEntryPoints TriggerMessageEventsMustNotHaveAnOwnedParameterBinding ValidTriggerMessageEvents ValidRaiseMessageEvents"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A transition connects different vertices. If the vertex is a state a self-transition is also possible."/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="SetTargetAndSource" value="self.target->notEmpty() and self.source->notEmpty()"/>
          <details key="NoCrossingOfRegionBorders" value="self.source.statechart.embeddingRegion=self.target.statechart.embeddingRegion or&#xD;&#xA;self.source.oclAsType(StateEntryPoint).statechart.embeddingRegion=&#xD;&#xA;self.target.statechart.embeddingRegion.parentState.statechart.embeddingRegion  or &#x9;&#x9;&#x9;&#x9;&#xD;&#xA;self.source.statechart.embeddingRegion.parentState.statechart.embeddingRegion=&#xD;&#xA;self.target.oclAsType(StateExitPoint).statechart.embeddingRegion"/>
          <details key="EntryPointMustOnlyPointToStatesOrStateEntryPoints" value="not (self.source.oclIsKindOf(EntryPoint) and (not self.target.oclIsKindOf(State) and not self.target.oclIsKindOf(StateEntryPoint)))"/>
          <details key="ExitPointMustOnlyPointToStatesOrStateExitPoints" value="not (self.source.oclIsKindOf(ExitPoint) and (not self.target.oclIsKindOf(State) and not self.target.oclIsKindOf(StateExitPoint)))"/>
          <details key="TriggerMessageEventsMustNotHaveAnOwnedParameterBinding" value="not self.triggerMessageEvent.message.oclIsUndefined() implies&#xA;self.triggerMessageEvent.message.ownedParameterBindings->isEmpty()"/>
          <details key="ValidTriggerMessageEvents" value="let a : msgiface::MessageInterface =&#xA;(&#xA;&#x9;if statechart.behavioralElement.oclIsKindOf(component::DiscretePort) then&#xA;&#x9;&#x9;statechart.behavioralElement.oclAsType(component::DiscretePort).receiverMessageInterface&#xA;&#x9;else&#xA;&#x9;&#x9;if statechart.behavioralElement.oclIsKindOf(pattern::Role) then&#xA;&#x9;&#x9;&#x9;statechart.behavioralElement.oclAsType(pattern::Role).receiverMessageInterface&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;null&#xA;&#x9;&#x9;endif&#xA;&#x9;endif&#xA;) in&#xA;not triggerMessageEvent.message.instanceOf.oclIsUndefined() implies not a.oclIsUndefined() and a.messageTypes->includes(triggerMessageEvent.message.instanceOf)"/>
          <details key="ValidRaiseMessageEvents" value="let a : msgiface::MessageInterface =&#xA;(&#xA;&#x9;if statechart.behavioralElement.oclIsKindOf(component::DiscretePort) then&#xA;&#x9;&#x9;statechart.behavioralElement.oclAsType(component::DiscretePort).senderMessageInterface&#xA;&#x9;else&#xA;&#x9;&#x9;if statechart.behavioralElement.oclIsKindOf(pattern::Role) then&#xA;&#x9;&#x9;&#x9;statechart.behavioralElement.oclAsType(pattern::Role).senderMessageInterface&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;null&#xA;&#x9;&#x9;endif&#xA;&#x9;endif&#xA;) in&#xA;not raiseMessageEvent.message.instanceOf.oclIsUndefined() implies not a.oclIsUndefined() and a.messageTypes->includes(raiseMessageEvent.message.instanceOf)"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="synchronization" eType="#//model/realtimestatechart/Synchronization"
            containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The synchronisation which is sent upon activation of this transition."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
            eType="#//model/realtimestatechart/Vertex" eOpposite="#//model/realtimestatechart/Vertex/incomingTransitions">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The state which is the target of this transition.&#xD;&#xA;\todosd{discuss for v0.2:change cardinality to 1..1}"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="source" lowerBound="1"
            eType="#//model/realtimestatechart/Vertex" eOpposite="#//model/realtimestatechart/Vertex/outgoingTransitions">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The state which is the source of this transition.&#xD;&#xA;\todosd{discuss for v0.2: change cardinality to 1..1}"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="statechart" eType="#//model/realtimestatechart/RealtimeStatechart"
            eOpposite="#//model/realtimestatechart/RealtimeStatechart/transitions">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The realtime statechart this transition belongs to."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="clockResets" upperBound="-1"
            eType="#//model/realtimestatechart/Clock">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The clock resets of this transition."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="triggerMessageEvent"
            eType="#//model/realtimestatechart/AsynchronousMessageEvent" changeable="false"
            volatile="true" transient="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The trigger event of this transition.&#xD;&#xA;\todosd{discuss for v0.2: change cardinality to 0..*}"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="self.events->select(e | e.oclIsKindOf(AsynchronousMessageEvent) and e.kind=EventKind::TRIGGER).oclAsType(AsynchronousMessageEvent)->first()&#xA;"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="raiseMessageEvent"
            eType="#//model/realtimestatechart/AsynchronousMessageEvent" changeable="false"
            volatile="true" transient="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The event which is raised upon activiation of this transition.&#xD;&#xA;\todosd{discuss for v0.2: change cardinality to 0..*}"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="self.events->select(e | e.oclIsKindOf(AsynchronousMessageEvent) and e.kind=EventKind::RAISE).oclAsType(AsynchronousMessageEvent)->first()&#xA;"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="clockConstraints" upperBound="-1"
            eType="#//model/realtimestatechart/ClockConstraint" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A clock constraint restricts when the transition can be activeted in dependency of the values of the clock."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="absoluteDeadlines"
            upperBound="-1" eType="#//model/realtimestatechart/AbsoluteDeadline" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="a transition can has one or more absolute deadlines"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="relativeDeadline" eType="#//model/realtimestatechart/RelativeDeadline"
            containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="a transition can have one relative deadline"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="blockable" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
            defaultValueLiteral="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Needed for failure propagation."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="guard" eType="ecore:EClass ../../org.storydriven.modeling/model/sdm.ecore#//expressions/Expression"
            containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The guard of a transition is defined by an expression which should have return type boolean. Comparing clock values is not allowed (use clock constraints instead).&#xD;&#xA;\todosd{restrict type of expression to ComparisionExpression or NotExpression or BinaryLogicExpression}"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="events" upperBound="-1"
            eType="#//model/realtimestatechart/TransitionEvent" containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="action" eType="#//model/realtimestatechart/Action"
            containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The side effect of this transition. A side effect might be a variable assignment as well as a method invocation."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ClockConstraint">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents an arbitrary time constraint that can either be used as an invariant constraint of a state or as a transition guard.&#xD;&#xA;\todosd{Inherit from ComparisonExpression?}"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="bound" lowerBound="1"
            eType="#//model/core/NaturalNumber" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The bound of a deadline (upper or lower) is a natural number."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="clock" lowerBound="1"
            eType="#//model/realtimestatechart/Clock">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The clock references in this clock constraint."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="operator" lowerBound="1"
            eType="ecore:EEnum ../../org.storydriven.modeling/model/sdm.ecore#//expressions/ComparingOperator"
            defaultValueLiteral="ComparingOperator.LESS_OR_EQUAL">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The operator that is used in this clock constraint."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Action" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//NamedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An action is used as a side effect of a transition as well as within a state. Each transition can&#xD;&#xA;only define one action. A state can define up to three actions (one for state entry, one for state&#xD;&#xA;exit, one while dwelling within the state).&#xD;&#xA;"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="expressions" lowerBound="1"
            upperBound="-1" eType="ecore:EClass ../../org.storydriven.modeling/model/sdm.ecore#//expressions/Expression"
            containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="An action has a defined expression, which can be expressed in different languages."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="AsynchronousMessageEvent" eSuperTypes="#//model/realtimestatechart/TransitionEvent">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An AsynchronousMessageEvent is a TransitionEvent that corresponds to &#xD;&#xA;receiving or sending a message. They are used to model asynchronous &#xD;&#xA;communication between realtime statecharts. A trigger events specifies&#xD;&#xA;that the corresponding message has to be received for the transition to be&#xD;&#xA;enabled, a raised event specifies that the corresponding message will be &#xD;&#xA;sent upon execution of the transition. "/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="message" lowerBound="1"
            eType="#//model/realtimestatechart/Message" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The message associated with this event. The message is either requested to be&#xD;&#xA;received (trigger event) or it will be sent (raise event)."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DoEvent" eSuperTypes="#//model/realtimestatechart/StateEvent">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The action of a state that is executed periodically as long as this state is active. The first period starts after the execution of the entry-action."/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="ValidLowerUpperPeriod" value="self.periodLower >= 1 and self.periodLower &lt;= self.periodUpper"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="ValidLowerUpperPeriod"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="action" lowerBound="1"
            eType="#//model/realtimestatechart/Action" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Each entry or exit action has one or more actions."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="periodLower" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="the lower bound of the period"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="periodUpper" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="the upper bound of the period"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EntryOrExitEvent" abstract="true"
          eSuperTypes="#//model/realtimestatechart/StateEvent">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents an entry or an exit event. The actions associated with this &#xD;&#xA;event will be executed when the state is entered or left respectively."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="clockResets" upperBound="-1"
            eType="#//model/realtimestatechart/Clock">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The clock resets of this action"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="action" eType="#//model/realtimestatechart/Action"
            containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Each entry or exit event can have one or more actions."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="SynchronizationChannel" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//calls/Callable ../../org.storydriven.modeling/model/sdm.ecore#//NamedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Defines a type of a synchronization channel that can be used to synchronize&#xA;between statecharts contained as substatecharts in the same state.&#xA;Serves as a type for Synchronizations."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="state" lowerBound="1"
            eType="#//model/realtimestatechart/State" eOpposite="#//model/realtimestatechart/State/channels">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The state in which this synchronization channel is defined."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Synchronization" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//calls/Invocation">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Two transitions can synchron fire. One transition is the sender, the other the receiver. This means that both transitions (exactly one sender and one receiver) must be activated and has to fire at the same time. "/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="syncChannel" lowerBound="1"
            eType="#//model/realtimestatechart/SynchronizationChannel" changeable="false"
            volatile="true" transient="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="the channel that is used by the synchronization"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="callee.oclAsType(SynchronizationChannel)"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" lowerBound="1"
            eType="#//model/realtimestatechart/SynchronizationKind">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Decides the kind: Is this a send or a reveive synchronization?"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Prioritizable" abstract="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Enables the priorization of elements."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="priority" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="the priority of the element"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="RealtimeStatechart" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//NamedElement ../../org.storydriven.modeling/model/sdm.ecore#//CommentableElement #//model/core/Behavior">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class is a concrete statechart implementation of a real-time statechart."/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="UniqueNameOfStates" value="self.vertices.oclAsType(State)->isUnique(name) "/>
          <details key="MinOneState" value="self.vertices.oclAsType(State)->notEmpty()"/>
          <details key="NoCycles" value="-- If we are contained within a statechart...&#xA;(not self.embeddingRegion.parentState.statechart.oclIsUndefined())&#xA;&#xA;implies&#xA;&#xA;-- ... then we must not be a super statechart of it.&#xA;(not self.isSuperStatechartOf(self.embeddingRegion.parentState.statechart))"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="UniqueNameOfStates MinOneState NoCycles"/>
        </eAnnotations>
        <eOperations name="isSuperStatechartOf" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eParameters name="statechart" lowerBound="1" eType="#//model/realtimestatechart/RealtimeStatechart"/>
        </eOperations>
        <eOperations name="getHighestParentStatechart">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Returns realtime statechart which represents the root of the hierarchy tree."/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="embeddingRegion" eType="#//model/realtimestatechart/Region"
            eOpposite="#//model/realtimestatechart/Region/statechart"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="transitions" upperBound="-1"
            eType="#//model/realtimestatechart/Transition" containment="true" eOpposite="#//model/realtimestatechart/Transition/statechart">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The transitions of the realtime statechart."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="vertices" upperBound="-1"
            eType="#//model/realtimestatechart/Vertex" containment="true" eOpposite="#//model/realtimestatechart/Vertex/statechart">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The states of this realtime statechart."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="clocks" upperBound="-1"
            eType="#//model/realtimestatechart/Clock" containment="true" eOpposite="#//model/realtimestatechart/Clock/statechart">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The clocks of this realtime statechart."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="history" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="If this attribute is true, it acts as a shallow history on the top hierarchy of this statechart."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="eventQueueSize" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The size of the event queue of this port. It defines the maximum number of events&#xD;&#xA;that may be temporarily buffered by the port."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="flat" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"
            changeable="false" volatile="true" transient="true" defaultValueLiteral="false"
            derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="not(vertices -> exists( v : Vertex | v.oclIsTypeOf(State) implies v.oclAsType(State).regions -> notEmpty()))"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This derived attribute allows to checks whether a statechart is flat or not. In a&#xD;&#xA;flat statechart, none of the contained states contains a regions with an embedded&#xD;&#xA;substatechart."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="availableClocks" ordered="false"
            upperBound="-1" eType="#//model/realtimestatechart/Clock" changeable="false"
            volatile="true" transient="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Available clocks are all clocks that were defined in this statechart or in ancestor statecharts.&#xD;&#xA;\todosd{ocl: implement derived}"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="self -> closure(if embeddingRegion.oclIsUndefined() then self else embeddingRegion.parentState.statechart endif).clocks->asSet()"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="securityLevel" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
            defaultValueLiteral="0">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="needed for WCET-analysis"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="utilisation" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="needed for WCET-analysis"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="scheduleDocument" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
            defaultValueLiteral="\&quot;schedule.xml\&quot;">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="needed for WCET-analysis"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="embedded" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
            changeable="false" volatile="true" transient="true" defaultValueLiteral="false"
            derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This attribute specifies whether this realtime statechart is embedded into a region or not.&#xD;&#xA;\todosd{ocl: implement derived}"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="not self.embeddingRegion.oclIsUndefined()"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allAvailableAttributes"
            ordered="false" upperBound="-1" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EAttribute"
            changeable="false" volatile="true" transient="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="self -> closure(if embeddingRegion.oclIsUndefined() then self else embeddingRegion.parentState.statechart endif).attributes->asSet()"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allAvailableOperations"
            ordered="false" upperBound="-1" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EOperation"
            changeable="false" volatile="true" transient="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="self -> closure(if embeddingRegion.oclIsUndefined() then self else embeddingRegion.parentState.statechart endif).operations ->asSet()"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EEnum" name="SynchronizationKind">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A synchronization has two kinds: send and receive."/>
        </eAnnotations>
        <eLiterals name="SEND" literal="SEND">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Represents a send synchronization."/>
          </eAnnotations>
        </eLiterals>
        <eLiterals name="RECEIVE" value="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Represents a receive synchronization."/>
          </eAnnotations>
        </eLiterals>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Event" abstract="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This abstract class represents all kinds of events that may occur in a statechart.&#xD;&#xA;A event can either be a trigger event or a raise event."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" eType="#//model/realtimestatechart/EventKind">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Decides the kind: Is this a raise event or a trigger event?&#xD;&#xA;&#xD;&#xA;A event may either be a trigger event or a raise event. A trigger event triggers &#xD;&#xA;some action within the statechart, a raise event is generated by the statechart &#xD;&#xA;and will be processed by another statechart."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TransitionEvent" abstract="true"
          eSuperTypes="#//model/realtimestatechart/Event">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A TransitionEvent is an event that occurs at a transition of a real-time statechart.&#xD;&#xA;Trigger Events are part of the precondition for activating the transition, raise&#xD;&#xA;events are generated as a result of firing the transition."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="StateEvent" abstract="true" eSuperTypes="#//model/realtimestatechart/Event">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A StateEvent is an event that occurs within a state of a real-time statechart.&#xD;&#xA;StateEvents may only be trigger events."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Message" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//calls/Invocation">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The messages are exchanged between components in order to communicate&#xD;&#xA;asynchronously. A message is typed over a message type and provides a &#xD;&#xA;binding of all parameters defined by the message type to concrete values."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="instanceOf" lowerBound="1"
            eType="#//model/msgiface/MessageType" changeable="false" volatile="true"
            transient="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Retrieves the message type this message is typed over."/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="callee.oclAsType(msgiface::MessageType)"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EEnum" name="EventKind">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An event has two kinds: raise and trigger."/>
        </eAnnotations>
        <eLiterals name="RAISE">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Represents a raise event."/>
          </eAnnotations>
        </eLiterals>
        <eLiterals name="TRIGGER" value="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Represents a trigger event."/>
          </eAnnotations>
        </eLiterals>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EntryEvent" eSuperTypes="#//model/realtimestatechart/EntryOrExitEvent">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents an entry event. The action associated with this &#xD;&#xA;event will be executed when the state is entered.&#xA;\paragraph{Note}&#xA;We need this subclass, because GMF forbids using the same semantic&#xA;element for different notational elements within the same container."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ExitEvent" eSuperTypes="#//model/realtimestatechart/EntryOrExitEvent">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents an exit event. The action associated with this &#xD;&#xA;event will be executed when the state is left.&#xA;\paragraph{Note}&#xA;We need this subclass, because GMF forbids using the same semantic&#xA;element for different notational elements within the same container."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EntryPoint" eSuperTypes="#//model/realtimestatechart/Vertex">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="OneOutgoingTransition"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Entry points are defined points on a state that can be used to reach inner states.&#xA;\paragraph{Note}&#xA;We need this subclass, because GMF forbids using the same semantic&#xA;element for different notational elements within the same container."/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="OneOutgoingTransition" value="self.outgoingTransitions->size() = 1"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ExitPoint" eSuperTypes="#//model/realtimestatechart/Vertex">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="AtMostOneOutgoingTransition"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="\todoib{\textbf{Suggestion:} Exit points are defined points on a state that can be used to exit inner states.}&#xA;\paragraph{Note}&#xA;We need this subclass, because GMF forbids using the same semantic&#xA;element for different notational elements within the same container."/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="AtMostOneOutgoingTransition" value="self.outgoingTransitions->size() &lt;= 1"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="StateEntryPoint" eSuperTypes="#//model/realtimestatechart/Vertex">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="AtLeastOneIncomingTransition"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The entry point that is assigned to a state. It is derived from the entry point of the statechart, the state embeds.&#xA;\paragraph{Note}&#xA;We need this subclass, because GMF forbids using the same semantic&#xA;element for different notational elements within the same container."/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="AtLeastOneIncomingTransition" value="self.incomingTransitions ->size()>0"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="state" lowerBound="1"
            eType="#//model/realtimestatechart/State" eOpposite="#//model/realtimestatechart/State/stateEntryPoints"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="entryPoint" lowerBound="1"
            eType="#//model/realtimestatechart/EntryPoint"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="StateExitPoint" eSuperTypes="#//model/realtimestatechart/Vertex">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="OneOutgoingTransition"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The exit point that is assigned to a state. It is derived from the exit point of the statechart, the state embeds.&#xA;\paragraph{Note}&#xA;We need this subclass, because GMF forbids using the same semantic&#xA;element for different notational elements within the same container."/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="OneOutgoingTransition" value="self.outgoingTransitions->size() = 1"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="state" lowerBound="1"
            eType="#//model/realtimestatechart/State" eOpposite="#//model/realtimestatechart/State/stateExitPoints"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="exitPoint" lowerBound="1"
            eType="#//model/realtimestatechart/ExitPoint"/>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="msgiface" nsURI="http://www.fujaba.de/muml/model/msgiface/0.2.3"
        nsPrefix="msgiface">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
        <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
        <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
        <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="This package defines the message interfaces. A MessageInterface defines a set&#xD;&#xA;of event signatures using the class MessageType. These message types are used&#xD;&#xA;to type the events within a realtime statechart. "/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="MessageInterface" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//NamedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This class represents a message interface. A message interface specifies which messages are allowed to be sent or received by a port or role."/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="NoSelfGeneralization" value="self.superType->forAll(x|x&lt;>self)"/>
          <details key="NoBidirectionalGeneralization" value="self.superType->forAll(x|x.superType->forAll(y|y&lt;>self))"/>
          <details key="UniqueMessageTypeNames" value="self.messageTypes->isUnique(name)"/>
          <details key="NoMessageTypeOrNotAtLeastTwoGeneralizations" value="self.messageTypes->size()>=1 or self.superType->size()>=2"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="NoSelfGeneralization NoBidirectionalGeneralization UniqueMessageTypeNames NoMessageTypeOrNotAtLeastTwoGeneralizations"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="superType" upperBound="-1"
            eType="#//model/msgiface/MessageInterface">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The set of message interfaces this message interface inherits from. This message&#xD;&#xA;interface contains all message types that are defined by the super types and their&#xD;&#xA;super types."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="messageTypes" upperBound="-1"
            eType="#//model/msgiface/MessageType" containment="true" eOpposite="#//model/msgiface/MessageType/messageInterface">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The message types being defined in this message interface."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allAvailableMessageTypes"
            ordered="false" upperBound="-1" eType="#//model/msgiface/MessageType"
            changeable="false" volatile="true" transient="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details key="derivation" value="self -> closure(if superType -> isEmpty() then self->asSet() else superType endif).messageTypes -> asSet()"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="MessageType" eSuperTypes="../../org.storydriven.modeling/model/sdm.ecore#//calls/Callable ../../org.storydriven.modeling/model/sdm.ecore#//NamedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A message type defines the signature of one event. That includes the name&#xD;&#xA;of the event as well as the list of parameters. The message type inherits from&#xD;&#xA;callable because concrete events in a real-time statechart must provide a &#xD;&#xA;parameter mapping for the parameters of the message type as it is defined for&#xD;&#xA;method invocations."/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="UniqueParameterNames" value="self.containedParameters->isUnique(name)"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
          <details key="constraints" value="UniqueParameterNames"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="messageInterface" lowerBound="1"
            eType="#//model/msgiface/MessageInterface" eOpposite="#//model/msgiface/MessageInterface/messageTypes"/>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="deployment" nsURI="http://www.fujaba.de/muml/model/deployment/0.2.3"
        nsPrefix="deployment">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
        <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
        <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
        <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Deployment">
        <eStructuralFeatures xsi:type="ecore:EReference" name="communicationLinks"
            upperBound="-1" eType="#//model/deployment/CommunicationLink" containment="true"
            eOpposite="#//model/deployment/CommunicationLink/deployment"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="hardwareNodes" lowerBound="1"
            upperBound="-1" eType="#//model/deployment/HardwareNode" containment="true"
            eOpposite="#//model/deployment/HardwareNode/deployment"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="componentInstanceConfiguration"
            eType="#//model/instance/ComponentInstanceConfiguration"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="HardwareNode">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
          <details key="SameConfiguration" value="self.deployedInstance.componentInstanceConfiguration=self.deployment.componentInstanceConfiguration"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="deployment" lowerBound="1"
            eType="#//model/deployment/Deployment" eOpposite="#//model/deployment/Deployment/hardwareNodes"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="hardwarePorts" upperBound="-1"
            eType="#//model/deployment/HardwarePort" containment="true" eOpposite="#//model/deployment/HardwarePort/hardwareNode"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="deployedInstances"
            upperBound="-1" eType="#//model/instance/ComponentInstance"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="HardwarePort">
        <eStructuralFeatures xsi:type="ecore:EReference" name="hardwareNode" lowerBound="1"
            eType="#//model/deployment/HardwareNode" eOpposite="#//model/deployment/HardwareNode/hardwarePorts"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="outgoingCommunicationLink"
            eType="#//model/deployment/CommunicationLink" eOpposite="#//model/deployment/CommunicationLink/source"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="incomingCommunicationLink"
            lowerBound="1" eType="#//model/deployment/CommunicationLink" eOpposite="#//model/deployment/CommunicationLink/target"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="deployedPortInstance"
            upperBound="-1" eType="#//model/instance/PortInstance"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="CommunicationLink">
        <eStructuralFeatures xsi:type="ecore:EReference" name="deployment" lowerBound="1"
            eType="#//model/deployment/Deployment" eOpposite="#//model/deployment/Deployment/communicationLinks"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="source" lowerBound="1"
            eType="#//model/deployment/HardwarePort" eOpposite="#//model/deployment/HardwarePort/outgoingCommunicationLink"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
            eType="#//model/deployment/HardwarePort" eOpposite="#//model/deployment/HardwarePort/incomingCommunicationLink"/>
      </eClassifiers>
    </eSubpackages>
  </eSubpackages>
</ecore:EPackage>
