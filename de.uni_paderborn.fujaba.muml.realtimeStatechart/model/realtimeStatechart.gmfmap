<?xml version="1.0" encoding="UTF-8"?>
<gmfmap:Mapping xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
    xmlns:gmfmap="http://www.eclipse.org/gmf/2008/mappings"
    xmlns:gmftool="http://www.eclipse.org/gmf/2005/ToolDefinition">
  <nodes>
    <containmentFeature
        href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/FujabaRealtimeStatechart/vertices"/>
    <ownedChild>
      <domainMetaElement
          href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/State"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="../../org.storydriven.modeling/model/sdm.ecore#//NamedElement/name"/>
          <value
              body="'State'"/>
        </initializers>
      </domainInitializer>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="realtimeStatechart.gmfgraph#StateName"/>
        <features
            href="../../org.storydriven.modeling/model/sdm.ecore#//NamedElement/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="realtimeStatechart.gmftool#//@palette/@tools.0/@tools.0"/>
      <diagramNode
          href="realtimeStatechart.gmfgraph#StateNode"/>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0">
        <containmentFeature
            href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/State/entryEvent"/>
        <ownedChild>
          <domainMetaElement
              href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/EntryEvent"/>
          <labelMappings
              xsi:type="gmfmap:ExpressionLabelMapping"
              readOnly="true">
            <diagramLabel
                href="realtimeStatechart.gmfgraph#StateEventLabel"/>
            <viewExpression
                body="'entry / '.concat(if self.action.oclIsUndefined() then '' else self.action.name endif)"/>
          </labelMappings>
          <tool
              xsi:type="gmftool:CreationTool"
              href="realtimeStatechart.gmftool#//@palette/@tools.1/@tools.1"/>
          <diagramNode
              href="realtimeStatechart.gmfgraph#StateEvent"/>
        </ownedChild>
      </children>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0">
        <containmentFeature
            href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/State/doEvent"/>
        <ownedChild>
          <domainMetaElement
              href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/DoEvent"/>
          <domainInitializer
              xsi:type="gmfmap:FeatureSeqInitializer">
            <initializers
                xsi:type="gmfmap:ReferenceNewElementSpec">
              <feature
                  xsi:type="ecore:EReference"
                  href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/DoEvent/action"/>
              <newElementInitializers>
                <initializers
                    xsi:type="gmfmap:FeatureValueSpec">
                  <feature
                      xsi:type="ecore:EAttribute"
                      href="../../org.storydriven.modeling/model/sdm.ecore#//NamedElement/name"/>
                  <value
                      body="'action'"/>
                </initializers>
              </newElementInitializers>
            </initializers>
          </domainInitializer>
          <labelMappings
              xsi:type="gmfmap:ExpressionLabelMapping"
              readOnly="true">
            <diagramLabel
                href="realtimeStatechart.gmfgraph#StateEventLabel"/>
            <viewExpression
                body="'do / '.concat(if self.action.oclIsUndefined() then '' else self.action.name endif)"/>
          </labelMappings>
          <tool
              xsi:type="gmftool:CreationTool"
              href="realtimeStatechart.gmftool#//@palette/@tools.1/@tools.2"/>
          <diagramNode
              href="realtimeStatechart.gmfgraph#StateEvent"/>
        </ownedChild>
      </children>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0">
        <containmentFeature
            href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/State/exitEvent"/>
        <ownedChild>
          <domainMetaElement
              href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/ExitEvent"/>
          <labelMappings
              xsi:type="gmfmap:ExpressionLabelMapping"
              readOnly="true">
            <diagramLabel
                href="realtimeStatechart.gmfgraph#StateEventLabel"/>
            <viewExpression
                body="'exit / '.concat(if self.action.oclIsUndefined() then '' else self.action.name endif)"/>
          </labelMappings>
          <tool
              xsi:type="gmftool:CreationTool"
              href="realtimeStatechart.gmftool#//@palette/@tools.1/@tools.3"/>
          <diagramNode
              href="realtimeStatechart.gmfgraph#StateEvent"/>
        </ownedChild>
      </children>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0">
        <containmentFeature
            href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/State/invariants"/>
        <ownedChild>
          <domainMetaElement
              href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/ClockConstraint"/>
          <labelMappings
              xsi:type="gmfmap:ExpressionLabelMapping"
              readOnly="true">
            <diagramLabel
                href="realtimeStatechart.gmfgraph#ClockConstraintLabel"/>
            <viewExpression
                body="(&#xA;&#x9;if self.clock.name.oclIsUndefined() then&#xA;&#x9;&#x9;'null'&#xA;&#x9;else&#xA;&#x9;&#x9;self.clock.name&#xA;&#x9;endif&#xA;).concat(' ').concat(&#xA;&#x9;if self.operator.oclIsUndefined() then&#xA;&#x9;&#x9;'null'&#xA;&#x9;else&#xA;&#x9;&#x9;let array : Set(Tuple(s : String, d : modeling::expressions::ComparingOperator)) = Set{&#xA;&#x9;&#x9;&#x9;Tuple{s = '&lt;', d = modeling::expressions::ComparingOperator::LESS },&#xA;&#x9;&#x9;&#x9;Tuple{s = '≤', d = modeling::expressions::ComparingOperator::LESS_OR_EQUAL },&#xA;&#x9;&#x9;&#x9;Tuple{s = '=', d = modeling::expressions::ComparingOperator::EQUAL },&#xA;&#x9;&#x9;&#x9;Tuple{s = '≥', d = modeling::expressions::ComparingOperator::GREATER_OR_EQUAL },&#xA;&#x9;&#x9;&#x9;Tuple{s = '>', d = modeling::expressions::ComparingOperator::GREATER },&#xA;&#x9;&#x9;&#x9;Tuple{s = '≠', d = modeling::expressions::ComparingOperator::UNEQUAL },&#xA;&#x9;&#x9;&#x9;Tuple{s = 'regexp', d = modeling::expressions::ComparingOperator::REGULAR_EXPRESSION }&#xA;&#x9;&#x9;} in array->any(t | t.d = self.operator).s&#xA;&#x9;endif&#xA;).concat(' ').concat(&#xA;&#x9;if self.bound.oclIsUndefined() then&#xA;&#x9;&#x9;'null'&#xA;&#x9;else&#xA;&#x9;&#x9;self.bound.toString()&#xA;&#x9;endif&#xA;)"/>
          </labelMappings>
          <tool
              xsi:type="gmftool:CreationTool"
              href="realtimeStatechart.gmftool#//@palette/@tools.1/@tools.0"/>
          <diagramNode
              href="realtimeStatechart.gmfgraph#ClockConstraint"/>
        </ownedChild>
      </children>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0">
        <containmentFeature
            href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/State/channels"/>
        <ownedChild>
          <domainMetaElement
              href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/SynchronizationChannel"/>
          <domainInitializer
              xsi:type="gmfmap:FeatureSeqInitializer">
            <initializers
                xsi:type="gmfmap:FeatureValueSpec">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="../../org.storydriven.modeling/model/sdm.ecore#//NamedElement/name"/>
              <value
                  body="'channel'"/>
            </initializers>
          </domainInitializer>
          <labelMappings
              xsi:type="gmfmap:ExpressionLabelMapping"
              readOnly="true">
            <diagramLabel
                href="realtimeStatechart.gmfgraph#SynchronizationChannelLabel"/>
            <viewExpression
                body="(if self.name.oclIsUndefined() then 'null' else self.name endif).concat(&#xA;&#x9;'('.concat(&#xA;&#x9;&#x9;self.containedParameters->iterate(param; result : String = '' | &#xA;&#x9;&#x9;&#x9;(if result = '' then '' else result.concat(', ') endif).concat(&#xA;&#x9;&#x9;&#x9;&#x9;param.name.concat(' : ').concat(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if param.eType.oclIsUndefined() then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'null'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;param.eType.name&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;)&#xA;&#x9;).concat(')')&#xA;)"/>
          </labelMappings>
          <tool
              xsi:type="gmftool:CreationTool"
              href="realtimeStatechart.gmftool#//@palette/@tools.1/@tools.4"/>
          <diagramNode
              href="realtimeStatechart.gmfgraph#SynchronizationChannel"/>
        </ownedChild>
      </children>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.1">
        <containmentFeature
            href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/State/regions"/>
        <ownedChild>
          <domainMetaElement
              href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/Region"/>
          <tool
              xsi:type="gmftool:CreationTool"
              href="realtimeStatechart.gmftool#//@palette/@tools.1/@tools.5"/>
          <diagramNode
              href="realtimeStatechart.gmfgraph#Region"/>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.0/@ownedChild/@children.0 //@nodes.0/@ownedChild/@children.1 //@nodes.0/@ownedChild/@children.3 //@nodes.0/@ownedChild/@children.4 //@nodes.0/@ownedChild/@children.2">
        <compartment
            href="realtimeStatechart.gmfgraph#CompoundCompartment"/>
      </compartments>
      <compartments
          children="//@nodes.0/@ownedChild/@children.5">
        <compartment
            href="realtimeStatechart.gmfgraph#RegionCompartment"/>
      </compartments>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/FujabaRealtimeStatechart/clocks"/>
    <ownedChild>
      <domainMetaElement
          href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/Clock"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="../../org.storydriven.modeling/model/sdm.ecore#//NamedElement/name"/>
          <value
              body="'c'"/>
        </initializers>
      </domainInitializer>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="realtimeStatechart.gmfgraph#ClockName"/>
        <features
            href="../../org.storydriven.modeling/model/sdm.ecore#//NamedElement/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="realtimeStatechart.gmftool#//@palette/@tools.0/@tools.2"/>
      <diagramNode
          href="realtimeStatechart.gmfgraph#Clock"/>
    </ownedChild>
  </nodes>
  <links>
    <domainMetaElement
        href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/Transition"/>
    <labelMappings
        xsi:type="gmfmap:ExpressionLabelMapping">
      <diagramLabel
          href="realtimeStatechart.gmfgraph#TransitionClockResetExpr"/>
      <viewExpression
          body="self.clockResets->iterate(clockReset; result : String = '' | &#xA;(&#xA;&#x9;if result = '' then '' else result.concat(', ') endif&#xA;).concat(if clockReset.name.oclIsUndefined() then 'null' else clockReset.name endif).concat(':=0'))"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:ExpressionLabelMapping">
      <diagramLabel
          href="realtimeStatechart.gmfgraph#TransitionAbsoluteDeadlineExpr"/>
      <viewExpression
          body="self.absoluteDeadlines->iterate(absoluteDeadline; result : String = '' | &#xA;(&#xA;&#x9;(if result = '' then '' else result.concat(', ') endif).concat(&#xA;&#x9;&#x9;&#x9;(if absoluteDeadline.clock.name.oclIsUndefined() then '' else absoluteDeadline.clock.name endif).concat(' in [').concat(&#xA;&#x9;&#x9;&#x9;&#x9;if absoluteDeadline.lowerBound.oclIsUndefined() then 'null' else absoluteDeadline.lowerBound.toString() endif&#xA;&#x9;&#x9;&#x9;).concat(',').concat(&#xA;&#x9;&#x9;&#x9;&#x9;if absoluteDeadline.upperBound.oclIsUndefined() then 'null' else absoluteDeadline.upperBound.toString() endif&#xA;&#x9;&#x9;&#x9;).concat(']')&#xA;&#x9;)&#xA;))&#xA;"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:ExpressionLabelMapping">
      <diagramLabel
          href="realtimeStatechart.gmfgraph#TransitionRelativeDeadlineExpr"/>
      <viewExpression
          body="'['.concat(&#xA;&#x9;if self.relativeDeadline.lowerBound.oclIsUndefined() then 'null' else self.relativeDeadline.lowerBound.toString() endif&#xA;).concat(',').concat(&#xA;&#x9;if self.relativeDeadline.upperBound.oclIsUndefined() then 'null' else self.relativeDeadline.upperBound.toString() endif&#xA;).concat(']')"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:ExpressionLabelMapping">
      <diagramLabel
          href="realtimeStatechart.gmfgraph#TransitionEventExpr"/>
      <viewExpression
          body="'{'.concat(&#xA;&#x9;OrderedSet { OrderedSet { self.triggerMessageEvent }, OrderedSet{ self.raiseMessageEvent } }->iterate(events; eventsResults : String = '' | (&#xA;&#x9;&#x9;(if eventsResults = '' then '' else eventsResults.concat('} / {') endif).concat(&#xA;&#x9;&#x9;&#x9;events->iterate(event; singleEventResult : String = '' | &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(if singleEventResult = '' then '' else singleEventResult.concat(', ') endif).concat(event.message.callee.oclAsType(msgiface::MessageType).name).concat('(').concat(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;event.message.ownedParameterBindings->iterate(binding; bindingResult : String = '' | (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(if bindingResult = '' then '' else bindingResult.concat(', ') endif).concat(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;binding.valueExpression.oclAsType(modeling::expressions::LiteralExpression).value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;).concat(':').concat(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;binding.valueExpression.oclAsType(modeling::expressions::LiteralExpression).valueType.name&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)).concat(')')&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))&#xA;&#x9;))&#xA;).concat('}')&#xA;&#xA;&#xA;"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:ExpressionLabelMapping">
      <diagramLabel
          href="realtimeStatechart.gmfgraph#TransitionGuardExpr"/>
      <viewExpression
          body="'guard'"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:ExpressionLabelMapping">
      <diagramLabel
          href="realtimeStatechart.gmfgraph#TransitionActionExpr"/>
      <viewExpression
          body="'transitionAction'"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:ExpressionLabelMapping">
      <diagramLabel
          href="realtimeStatechart.gmfgraph#TransitionClockConstraintExpr"/>
      <viewExpression
          body="'['.concat(&#xA;&#x9;self.clockConstraints->iterate(clockConstraint; result : String = '' | (&#xA;&#x9;&#x9;(if result = '' then '' else result.concat(', ') endif).concat(&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;if clockConstraint.clock.oclIsUndefined() then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;'null'&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;clockConstraint.clock.name&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;).concat(' ').concat(&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;if clockConstraint.operator.oclIsUndefined() then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;'null'&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;let array : Set(Tuple(s : String, d : modeling::expressions::ComparingOperator)) = Set{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Tuple{s = '&lt;', d = modeling::expressions::ComparingOperator::LESS },&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Tuple{s = '≤', d = modeling::expressions::ComparingOperator::LESS_OR_EQUAL },&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Tuple{s = '=', d = modeling::expressions::ComparingOperator::EQUAL },&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Tuple{s = '≥', d = modeling::expressions::ComparingOperator::GREATER_OR_EQUAL },&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Tuple{s = '>', d = modeling::expressions::ComparingOperator::GREATER },&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Tuple{s = '≠', d = modeling::expressions::ComparingOperator::UNEQUAL },&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Tuple{s = 'regexp', d = modeling::expressions::ComparingOperator::REGULAR_EXPRESSION }&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} in array->any(t | t.d = clockConstraint.operator).s&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#xA;&#x9;&#x9;&#x9;).concat(' ').concat(&#xA;&#x9;&#x9;&#x9;&#x9;if clockConstraint.bound.oclIsUndefined() then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;'null'&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;clockConstraint.bound.toString()&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;)&#xA;&#x9;))&#xA;).concat(']')"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:ExpressionLabelMapping">
      <diagramLabel
          href="realtimeStatechart.gmfgraph#TransitionSafetyTransition"/>
      <viewExpression
          body="if not safe then&#xD;&#xA;&#x9;''&#xD;&#xA;else&#xD;&#xA;&#x9;'&lt;&lt;safetyTransition>>'&#xD;&#xA;endif"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:ExpressionLabelMapping">
      <diagramLabel
          href="realtimeStatechart.gmfgraph#TransitionSynchronization"/>
      <viewExpression
          body="if self.synchronization.oclIsUndefined() then&#xA;&#x9;''&#xA;else&#xA;&#x9;self.synchronization.callee.oclAsType(SynchronizationChannel).name.concat('(').concat(&#xA;&#x9;&#x9;self.synchronization.ownedParameterBindings->iterate(&#xA;&#x9;&#x9;&#x9;binding; result : String = '' | (if result = '' then '' else result.concat(', ') endif).concat(&#xA;&#x9;&#x9;&#x9;&#x9;if binding.valueExpression.oclIsUndefined() then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;'null'&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;'&quot;'.concat(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if binding.valueExpression.oclAsType(modeling::expressions::LiteralExpression).value.oclIsUndefined() then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'null'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;binding.valueExpression.oclAsType(modeling::expressions::LiteralExpression).value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;).concat('&quot; : ').concat(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if binding.valueExpression.oclAsType(modeling::expressions::LiteralExpression).valueType.oclIsUndefined() then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'null'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;binding.valueExpression.oclAsType(modeling::expressions::LiteralExpression).valueType.name&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;)&#xA;&#x9;).concat(')').concat(&#xA;&#x9;&#x9;if self.synchronization.kind = SynchronizationKind::SEND then&#xA;&#x9;&#x9;&#x9;'!'&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;'?'&#xA;&#x9;&#x9;endif&#xA;&#x9;)&#xA;endif"/>
    </labelMappings>
    <containmentFeature
        href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/FujabaRealtimeStatechart/transitions"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="realtimeStatechart.gmftool#//@palette/@tools.0/@tools.1"/>
    <diagramLink
        href="realtimeStatechart.gmfgraph#Transition"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/Transition/source"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/Transition/target"/>
  </links>
  <diagram>
    <diagramCanvas
        href="realtimeStatechart.gmfgraph#statechart"/>
    <domainModel
        href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart"/>
    <domainMetaElement
        href="../../de.uni_paderborn.fujaba.muml.model/model/muml.ecore#//model/realtimestatechart/FujabaRealtimeStatechart"/>
    <palette
        href="realtimeStatechart.gmftool#//@palette"/>
  </diagram>
</gmfmap:Mapping>
