// automatically generated by Xtext
grammar org.muml.graphviz.dot.xtext.DotLanguage with org.eclipse.xtext.common.Terminals

import "http://www.muml.org/graphviz/dot/1.0.0" as dot
import "http://www.muml.org/graphviz/common/1.0.0" as common
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
//import "http://www.storydriven.org/core/0.3.1" as core
//import "platform:/resource/de.uni_paderborn.fujaba.graphviz/model/graphviz.ecore#//dot" as dot
//import "platform:/resource/de.uni_paderborn.fujaba.graphviz/model/graphviz.ecore#//common" as common

DotGraph returns dot::DotGraph:
	{dot::DotGraph}
	(
		((directedGraph ?= 'digraph') | 'graph') (id=DotID)?
		| ('subgraph' (id=DotID)?)
	)
	'{'
		(('graph' '[' graphSettings += Setting  (',' graphSettings += Setting)* ']' ';'?)
			| ('node' '[' nodeSettings += Setting (',' nodeSettings += Setting)* ']' ';'?)
			| ('edge' '[' edgeSettings += Setting (',' edgeSettings += Setting)* ']' ';'?)
			| subgraphs += DotGraph | nodes += DotNode | edges += DotEdge
		)*
	'}'
;

DotNode returns dot::DotNode:
	name=DotID ('[' settings += Setting (',' settings += Setting)* ']')? ';'?
;

DotEdge returns dot::DotEdge:
	(DirectedDotEdge | UndirectedDotEdge)
;

DirectedDotEdge returns dot::DirectedDotEdge:
	source=[dot::DotNode|DotID] '->' target=[dot::DotNode|DotID]
	('[' settings += Setting (',' settings += Setting)* ']')? ';'?
;

UndirectedDotEdge returns dot::UndirectedDotEdge:
	source=[dot::DotNode|DotID] '--' target=[dot::DotNode|DotID]
	('[' settings += Setting (',' settings += Setting)* ']')? ';'?
;

Setting returns dot::Setting:
	attribute=DotID '=' value=DotID
;

DotID returns ecore::EString:
	// TODO: implement correct id rules from the graphviz spec
	// (for instance, quotes can also be escaped using \" ...)
	DOTSTRINGTERM | NUMPREFIXEDID | Number | ID // Number is a bit too coarse, but well...
;

terminal NUMPREFIXEDID:
	INT ID
;

terminal DOTSTRINGTERM:
	'"' ( !('"') )* '"'
;

Number returns ecore::EDouble:
	'-'? (DOUBLE | INT)
;

terminal DOUBLE returns ecore::EDouble:
	INT+ '.' INT+
;