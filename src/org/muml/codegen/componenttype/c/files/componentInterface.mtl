[comment encoding = UTF-8 /]
[**
 * The documentation of the module generate_rtsc.
 */]
[module componentInterface('http://www.fujaba.de/muml/connector/0.4.0', 'http://www.fujaba.de/muml/behavior/0.4.0',
				'http://www.storydriven.org/core/0.3.1',
				'http://www.fujaba.de/muml/actionlanguage/0.4.0',
				'http://www.fujaba.de/muml/msgtype/0.4.0',
				'http://www.fujaba.de/muml/types/0.4.0',
				'http://www.fujaba.de/modelinstance/0.4.0',
				'http://www.fujaba.de/muml/component/0.4.0',
				'http://www.fujaba.de/muml/instance/0.4.0',
				'http://www.fujaba.de/muml/realtimestatechart/0.4.0',
				'http://www.fujaba.de/muml/psm/0.4.0/')]
[import org::muml::codegen::componenttype::c::queries::stringQueries]
[import org::muml::codegen::componenttype::c::queries::modelQueries]
[import org::muml::codegen::componenttype::c::actionlanguage::expression]
[import org::muml::codegen::componenttype::c::actionlanguage::operation_queries]
[import org::muml::codegen::componenttype::c::files::RealtimeStatechart]


[template public generate_ComponentInterface(component : Component, path : String, useSubDir : Boolean)]
	[file (path+getFileName(component, true, useSubDir), false, 'UTF-8')]
	/**
 * @file 
 * @author generated by Fraunhofer IEM
 * @brief Specification of Component of Type: [component.getName()/]
 * @details This files contains a description of the [component.getName()/] in form of the [getClassName(component)/]
 * 			and all methods which can be executed on an Instance of this Component
 */
		#ifndef [getHeaderDefineComponentInterface(component)/]
		#define [getHeaderDefineComponentInterface(component)/]

#ifdef __cplusplus
  extern "C" {
#endif		[includes(component, useSubDir)/]
			/*****
 			 *
 			 *  Forward Delcaration of Container Functions
 			 *
 			 */		
			[generate_ContainerFunctionDefinitions(component)/]
	
			/*****
 			 *
 			 *  Component Functions
 			 *
 			 */
			[generate_ComponentHeader_New(component, useSubDir)/]
		
			[initialize(component)/]
	
[if ((component.componentKind = ComponentKind::SOFTWARE_COMPONENT) or (component.componentKind = ComponentKind::HYBRID_COMPONENT))]
	
			/*****
 			 *
 			 *  RealtimeStatechart Functions
 			 *
 */

			[generate_RTSCHeader_New(component, component.behavior.oclAsType(RealtimeStatechart), useSubDir)/]
[/if]





#ifdef __cplusplus
  }
#endif
		#endif /* [getHeaderDefineComponentInterface(component)/] */
	[/file]
[/template]



[**
 * @param component
 * @param statechart
*/]
[template public includes(component : Component, useSubDir: Boolean) post(trim())]
	// Library
	#include "[if (useSubDir)]../types/[/if]standardTypes.h"
	#include "[if (useSubDir)]../types/[/if]customTypes.h"
	[if (component.eAllContents(DiscretePort)->size()>0)]
		#include "[if (useSubDir)]../lib/[/if]port.h"
		#include "[if (useSubDir)]../messages/[/if]messages_types.h"

	[/if]
	#include "[if (useSubDir)]../lib/[/if]clock.h"
	#include "[if (useSubDir)]../lib/[/if]Debug.h"
[if ((component.componentKind = ComponentKind::SOFTWARE_COMPONENT) or (component.componentKind = ComponentKind::HYBRID_COMPONENT))]


	[if component.oclIsKindOf(AtomicComponent) and component.componentKind<>ComponentKind::CONTINUOUS_COMPONENT]
	[let rtsc : RealtimeStatechart = component.oclAsType(AtomicComponent).behavior.oclAsType(RealtimeStatechart)]
		[if ((rtsc.eAllContents(Operation)->asSet() - rtsc.eAllContents(APICall)->asSet())->size() > 0)]#include "../operations/operations.h"[/if]
		[if (rtsc.eAllContents(APICall)->size() > 0)]#include "../apiCallCode/implementations.h"[/if]
	[/let]	
[/if]
	[if (component.eAllContents(HybridPort)->size() > 0)]
		//#include "[if (useSubDir)]../[/if][getFileName4ContinuousImpl(true, useSubDir)/]"	
[/if]

	[if (component.oclIsKindOf(AtomicComponent))]
	[let rtsc : RealtimeStatechart = component.oclAsType(AtomicComponent).behavior]
		//#include "[if (useSubDir)]../[/if][getFileName(rtsc, true,useSubDir)/]"	
	[/let]
	[/if]
	[/if]
[/template]

